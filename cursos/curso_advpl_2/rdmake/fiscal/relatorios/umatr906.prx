#INCLUDE "UMATR906.CH"
#INCLUDE "PROTHEUS.CH"

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³FUNCAO    ³ MATR906  ³ Autor ³ Liber de Esteban      ³ Data ³ 15/07/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Relatorio PIS e COFINS                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAFIS                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
USER FUNCTION UMATR906()

Local oReport

u_GerA0003(ProcName())

AjustaSX1()

If FindFunction("TRepInUse") .And. TRepInUse()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Interface de impressao                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oReport := ReportDef()
	oReport:PrintDialog()
Else
	MATR906R3()
EndIf

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³FUNCAO    ³ReportDef ³ Autor ³ Liber de Esteban      ³ Data ³ 15/07/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³DESCRICAO ³ Definicao do componente                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportDef()

Local oReport
Local oPISCOF1, oPISCOF2, oPISCOF3
Local oTotAliq, oContr, oComple, oResumo
Local oResCFOP, oResAliq, oResMov
Local oBreakRFS

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criacao do componente de impressao                                      ³
//³                                                                        ³
//³TReport():New                                                           ³
//³ExpC1 : Nome do relatorio                                               ³
//³ExpC2 : Titulo                                                          ³
//³ExpC3 : Pergunte                                                        ³
//³ExpB4 : Bloco de codigo que sera executado na confirmacao da impressao  ³
//³ExpC5 : Descricao                                                       ³
//³                                                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

oReport := TReport():New("MATR906",STR0115,"MTR906",{|oReport| ReportPrint(oReport)},STR0114) //"Relatorio - (PIS/COFINS)"###"Este programa emite Relatorio das Contribuicoes ao PIS e COFINS"

oReport:SetLandscape()

Pergunte("MTR906",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao PIS/COFINS ordenada por CFOP                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oPISCOF1 := TRSection():New(oReport,STR0135,{"TRB"},{STR0116,STR0060,STR0061}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Relatorio de PIS/COFINS"###"CFOP"###"Num. NF + Serie + Emissao"###"Emissao + Num. NF + Serie"

TRCell():New(oPISCOF1,"TIPO"     ,"TRB",STR0141,/*Picture*/				 ,06					  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF1,"ES"       ,"TRB",STR0140,/*Picture*/				 ,01						  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF1,"CFOP"     ,"TRB",STR0116,/*Picture*/				 ,04					  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF1,"PRODUTO"  ,"TRB",STR0062,/*Picture*/				 ,TamSx3("D2_COD")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Produto"
TRCell():New(oPISCOF1,"NCM"      ,"TRB",STR0128,/*Picture*/				 ,TamSx3("B1_POSIPI")[1] ,/*lPixel*/,/*{|| code-block de impressao }*/) //"NCM"
TRCell():New(oPISCOF1,"VALORCONT","TRB",STR0063,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor Contabil"
TRCell():New(oPISCOF1,"ZFRANCA"  ,"TRB",STR0064,PesqPict("SD2","D2_DESCZFR"),TamSx3("D2_DESCZFR")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Zona Franca"
TRCell():New(oPISCOF1,"ALIQ"     ,"TRB",STR0065,"@E 99.99"					 ,05					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Aliquota"
TRCell():New(oPISCOF1,"VALDEBT"  ,     ,STR0066,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISDENT,  TRB->PISDSAI)   , IIF(TRB->ES == "E" ,TRB->COFDENT  ,TRB->COFDSAI))   }) //"Val. Contr. Debito"
TRCell():New(oPISCOF1,"VALCRED"  ,     ,STR0067,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISCENT,  TRB->PISCSAI)   , IIF(TRB->ES == "E" ,TRB->COFCENT  ,TRB->COFCSAI))   }) //"Val. Contr Credito"
TRCell():New(oPISCOF1,"BASEDEBT" ,     ,STR0068,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E" ,TRB->BASCODENT,TRB->BASCODSAI)) }) //"Base Contr. Debito"
TRCell():New(oPISCOF1,"BASECRED" ,     ,STR0069,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E" ,TRB->BASCOCENT,TRB->BASCOCSAI)) }) //"Base Contr Credito"
TRCell():New(oPISCOF1,"NUMNF"    ,"TRB",STR0070,/*Picture*/				 ,TamSx3("D2_DOC")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Documento"
TRCell():New(oPISCOF1,"SERIE"    ,"TRB",STR0071,/*Picture*/				 ,TamSx3("D2_SERIE")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Serie"
TRCell():New(oPISCOF1,"EMISSAO"  ,"TRB",STR0072,PesqPict("SD2","D2_EMISSAO"),TamSx3("D2_EMISSAO")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Emissao"
TRCell():New(oPISCOF1,"CLIFOR"   ,"TRB",STR0129,/*Picture*/				 ,40					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Cliente/Fornecedor"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao PIS/COFINS ordenada por NF                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oPISCOF2 := TRSection():New(oReport,STR0136,{"TRB"},{"CFOP",STR0060,STR0061}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Relatorio de PIS/COFINS"###"Num. NF + Serie + Emissao"###"Emissao + Num. NF + Serie"

TRCell():New(oPISCOF2,"TIPO"     ,"TRB",STR0141,/*Picture*/				 ,06					  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF2,"ES"       ,"TRB",STR0140,/*Picture*/				 ,1						  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF2,"NUMNF"    ,"TRB",STR0070,/*Picture*/				 ,TamSx3("D2_DOC")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Documento"
TRCell():New(oPISCOF2,"SERIE"    ,"TRB",STR0071,/*Picture*/				 ,TamSx3("D2_SERIE")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Serie"
TRCell():New(oPISCOF2,"EMISSAO"  ,"TRB",STR0072,PesqPict("SD2","D2_EMISSAO"),TamSx3("D2_EMISSAO")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Emissao"
TRCell():New(oPISCOF2,"CLIFOR"   ,"TRB",STR0129,/*Picture*/				 ,40					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Cliente/Fornecedor"
TRCell():New(oPISCOF2,"PRODUTO"  ,"TRB",STR0062,/*Picture*/				 ,TamSx3("D2_COD")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Produto"
TRCell():New(oPISCOF2,"NCM"      ,"TRB",STR0128,/*Picture*/				 ,TamSx3("B1_POSIPI")[1] ,/*lPixel*/,/*{|| code-block de impressao }*/) //"NCM"
TRCell():New(oPISCOF2,"VALORCONT","TRB",STR0063,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor Contabil"
TRCell():New(oPISCOF2,"ZFRANCA"  ,"TRB",STR0064,PesqPict("SD2","D2_DESCZFR"),TamSx3("D2_DESCZFR")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Zona Franca"
TRCell():New(oPISCOF2,"ALIQ"     ,"TRB",STR0065,"@E 99.99"					 ,05					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Aliquota"
TRCell():New(oPISCOF2,"VALDEBT"  ,     ,STR0066,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISDENT,  TRB->PISDSAI)   , IIF(TRB->ES == "E" ,TRB->COFDENT  ,TRB->COFDSAI))   }) //"Val. Contr. Debito"
TRCell():New(oPISCOF2,"VALCRED"  ,     ,STR0067,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISCENT,  TRB->PISCSAI)   , IIF(TRB->ES == "E" ,TRB->COFCENT  ,TRB->COFCSAI))   }) //"Val. Contr Credito"
TRCell():New(oPISCOF2,"BASEDEBT" ,     ,STR0068,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E" ,TRB->BASCODENT,TRB->BASCODSAI)) }) //"Base Contr. Debito"
TRCell():New(oPISCOF2,"BASECRED" ,     ,STR0069,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E" ,TRB->BASCOCENT,TRB->BASCOCSAI)) }) //"Base Contr Credito"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao PIS/COFINS ordenada por Data da NF                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oPISCOF3 := TRSection():New(oReport,STR0137,{"TRB"},{"CFOP",STR0060,STR0061}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Relatorio de PIS/COFINS"###"Num. NF + Serie + Emissao"###"Emissao + Num. NF + Serie"

TRCell():New(oPISCOF3,"TIPO"     ,"TRB",STR0141,/*Picture*/				 ,06					  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF3,"ES"       ,"TRB",STR0140,/*Picture*/				 ,1						  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oPISCOF3,"EMISSAO"  ,"TRB",STR0072,PesqPict("SD2","D2_EMISSAO"),TamSx3("D2_EMISSAO")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Emissao"
TRCell():New(oPISCOF3,"CLIFOR"   ,"TRB",STR0129,/*Picture*/				 ,40					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Cliente/Fornecedor"
TRCell():New(oPISCOF3,"NUMNF"    ,"TRB",STR0070,/*Picture*/				 ,TamSx3("D2_DOC")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Documento"
TRCell():New(oPISCOF3,"SERIE"    ,"TRB",STR0071,/*Picture*/				 ,TamSx3("D2_SERIE")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Serie"
TRCell():New(oPISCOF3,"PRODUTO"  ,"TRB",STR0062,/*Picture*/				 ,TamSx3("D2_COD")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Produto"
TRCell():New(oPISCOF3,"NCM"      ,"TRB",STR0128,/*Picture*/				 ,TamSx3("B1_POSIPI")[1] ,/*lPixel*/,/*{|| code-block de impressao }*/) //"NCM"
TRCell():New(oPISCOF3,"VALORCONT","TRB",STR0063,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor Contabil"
TRCell():New(oPISCOF3,"ZFRANCA"  ,"TRB",STR0064,PesqPict("SD2","D2_DESCZFR"),TamSx3("D2_DESCZFR")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Zona Franca"
TRCell():New(oPISCOF3,"ALIQ"     ,"TRB",STR0065,"@E 99.99"					 ,05					  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Aliquota"
TRCell():New(oPISCOF3,"VALDEBT"  ,     ,STR0066,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISDENT,  TRB->PISDSAI)   , IIF(TRB->ES == "E" ,TRB->COFDENT  ,TRB->COFDSAI))   }) //"Val. Contr. Debito"
TRCell():New(oPISCOF3,"VALCRED"  ,     ,STR0067,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->PISCENT,  TRB->PISCSAI)   , IIF(TRB->ES == "E" ,TRB->COFCENT  ,TRB->COFCSAI))   }) //"Val. Contr Credito"
TRCell():New(oPISCOF3,"BASEDEBT" ,     ,STR0068,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E" ,TRB->BASCODENT,TRB->BASCODSAI)) }) //"Base Contr. Debito"
TRCell():New(oPISCOF3,"BASECRED" ,     ,STR0069,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	  ,/*lPixel*/,{|| IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E" ,TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E" ,TRB->BASCOCENT,TRB->BASCOCSAI)) }) //"Base Contr Credito"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao de totalizacao das aliquotas na quebra de              ³
//³ Entrada/Saida e PIS/COFINS                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oTotAliq := TRSection():New(oReport,STR0073,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Total da Aliquota"

TRCell():New(oTotAliq,"DESCRI"   ,,STR0142,/*Picture*/					 ,27					 ,/*lPixel*/,/*{|| code-block de impressao }*/) // "Descricao"
TRCell():New(oTotAliq,"VALORCONT",,STR0063,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	 ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor Contabil"
TRCell():New(oTotAliq,"ZFRANCA"  ,,STR0064,PesqPict("SD2","D2_DESCZFR"),TamSx3("D2_DESCZFR")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Zona Franca"
TRCell():New(oTotAliq,"ALIQ"     ,,STR0139,/*Picture*/					 ,08					 ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oTotAliq,"VALDEBT"  ,,STR0066,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	 ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Val. Contr. Debito"
TRCell():New(oTotAliq,"VALCRED"  ,,STR0067,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	 ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Val. Contr Credito"
TRCell():New(oTotAliq,"BASEDEBT" ,,STR0068,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	 ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Base Contr. Debito"
TRCell():New(oTotAliq,"BASECRED" ,,STR0069,PesqPict("SD2","D2_TOTAL")	 ,TamSx3("D2_TOTAL")[1]	 ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Base Contr Credito"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao dos valores de Contribuicao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oContr := TRSection():New(oReport,STR0074,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Contribuição"

TRCell():New(oContr,"CFOP"     ,,STR0116,/*Picture*/				  ,06					   ,/*lPixel*/,/*{|| code-block de impressao }*/) //"CFOP"
TRCell():New(oContr,"VALOR"    ,,STR0075,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor"
TRCell():New(oContr,"CD"       ,,STR0138,/*Picture*/				  ,03					   ,/*lPixel*/,/*{|| code-block de impressao }*/) // "Credito/Debito"
TRCell():New(oContr,"VALORCONT",,STR0063,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oContr,"ZFRANCA"  ,,STR0064,PesqPict("SD2","D2_DESCZFR"),TamSx3("D2_DESCZFR")[1],/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oContr,"ALIQ"     ,,STR0139,/*Picture*/				  ,08					   ,/*lPixel*/,/*{|| code-block de impressao }*/) // "Aliquota"
TRCell():New(oContr,"VALDEBT"  ,,STR0066,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oContr,"VALCRED"  ,,STR0067,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oContr,"BASEDEBT" ,,STR0068,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/)
TRCell():New(oContr,"BASECRED" ,,STR0069,PesqPict("SD2","D2_TOTAL")  ,TamSx3("D2_TOTAL")[1]  ,/*lPixel*/,/*{|| code-block de impressao }*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao de Informacoes Complementares da Apuracao.             ³
//³ Busca informacoes do arquivo de apuracao, se ele existir     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oComple := TRSection():New(oReport,STR0076,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Informações Complementares da Apuração"

TRCell():New(oComple,"DESCR",,STR0077,/*Picture*/,70,/*lPixel*/,/*{|| code-block de impressao }*/) //"Dsecrição"
TRCell():New(oComple,"VALOR",,STR0075,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao Resumo de movimentacoes de cada filial                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oResumo := TRSection():New(oReport,STR0117,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Resumo"

TRCell():New(oResumo,"DESCR" ,,STR0078,/*Picture*/,30,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valores para Cálculo"
TRCell():New(oResumo,"TRIBUT",,STR0079,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Tributado"
TRCell():New(oResumo,"OUTROS",,STR0080,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Outros"
TRCell():New(oResumo,"TOTAL" ,,STR0088,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Criacao das Secoes para totalização das filiais              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao Resumo por CFOP                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oResCFOP := TRSection():New(oReport,STR0081,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Resumo por CFOP"

TRCell():New(oResCFOP,"CFOP"     ,     ,STR0116,/*Picture*/,04,/*lPixel*/,/*{|| code-block de impressao }*/) //"CFOP"
TRCell():New(oResCFOP,"X5_DESCRI","SX5",STR0082,/*Picture*/,40,/*lPixel*/,/*{|| code-block de impressao }*/) //"Descrição"
TRCell():New(oResCFOP,"FILIAL"   ,     ,STR0083,/*Picture*/,02,/*lPixel*/,/*{|| code-block de impressao }*/) //"Filial"
TRCell():New(oResCFOP,"BASECNT"  ,     ,STR0084,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Base da Contribuição"
TRCell():New(oResCFOP,"VALORCNT" ,     ,STR0085,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor da Contribuição"

// Totaliza Base e Valor da contribuicao por CFOP
oBreakRFS := TRBreak():New(oResCFOP,oResCFOP:Cell("CFOP"),STR0086,.F.) //"Total do CFOP"
TRFunction():New(oResCFOP:Cell("BASECNT"),NIL,"SUM",oBreakRFS,/*cTitle*/,/*cPicture*/,/*{|| code-block de impressao }*/,.F.,.F.,.F.)
TRFunction():New(oResCFOP:Cell("VALORCNT"),NIL,"SUM",oBreakRFS,/*cTitle*/,/*cPicture*/,/*{|| code-block de impressao }*/,.F.,.F.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao Resumo por Aliquota                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oResAliq := TRSection():New(oReport,STR0087,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Filiais por Aliquota"

TRCell():New(oResAliq,"FILIAL",,STR0083,/*Picture*/,08,/*lPixel*/,/*{|| code-block de impressao }*/) //"Filial"
TRCell():New(oResAliq,"ALIQ"  ,,STR0065,"@E 99.99",5,/*lPixel*/,/*{|| code-block de impressao }*/) //"Aliquota"
TRCell():New(oResAliq,"VALOR" ,,STR0075,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Valor"

//Totaliza Valor por Aliquota
oResAliq:SetTotalText(STR0088) //"Total"
oResAliq:SetTotalInLine(.F.)
TRFunction():New(oResAliq:Cell("VALOR"),NIL,"SUM",/*oBreak*/,/*cTitle*/,/*cPicture*/,/*{|| code-block de impressao }*/,.T.,.F.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Secao Resumo de movimentacoes de todas as filiais            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oResMov := TRSection():New(oReport,STR0118,{},{}/*{Array com as ordens do relatório}*/,/*Campos do SX3*/,/*Campos do SIX*/) //"Resumo Por Movimento Processado"

TRCell():New(oResMov,"DESCR" ,,STR0078,/*Picture*/        ,30,/*lPixel*/,/*{|| code-block de impressao }*/) //"Valores para Cálculo"
TRCell():New(oResMov,"TRIBUT",,STR0079,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Tributado"
TRCell():New(oResMov,"OUTROS",,STR0080,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Outros"
TRCell():New(oResMov,"TOTAL" ,,STR0088,PesqPict("SD2","D2_TOTAL"),TamSx3("D2_TOTAL")[1],/*lPixel*/,/*{|| code-block de impressao }*/) //"Total"

Return(oReport)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³ReportPrint³ Autor ³Liber de Esteban       ³ Data ³18/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³A funcao estatica ReportDef devera ser criada para todos os ³±±
±±³          ³relatorios que poderao ser agendados pelo usuario.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ReportPrint(oReport)

Local oBreakDt, oBreakCf, oBreakEs, oBreakTp

Local nOrdem 		:= oReport:Section(1):GetOrder()
Local oPISCOF		:= oReport:Section(nOrdem)
Local oContr 		:= oReport:Section(5)
Local oComple		:= oReport:Section(6)
Local oResumo		:= oReport:Section(7)

Local aAliqEs		:= {}
Local aAliqCFGer	:= {}
Local aCFOPCOFE   	:= {}
Local aCFOPCOFS   	:= {}
Local aTAlCOFE		:= {}
Local aTAlCOFS		:= {}
Local aCFOPPISE   	:= {}
Local aCFOPPISS		:= {}
Local aTAlPISE		:= {}
Local aTAlPISS		:= {}
Local aTotResumo	:= {}
Local aAreaSM0   	:= SM0->(GetArea())

Local nContCp
Local nPosAliq		:= 0
Local nPosAliqEs	:= 0
Local nX			:= 0
Local nY			:= 0
Local nTeste		:= 0
Local nScanPis   	:= 0
Local nScanCof   	:= 0
Local nAliqP		:= 0

Local cFilIni     	:= ""
Local cFilFin     	:= ""
Local cCfopAnt 		:= ""
Local cEsAnt		:= ""
Local cTipoAnt		:= ""
Local cTipo			:= ""
Local cContArq
Local cArqCp
Local cLinArq

Local lFirstReg		:= .T.
Local lResumo		:= .F.
Local cEs			:= ""

Private lApurCof	:= .F.
Private lApurPis	:= .F.
Private lCfop		:= .T.
Private lImpe		:= .T.

Private aResumo		:= {}
Private aTApurPIS  	:= {0,0,0,0,0,0,0}
Private aTApurCOF  	:= {0,0,0,0,0,0,0}
Private aRelImp		:= MaFisRelImp("MT100",{ "SD1" })
Private aRelImp2	:= MaFisRelImp("MT100",{ "SD2" })

Private cCpVlPisEn 	:= ""
Private cCpBsPisEn 	:= ""
Private cCpVlPisSa 	:= ""
Private cCpBsPisSa 	:= ""
Private cCpAlPisSa 	:= ""
Private cCpAlPisEn 	:= ""
Private cCpVlCofEn 	:= ""
Private cCpBsCofEn 	:= ""
Private cCpVlCofSa 	:= ""
Private cCpBsCofSa 	:= ""
Private cCpAlCofEn 	:= ""
Private cCpAlCofSa 	:= ""

Private nPsVlPisEn 	:= 0
Private nPsBsPisEn 	:= 0
Private nPsVlPisSa 	:= 0
Private nPsBsPisSa 	:= 0
Private nPsAlPisEn 	:= 0
Private nPsAlPisSa 	:= 0
Private nPsVlCofEn 	:= 0
Private nPsBsCofEn 	:= 0
Private nPsVlCofSa 	:= 0
Private nPsBsCofSa 	:= 0
Private nPsAlCofEn 	:= 0
Private nPsAlCofSa 	:= 0
Private nTDedPIS	:= 0
Private nTDedCOF	:= 0

Private cArqTemp	:= ""
Private aArqTemp	:= {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do PIS - Entrada                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_BASEPS2"} ) )
	cCpBsPisEn := aRelImp[nScanPis,2]
	nPsBsPisEn := SD1->(FieldPos(cCpBsPisEn))
EndIf
If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_VALPS2"} ) )
	cCpVlPisEn := aRelImp[nScanPis,2]
	nPsVlPisEn := SD1->(FieldPos(cCpVlPisEn))
EndIf
If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQPS2"} ) )
	cCpAlPisEn := aRelImp[nScanPis,2]
	nPsAlPisEn := SD1->(FieldPos(cCpAlPisEn))
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do PIS - Saida                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_BASEPS2"} ) )
	cCpBsPisSa := aRelImp2[nScanPis,2]
	nPsBsPisSa := SD2->(FieldPos(cCpBsPisSa))
EndIf
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_VALPS2"} ) )
	cCpVlPisSa := aRelImp2[nScanPis,2]
	nPsVlPisSa := SD2->(FieldPos(cCpVlPisSa))
EndIf 	
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_ALIQPS2"} ) )
	cCpAlPisSa := aRelImp2[nScanPis,2]
	nPsAlPisSa := SD2->(FieldPos(cCpAlPisSa))
EndIf 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do COF - Entrada                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_BASECF2"} ) )
	cCpBsCofEn := aRelImp[nScanCof,2]
	nPsBsCofEn := SD1->(FieldPos(cCpBsCofEn))
EndIf 	
If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_VALCF2"} ) )
	cCpVlCofEn := aRelImp[nScanCof,2]
	nPsVlCofEn := SD1->(FieldPos(cCpVlCofEn))
EndIf 	
If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQCF2"} ) )
	cCpAlCofEn := aRelImp[nScanCof,2]
	nPsAlCofEn := SD1->(FieldPos(cCpAlCofEn))
EndIf 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do COF - Saida                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_BASECF2"} ) )
	cCpBsCofSa := aRelImp2[nScanCof,2]
	nPsBsCofSa := SD2->(FieldPos(cCpBsCofSa))
EndIf 	
If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_VALCF2"} ) )
	cCpVlCofSa := aRelImp2[nScanCof,2]
	nPsVlCofSa := SD2->(FieldPos(cCpVlCofSa))
EndIf 	
If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_ALIQCF2"} ) )
	cCpAlCofSa := aRelImp2[nScanCof,2]
	nPsAlCofSa := SD2->(FieldPos(cCpAlCofSa))
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Array para montagem de tabela temporaria (TRB)          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aArqTemp,{"NUMNF"		,"C",TamSx3("D2_DOC")[1],0})
AADD(aArqTemp,{"SERIE"		,"C",TamSx3("D2_SERIE")[1],0})
AADD(aArqTemp,{"EMISSAO"   ,"D",TamSx3("D2_EMISSAO")[1],0})
AADD(aArqTemp,{"TIPO"		,"C",03,0})
AADD(aArqTemp,{"CFOP"	    ,"C",04,0})
AADD(aArqTemp,{"PRODUTO"	,"C",TamSx3("D2_COD")[1],0})
AADD(aArqTemp,{"NCM"		,"C",TamSx3("B1_POSIPI")[1],0})
AADD(aArqTemp,{"VALORCONT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"ZFRANCA"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"ALIQ"		,"N",05,2})
AADD(aArqTemp,{"PISCSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"PISDSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASPICSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASPIDSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"PISCENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"PISDENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASPICENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASPIDENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"COFCSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"COFDSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASCOCSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASCODSAI"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"COFCENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"COFDENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASCOCENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"BASCODENT"	,"N",TamSx3("D2_TOTAL")[1],TamSx3("D2_TOTAL")[2]})
AADD(aArqTemp,{"ES"			,"C",01,0})
AADD(aArqTemp,{"CLIFOR"		,"C",40,0})
AADD(aArqTemp,{"PAUTA"		,"C",01,0})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Array para impressao do resumo por movimento processado ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aTotResumo,{STR0120,0,0}) //"Saidas"
AADD(aTotResumo,{STR0089,0,0}) //"Devoluções de Saidas"
AADD(aTotResumo,{STR0119,0,0}) //"Entradas"
AADD(aTotResumo,{STR0090,0,0}) //"Devoluções de Entradas"

TRPosition():New(oPISCOF,"SX5",1,{|| xFilial("SX5")+"13"+TRB->CFOP })

If mv_par09 == 1 .and. (nOrdem >= 2 .or. (nOrdem == 1 .and. mv_par04 == 1))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Quebra por Data                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oBreakDt := TRBreak():New(oPISCOF,oPISCOF:Cell("EMISSAO"),STR0091,.F.) //"Total do Dia"
	TRFunction():New(oPISCOF:Cell("VALORCONT"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("ZFRANCA"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("VALDEBT"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("VALCRED"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("BASEDEBT"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("BASECRED"),NIL,"SUM",oBreakDt,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
EndIf

If nOrdem == 1
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Quebra por CFOP                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oBreakCf := TRBreak():New(oPISCOF,oPISCOF:Cell("CFOP"),STR0086,.F.) //"Total do CFOP"
	TRFunction():New(oPISCOF:Cell("VALORCONT"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("ZFRANCA"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("VALDEBT"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("VALCRED"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("BASEDEBT"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	TRFunction():New(oPISCOF:Cell("BASECRED"),NIL,"SUM",oBreakCf,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
	oBreakCf:OnPrintTotal({|| IIf(lCfop,oReport:SkipLine(),) , IIf(lCfop,oReport:PrintText(TRB->CFOP + "  " + SX5->X5_DESCRI),) , IIf(lCfop,oReport:SkipLine(),) })
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Totaliza Entradas/Saidas                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBreakEs := TRBreak():New(oPISCOF,oPISCOF:Cell("TIPO"),STR0092,.F.) //"Total de Entradas/Saidas"
TRFunction():New(oPISCOF:Cell("VALORCONT"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
TRFunction():New(oPISCOF:Cell("ZFRANCA"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
TRFunction():New(oPISCOF:Cell("VALDEBT"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
TRFunction():New(oPISCOF:Cell("VALCRED"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
TRFunction():New(oPISCOF:Cell("BASEDEBT"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
TRFunction():New(oPISCOF:Cell("BASECRED"),NIL,"SUM",oBreakEs,,/*cPicture*/,/*uFormula*/,.F.,.F.,.F.)
oBreakEs:OnPrintTotal({|| M906ENTSAI(oReport,aAliqEs,lImpe) })
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quebra por tipo(PIS/COFINS)              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oBreakTp := TRBreak():New(oPISCOF,oPISCOF:Cell("TIPO"),,.F.)
oBreakTp:OnBreak({|| CONTRI906(oReport,aAliqCFGer,cTipoAnt) })

oPISCOF:Cell("TIPO"):Disable()
oPISCOF:Cell("ES"):Disable()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se ira processar mais de uma filial.                                        ³
//³Se sim, ira emitir o relatorio separadamente, criando um resumo das filiais no final.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par06 == 1
	cFilIni := mv_par07
	cFilFin := mv_par08
Else
	cFilIni := cFilAnt
	cFilFin := cFilAnt
Endif

dbSelectArea("SM0")
SM0->(dbSeek(cEmpAnt+cFilIni,.T.))

While SM0->M0_CODIGO == cEmpAnt .And. SM0->M0_CODFIL <= cFilFin .And. !SM0->(Eof())
	
	cFilAnt := SM0->M0_CODFIL
	
	MontaTRB()
	
	If TRB->(LastRec()) > 0
		
		dbSelectArea("TRB")
		oReport:SetMeter(TRB->(LastRec()))
		dbGoTop()
		
		oReport:SetTitle(STR0093) //"Relatório de PIS/COFINS"
		
		oReport:PrintText(STR0121 + SM0->M0_NOMECOM,,10) //"Empresa: "
		oReport:PrintText(STR0094 + Transform(SM0->M0_CGC,"@R 99.999.999/9999-99"),,10) //"CNPJ: "
		oReport:PrintText(STR0122 + DTOC(mv_par02) + STR0095 + DTOC(mv_par03),,10) //"Periodo: "###" a "
		oReport:SkipLine()
		oReport:FatLine()
		
		If nOrdem == 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ordem por CFOP                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			If mv_par11 == 1
				oPISCOF:Cell("PRODUTO"):Hide()
				oPISCOF:Cell("NCM"):Hide()
				oPISCOF:Cell("PRODUTO"):Hide()
				oPISCOF:Cell("NCM"):Hide()
			EndIf
			
			If mv_par04 == 2
				oPISCOF:Cell("PRODUTO"):Hide()
				oPISCOF:Cell("NCM"):Hide()
				oPISCOF:Cell("VALORCONT"):Hide()
				oPISCOF:Cell("ZFRANCA"):Hide()
				oPISCOF:Cell("ALIQ"):Hide()
				oPISCOF:Cell("VALDEBT"):Hide()
				oPISCOF:Cell("VALCRED"):Hide()
				oPISCOF:Cell("BASEDEBT"):Hide()
				oPISCOF:Cell("BASECRED"):Hide()
				oPISCOF:Cell("NUMNF"):Disable()
				oPISCOF:Cell("SERIE"):Disable()
				oPISCOF:Cell("EMISSAO"):Disable()
				oPISCOF:Cell("CLIFOR"):Disable()
			EndIf
			
			oPISCOF:Cell("CFOP"):Disable()
			
			lFirstReg	:= .T.
			While !TRB->(Eof())

				If lFirstReg
					lFirstReg	:= .F.
					oPISCOF:Init()
					oPISCOF:SetHeaderSection(.T.)
					oPISCOF:PrintHeader()
					oPISCOF:SetHeaderSection(.F.)
					oReport:SkipLine()
					oReport:PrintText(IIF(TRB->TIPO == "PIS",STR0096,STR0097) + " - " + IIF(TRB->ES == "E",STR0119,STR0120),,1100) //"PIS - Programa de Integração Social"###"COFINS - Contribuição para o Financiamento da Seguridade Social"###"ENTRADAS"###"SAIDAS"
					oReport:SkipLine()
					oReport:PrintText(TRB->CFOP+IIF(SX5->(MsSeek(xFilial("SX5")+"13"+TRB->CFOP))," - "+AllTrim(SX5->X5_DESCRI),""))
					oReport:SkipLine()
					aAliqCFGer	:= {}
					aAliqEs		:=	{}
				EndIf
				
				lResumo     := .T.
				cTipo 		:= TRB->TIPO
				
				While !oReport:Cancel() .And. !TRB->(Eof()) .AND. TRB->TIPO == cTipo
					
					If mv_par04 == 2
						oPISCOF:Hide()
					EndIf
					
					lImpe  := .T.
					lCfop  := .T.
					If (TRB->ES != cEsAnt)
						lCfop  := .F.
						cEsAnt := TRB->ES
					EndIf
					
					If (TRB->TIPO != cTipoAnt)
						lImpe  := .F.
						lCfop  := .F.
					EndIf
					
					oPISCOF:Printline()
					
					cTipoAnt := TRB->TIPO
					
					If mv_par09 == 1 .and. mv_par04 == 1
						oBreakDt:SetTotalText(STR0098 + DTOC(TRB->EMISSAO)) //"Total do Dia "
					EndIf
					oBreakCf:SetTotalText(STR0099 + TRB->CFOP) //"Total do CFOP "
					If TRB->ES == "E"
						oBreakEs:SetTotalText(STR0100) //"Total de Entradas"
					Else
						oBreakEs:SetTotalText(STR0101) //"Total de Saidas"
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula total por aliquota para impressao do                ³
					//³resumo de contribuicao                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq > 0
						aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI)-IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)-IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI))
						aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
						aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)) //contribuicao debito
						aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI)) //contribuicao credito
						aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI)) //base debito
						aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)) //base credito
					Else
						If TRB->TIPO == "PIS"
							AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI)-IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI),IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI),IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI)})
						Else
							AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)-IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI),IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI),IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)})
						EndIf
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula a contribuicao por aliquota para impressao do       ³
					//³resumo na quebra de entrada/saida                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliqEs := Ascan(aAliqEs,{|x| x[1]==nAliqP})
					If nPosAliqEs > 0
						aAliqEs[nPosAliqEs][2]  += TRB->VALORCONT //valor contabil
						aAliqEs[nPosAliqEs][3]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqEs[nPosAliqEs][4]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)) //contribuicao debito
						aAliqEs[nPosAliqEs][5]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI)) //contribuicao credito
						aAliqEs[nPosAliqEs][6]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI)) //base debito
						aAliqEs[nPosAliqEs][7]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)) //base credito
					Else
						If TRB->TIPO == "PIS"
							AADD(aAliqEs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI),IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI),IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI)})
						Else
							AADD(aAliqEs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI),IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI),IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)})
						EndIf
					Endif
					
					If mv_par06 == 1
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Acumula total por CFOP para impressao do resumo por filiais ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If TRB->TIPO == "PIS"
							nPosCFOP := Ascan(If(TRB->ES=="E",aCFOPPISE,aCFOPPISS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==TRB->CFOP})
							If nPosCFOP > 0
								If TRB->ES=="E"
									aCFOPPISE[nPosCFOP][3]  += TRB->BASPIDENT - TRB->BASPICENT
									aCFOPPISE[nPosCFOP][4]  += TRB->PISDENT - TRB->PISCENT
								Else
									aCFOPPISS[nPosCFOP][3]  += TRB->BASPIDSAI - TRB->BASPICSAI
									aCFOPPISS[nPosCFOP][4]  += TRB->PISDSAI - TRB->PISCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aCFOPPISE,{SM0->M0_CODFIL,TRB->CFOP,TRB->BASPIDENT - TRB->BASPICENT,TRB->PISDENT - TRB->PISCENT})
								Else
									AADD(aCFOPPISS,{SM0->M0_CODFIL,TRB->CFOP,TRB->BASPIDSAI - TRB->BASPICSAI,TRB->PISDSAI - TRB->PISCSAI})
								EndIf
							EndIf
						Else
							nPosCFOP := Ascan(If(TRB->ES=="E",aCFOPCOFE,aCFOPCOFS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==TRB->CFOP})
							If nPosCFOP > 0
								If TRB->ES=="E"
									aCFOPCOFE[nPosCFOP][3]  += TRB->BASCODENT - TRB->BASCOCENT
									aCFOPCOFE[nPosCFOP][4]  += TRB->COFDENT - TRB->COFCENT
								Else
									aCFOPCOFS[nPosCFOP][3]  += TRB->BASCODSAI - TRB->BASCOCSAI
									aCFOPCOFS[nPosCFOP][4]  += TRB->COFDSAI - TRB->COFCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aCFOPCOFE,{SM0->M0_CODFIL,TRB->CFOP,TRB->BASCODENT - TRB->BASCOCENT,TRB->COFDENT - TRB->COFCENT})
								Else
									AADD(aCFOPCOFS,{SM0->M0_CODFIL,TRB->CFOP,TRB->BASCODSAI - TRB->BASCOCSAI,TRB->COFDSAI - TRB->COFCSAI})
								EndIf
							EndIf
						EndIf
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Acumula total por Aliquota para impressao do resumo por filiais  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If TRB->TIPO == "PIS"
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq2 := Ascan(If(TRB->ES=="E",aTAlPISE,aTAlPISS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==nAliqP})
							If nPosAliq2 > 0
								If TRB->ES=="E"
									aTAlPISE[nPosAliq2][3] += TRB->PISDENT-TRB->PISCENT
								Else
									aTAlPISS[nPosAliq2][3] += TRB->PISDSAI-TRB->PISCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aTAlPISE,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDENT-TRB->PISCENT})
								Else
									AADD(aTAlPISS,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDSAI-TRB->PISCSAI})
								EndIf
							EndIf
						Else
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq2 := Ascan(If(TRB->ES=="E",aTAlCOFE,aTAlCOFS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==nAliqP})
							If nPosAliq2 > 0
								If TRB->ES=="E"
									aTAlCOFE[nPosAliq2][3] += TRB->COFDENT-TRB->COFCENT
								Else
									aTAlCOFS[nPosAliq2][3] += TRB->COFDSAI-TRB->COFCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aTAlCOFE,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDENT-TRB->COFCENT})
								Else
									AADD(aTAlCOFS,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDSAI-TRB->COFCSAI})
								EndIf
							EndIf
						EndIf
					EndIf
					
					oReport:IncMeter()
					TRB->(dbSkip())
				EndDo
			EndDo
			
			lImpe  := .F.
			lCfop  := .F.
			oPISCOF:Finish()
			
		Else
			If nOrdem == 2
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ordem por NF + SERIE + DT EMISSAO        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IndRegua ("TRB", cArqTemp, "TIPO+ES+NUMNF+SERIE+DToS(EMISSAO)")
				
			ElseIf nOrdem == 3
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ordem por DT EMISSAO + NF + SERIE        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IndRegua ("TRB", cArqTemp, "TIPO+ES+DToS(EMISSAO)+NUMNF+SERIE")	
				
			EndIf
			
			If mv_par04 == 2
				oPISCOF:Cell("NUMNF"):Hide()
				oPISCOF:Cell("SERIE"):Hide()
				oPISCOF:Cell("EMISSAO"):Hide()
				oPISCOF:Cell("PRODUTO"):Hide()
				oPISCOF:Cell("NCM"):Hide()
				oPISCOF:Cell("VALORCONT"):Hide()
				oPISCOF:Cell("ZFRANCA"):Hide()
				oPISCOF:Cell("ALIQ"):Hide()
				oPISCOF:Cell("VALDEBT"):Hide()
				oPISCOF:Cell("VALCRED"):Hide()
				oPISCOF:Cell("BASEDEBT"):Hide()
				oPISCOF:Cell("BASECRED"):Hide()
			EndIf
			
			lFirstReg	:= .T.
			While !TRB->(Eof())

				If lFirstReg
					lFirstReg	:= .F.
					oPISCOF:Init()
					oPISCOF:SetHeaderSection(.T.)
					oPISCOF:PrintHeader()
					oPISCOF:SetHeaderSection(.F.)
					oReport:SkipLine()
					oReport:PrintText(IIF(TRB->TIPO == "PIS",STR0096,STR0097) + " - " + IIF(TRB->ES == "E",STR0119,STR0120),,1100) //"PIS - Programa de Integração Social"###"COFINS - Contribuição para o Financiamento da Seguridade Social"###"ENTRADAS"###"SAIDAS"
					oReport:SkipLine()
					aAliqCFGer	:= {}
					aAliqEs		:=	{}
				EndIf
				
				lResumo	:= .T.
				cTipo 	:= TRB->TIPO
				cEs		:= TRB->ES
				
				While !oReport:Cancel() .And. !TRB->(Eof()) .AND. cEs==TRB->ES .And. TRB->TIPO == cTipo
				
					If mv_par04 == 2
						oPISCOF:Hide()
					EndIf
					
					If (TRB->TIPO != cTipoAnt)
						lImpe  := .F.
					Else
						lImpe  := .T.
					EndIf
					
					oPISCOF:Printline()
					cTipoAnt := TRB->TIPO
					
					If mv_par09 == 1
						oBreakDt:SetTotalText(STR0098 + DTOC(TRB->EMISSAO)) //"Total do Dia "
					EndIf
					If TRB->ES == "E"
						oBreakEs:SetTotalText(STR0100) //"Total de Entradas"
					Else
						oBreakEs:SetTotalText(STR0101) //"Total de Saidas"
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula total por aliquota para impressao do                ³
					//³resumo de contribuicao                                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq > 0
						aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI)-IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)-IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI))
						aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
						aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)) //contribuicao debito
						aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI)) //contribuicao credito
						aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI)) //base debito
						aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)) //base credito
					Else
						If TRB->TIPO == "PIS"
							AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI)-IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI),IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI),IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI)})
						Else
							AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)-IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI),IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI),IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)})
						EndIf
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula a contribuicao por aliquota para impressao do       ³
					//³resumo na quebra de entrada/saida                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliqEs := Ascan(aAliqEs,{|x| x[1]==nAliqP})
					If nPosAliqEs > 0
						aAliqEs[nPosAliqEs][2]  += TRB->VALORCONT //valor contabil
						aAliqEs[nPosAliqEs][3]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqEs[nPosAliqEs][4]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI) , IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI)) //contribuicao debito
						aAliqEs[nPosAliqEs][5]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI) , IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI)) //contribuicao credito
						aAliqEs[nPosAliqEs][6]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI) , IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI)) //base debito
						aAliqEs[nPosAliqEs][7]  += IIF(TRB->TIPO == "PIS" , IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI) , IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)) //base credito
					Else
						If TRB->TIPO == "PIS"
							AADD(aAliqEs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->PISDENT,TRB->PISDSAI),IIF(TRB->ES == "E",TRB->PISCENT,TRB->PISCSAI),IIF(TRB->ES == "E",TRB->BASPIDENT,TRB->BASPIDSAI),IIF(TRB->ES == "E",TRB->BASPICENT,TRB->BASPICSAI)})
						Else
							AADD(aAliqEs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->ES == "E",TRB->COFDENT,TRB->COFDSAI),IIF(TRB->ES == "E",TRB->COFCENT,TRB->COFCSAI),IIF(TRB->ES == "E",TRB->BASCODENT,TRB->BASCODSAI),IIF(TRB->ES == "E",TRB->BASCOCENT,TRB->BASCOCSAI)})
						EndIf
					Endif
					
					If mv_par06 == 1
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Acumula total por Aliquota para impressao do resumo por filiais  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If TRB->TIPO == "PIS"
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq2 := Ascan(If(TRB->ES=="E",aTAlPISE,aTAlPISS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==nAliqP})
							If nPosAliq2 > 0
								If TRB->ES=="E"
									aTAlPISE[nPosAliq2][3] += TRB->PISDENT-TRB->PISCENT
								Else
									aTAlPISS[nPosAliq2][3] += TRB->PISDSAI-TRB->PISCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aTAlPISE,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDENT-TRB->PISCENT})
								Else
									AADD(aTAlPISS,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDSAI-TRB->PISCSAI})
								EndIf
							EndIf
						Else
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq2 := Ascan(If(TRB->ES=="E",aTAlCOFE,aTAlCOFS),{|x| x[1]==SM0->M0_CODFIL .And. x[2]==nAliqP})
							If nPosAliq2 > 0
								If TRB->ES=="E"
									aTAlCOFE[nPosAliq2][3] += TRB->COFDENT-TRB->COFCENT
								Else
									aTAlCOFS[nPosAliq2][3] += TRB->COFDSAI-TRB->COFCSAI
								EndIf
							Else
								If TRB->ES=="E"
									AADD(aTAlCOFE,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDENT-TRB->COFCENT})
								Else
									AADD(aTAlCOFS,{SM0->M0_CODFIL,Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDSAI-TRB->COFCSAI})
								EndIf
							EndIf
						EndIf
					EndIf
					
					oReport:IncMeter()
					TRB->(dbSkip())	

				EndDo
			EndDo
			
			lImpe  := .F.
			oPISCOF:Finish()
			
		EndIf
		
		cArqCp :=strzero(month(mv_par02),2)+substr(strzero(year(mv_par02),4),3,2)+SM0->M0_CODIGO+SM0->M0_CODFIL+".CP"
		If File(cArqCp)
			
			oReport:SetTitle(STR0076) //"Informações Complementares da Apuração"
			
			oComple:Cell("DESCR"):SetBlock( {|| Substr(cLinArq,01,70)      } )
			oComple:Cell("VALOR"):SetBlock( {|| Val(Substr(cLinArq,71,14)) } )	
			
			cContArq	:=	MemoRead(cArqCp)
			
			oComple:Init()
			For nContCp :=1 to MlCount(cContArq,100)
				cLinArq :=MemoLine(cContArq,100,nContCp)
				oComple:PrintLine()
			Next
			oComple:Finish()
			oReport:EndPage()
			
			lResumo:= .T.
		Endif
		
		If lResumo
			oResumo:Cell("DESCR"):SetBlock ( {|| aResumo[nX][1]} )
			oResumo:Cell("TRIBUT"):SetBlock( {|| aResumo[nX][2]} )
			oResumo:Cell("OUTROS"):SetBlock( {|| aResumo[nX][3]} )
			oResumo:Cell("TOTAL"):SetBlock ( {|| aResumo[nX][2] + aResumo[nX][3]} )
			oReport:SetTitle(STR0117) //"Resumo"
			oResumo:Init()
			
			For nX := 1 To Len(aResumo)
				
				oResumo:Printline()
				For nY := 2 To 3
					aTotResumo[nX][nY] += aResumo[nX][nY]
				Next
				
			Next
			oResumo:Finish()
			oReport:EndPage()
		EndIf
		
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Deleta o temporario a cada filial processada³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	TRB->(DbCloseArea())
	FErase(cArqTemp+GetDBExtension())
	#IFNDEF TOP
		FErase(cArqTemp+OrdBagExt())
	#ENDIF
	
	SM0->(dbSkip())	
	
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Imprime o total processado de todas as filiais ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par06 == 1
	
	oResCFOP	:= oReport:Section(8)
	oResAliq	:= oReport:Section(9)
	oResMov 	:= oReport:Section(10)
	
	TRPosition():New(oResCFOP,"SX5",1,{|| xFilial("SX5") + "13" + IIf(cTipo == "PIS" , IIf(lEntrada,aCFOPPISE,aCFOPPISS) , IIf(lEntrada,aCFOPCOFE,aCFOPCOFS))[nX][2] })
	
	oReport:SetTitle(STR0102) //"Resumo Geral - Totalização das Filiais"
	
	If len(aCFOPCOFE) > 0 .or. len(aCFOPCOFS) > 0 .or. len(aTAlCOFE) > 0 .or. len(aTAlCOFS) > 0
	
		cTipo := "COF"
		oReport:PrintText(STR0097,,1100) //"COFINS - Contribuição para o Financiamento da Seguridade Social"
		oReport:FatLine()
		
		If nOrdem == 1
			
			If len(aCFOPCOFE) > 0
				aCFOPCOFE := aSORT(aCFOPCOFE,,,{|X,Y|X[2]+X[1]<Y[2]+Y[1]})
				lEntrada  := .T.
				oReport:PrintText(STR0123,,10) //"Resumo por CFOP Processado - ENTRADAS"
				oReport:ThinLine()
				
				oResCFOP:Cell("CFOP"):SetBlock( {|| aCFOPCOFE[nX][2]} )
				oResCFOP:Cell("FILIAL"):SetBlock( {|| aCFOPCOFE[nX][1]} )
				oResCFOP:Cell("BASECNT"):SetBlock( {|| Abs(aCFOPCOFE[nX][3])} )
				oResCFOP:Cell("VALORCNT"):SetBlock( {|| Abs(aCFOPCOFE[nX][4])} )
				
				oResCFOP:SetHeaderSection(.T.)
				oResCFOP:PrintHeader()
				oResCFOP:SetHeaderSection(.F.)
				
				oResCFOP:Init()
				
			    cCfopAnt := " "
			    For nX := 1 To Len(aCFOPCOFE)
			    	
			    	If cCfopAnt != aCFOPCOFE[nX][2]
			    		cCfopAnt :=aCFOPCOFE[nX][2]
			    		oResCFOP:Cell("CFOP"):Show()
			    		oResCFOP:Cell("X5_DESCRI"):Show()
			    	Else
			    		oResCFOP:Cell("CFOP"):Hide()
			    		oResCFOP:Cell("X5_DESCRI"):Hide()
			    	EndIf
			    	oResCFOP:PrintLine()
					
				Next
				
				oResCFOP:Finish()
				oReport:SkipLine()
				oReport:ThinLine()
				
			EndIf
			
			If len(aCFOPCOFS) > 0
				aCFOPCOFS := aSORT(aCFOPCOFS,,,{|X,Y|X[2]+X[1]<Y[2]+Y[1]})
				lEntrada  := .F.
				oReport:PrintText(STR0124,,10) //"Resumo por CFOP Processado - SAIDAS"
				oReport:ThinLine()
				
				oResCFOP:Cell("CFOP"):SetBlock( {|| aCFOPCOFS[nX][2]} )
				oResCFOP:Cell("FILIAL"):SetBlock( {|| aCFOPCOFS[nX][1]} )
				oResCFOP:Cell("BASECNT"):SetBlock( {|| Abs(aCFOPCOFS[nX][3])} )
				oResCFOP:Cell("VALORCNT"):SetBlock( {|| Abs(aCFOPCOFS[nX][4])} )
				
				oResCFOP:SetHeaderSection(.T.)
				oResCFOP:PrintHeader()
				oResCFOP:SetHeaderSection(.F.)
				
				oResCFOP:Init()
				
			    cCfopAnt := " "
			    For nX := 1 To Len(aCFOPCOFS)
			    	
			    	If cCfopAnt != aCFOPCOFS[nX][2]
			    		cCfopAnt :=aCFOPCOFS[nX][2]
			    		oResCFOP:Cell("CFOP"):Show()
			    		oResCFOP:Cell("X5_DESCRI"):Show()
			    	Else
			    		oResCFOP:Cell("CFOP"):Hide()
			    		oResCFOP:Cell("X5_DESCRI"):Hide()
			    	EndIf
			    	oResCFOP:PrintLine()
					
				Next
				
				oResCFOP:Finish()
				oReport:SkipLine()
				oReport:ThinLine()
				
			EndIf
			
		EndIf
		
		If len(aTAlCOFE) > 0
			oReport:PrintText(STR0103,,10) //"Resumo por Aliquotas Processadas - ENTRADAS"
			oReport:ThinLine()
			
			oResAliq:Cell("FILIAL"):SetBlock( {|| aTAlCOFE[nX][1]} )
			oResAliq:Cell("ALIQ"):SetBlock( {|| aTAlCOFE[nX][2]} )
			oResAliq:Cell("VALOR"):SetBlock( {|| Abs(aTAlCOFE[nX][3])} )
			
			oResAliq:SetHeaderSection(.T.)
			oResAliq:PrintHeader()
			oResAliq:SetHeaderSection(.F.)
			
			oResAliq:Init()
			
		    For nX := 1 To Len(aTAlCOFE)
		    	
		    	oResAliq:PrintLine()
				
			Next
			
			oResAliq:Finish()
			oReport:SkipLine()
			oReport:ThinLine()
			
		EndIf
		
		If len(aTAlCOFS) > 0
			oReport:PrintText(STR0104,,10) //"Resumo por Aliquotas Processadas - SAIDAS"
			oReport:ThinLine()
			
			oResAliq:Cell("FILIAL"):SetBlock( {|| aTAlCOFS[nX][1]} )
			oResAliq:Cell("ALIQ"):SetBlock( {|| aTAlCOFS[nX][2]} )
			oResAliq:Cell("VALOR"):SetBlock( {|| Abs(aTAlCOFS[nX][3])} )
			
			oResAliq:SetHeaderSection(.T.)
			oResAliq:PrintHeader()
			oResAliq:SetHeaderSection(.F.)
			
			oResAliq:Init()
			
		    For nX := 1 To Len(aTAlCOFS)
		    	
		    	oResAliq:PrintLine()
				
			Next
			
			oResAliq:Finish()
			oReport:SkipLine()
			oReport:ThinLine()
			
		EndIf
		
	EndIf
	
	If lApurCof
		oReport:PrintText(STR0126,,10) //"Resumo Apurado"
		oReport:ThinLine()
		oReport:PrintText(STR0105,,10) //"Total Apurado...........:"
		
		nLin := oReport:Row()
		oReport:PrintText(Transform(ABS(aTApurCOF[1]),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
		oReport:PrintText(IIf(aTApurCOF[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
			
		oReport:SkipLine(2)
		oReport:PrintText(STR0106,,10) //"Total de Retenção.......:"
		oReport:PrintText(Transform(nTDedCOF,PesqPict("SD2","D2_TOTAL")),,oContr:Cell("VALOR"):ColPos())
		
		oReport:SkipLine()
		oReport:PrintText(STR0107,,10) //"Total da Contribuição...:"
		nLin := oReport:Row()
		oReport:PrintText(Transform(ABS(aTApurCOF[1] - nTDedCOF),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
		oReport:PrintText(IIf(aTApurCOF[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurCOF[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())	
		oReport:SkipLine(2)
		oReport:FatLine()
	EndIf
	
	If len(aCFOPPISE) > 0 .or. len(aCFOPPISS) > 0 .or. len(aTAlPISE) > 0 .or. len(aTAlPISS) > 0
	
		cTipo := "PIS"
		oReport:PrintText(STR0096,,1200) //"PIS - Programa de Integração Social"
		oReport:FatLine()
		
		If nOrdem == 1
		
			If len(aCFOPPISE) > 0
				aCFOPPISE := aSORT(aCFOPPISE,,,{|X,Y|X[2]+X[1]<Y[2]+Y[1]})
				lEntrada  := .T.
				oReport:PrintText(STR0123,,10) //"Resumo por CFOP Processado - ENTRADAS"
				oReport:ThinLine()
				
				oResCFOP:Cell("CFOP"):SetBlock( {|| aCFOPPISE[nX][2]} )
				oResCFOP:Cell("FILIAL"):SetBlock( {|| aCFOPPISE[nX][1]} )
				oResCFOP:Cell("BASECNT"):SetBlock( {|| Abs(aCFOPPISE[nX][3])} )
				oResCFOP:Cell("VALORCNT"):SetBlock( {|| Abs(aCFOPPISE[nX][4])} )
				
				oResCFOP:SetHeaderSection(.T.)
				oResCFOP:PrintHeader()
				oResCFOP:SetHeaderSection(.F.)
				
				oResCFOP:Init()
				
			    cCfopAnt := " "
			    For nX := 1 To Len(aCFOPPISE)
			    	
			    	If cCfopAnt != aCFOPPISE[nX][2]
			    		cCfopAnt := aCFOPPISE[nX][2]
			    		oResCFOP:Cell("CFOP"):Show()
			    		oResCFOP:Cell("X5_DESCRI"):Show()
			    	Else
			    		oResCFOP:Cell("CFOP"):Hide()
			    		oResCFOP:Cell("X5_DESCRI"):Hide()
			    	EndIf
			    	oResCFOP:PrintLine()
					
				Next
				
				oResCFOP:Finish()
				oReport:SkipLine()
				oReport:ThinLine()
				
			EndIf
			
			If len(aCFOPPISS) > 0
				aCFOPPISS := aSORT(aCFOPPISS,,,{|X,Y|X[2]+X[1]<Y[2]+Y[1]})
				lEntrada  := .F.
				oReport:PrintText(STR0124,,10) //"Resumo por CFOP Processado - SAIDAS"
				oReport:ThinLine()
				
				oResCFOP:Cell("CFOP"):SetBlock( {|| aCFOPPISS[nX][2]} )
				oResCFOP:Cell("FILIAL"):SetBlock( {|| aCFOPPISS[nX][1]} )
				oResCFOP:Cell("BASECNT"):SetBlock( {|| Abs(aCFOPPISS[nX][3])} )
				oResCFOP:Cell("VALORCNT"):SetBlock( {|| Abs(aCFOPPISS[nX][4])} )
				
				oResCFOP:SetHeaderSection(.T.)
				oResCFOP:PrintHeader()
				oResCFOP:SetHeaderSection(.F.)
				
				oResCFOP:Init()
				
			    cCfopAnt := " "
			    For nX := 1 To Len(aCFOPPISS)
			    	
			    	If cCfopAnt != aCFOPPISS[nX][2]
			    		cCfopAnt :=aCFOPPISS[nX][2]
			    		oResCFOP:Cell("CFOP"):Show()
			    		oResCFOP:Cell("X5_DESCRI"):Show()
			    	Else
			    		oResCFOP:Cell("CFOP"):Hide()
			    		oResCFOP:Cell("X5_DESCRI"):Hide()
			    	EndIf
			    	oResCFOP:PrintLine()
					
				Next
				
				oResCFOP:Finish()
				oReport:SkipLine()
				oReport:ThinLine()
				
			EndIf
			
		EndIf
		
		If len(aTAlPISE) > 0
			oReport:PrintText(STR0103,,10) //"Resumo por Aliquotas Processadas - ENTRADAS"
			oReport:ThinLine()
			
			oResAliq:Cell("FILIAL"):SetBlock( {|| aTAlPISE[nX][1]} )
			oResAliq:Cell("ALIQ"):SetBlock( {|| aTAlPISE[nX][2]} )
			oResAliq:Cell("VALOR"):SetBlock( {|| Abs(aTAlPISE[nX][3])} )
			
			oResAliq:SetHeaderSection(.T.)
			oResAliq:PrintHeader()
			oResAliq:SetHeaderSection(.F.)
			
			oResAliq:Init()
			
		    For nX := 1 To Len(aTAlPISE)
		    	
		    	oResAliq:PrintLine()
				
			Next
			
			oResAliq:Finish()
			oReport:SkipLine()
			oReport:ThinLine()
			
		EndIf
		
		If len(aTAlPISS) > 0
			oReport:PrintText(STR0104,,10) //"Resumo por Aliquotas Processadas - SAIDAS"
			oReport:ThinLine()
			
			oResAliq:Cell("FILIAL"):SetBlock( {|| aTAlPISS[nX][1]} )
			oResAliq:Cell("ALIQ"):SetBlock( {|| aTAlPISS[nX][2]} )
			oResAliq:Cell("VALOR"):SetBlock( {|| Abs(aTAlPISS[nX][3])} )
			
			oResAliq:SetHeaderSection(.T.)
			oResAliq:PrintHeader()
			oResAliq:SetHeaderSection(.F.)
			
			oResAliq:Init()
			
		    For nX := 1 To Len(aTAlPISS)
		    	
		    	oResAliq:PrintLine()
				
			Next
			
			oResAliq:Finish()
			oReport:SkipLine()
			oReport:ThinLine()
			
		EndIf
		
	EndIf
	
	If lApurPis
		oReport:PrintText(STR0126,,10) //"Resumo Apurado"
		oReport:ThinLine()
		oReport:PrintText(STR0105,,10) //"Total Apurado...........:"
		
		nLin := oReport:Row()
		oReport:PrintText(Transform(ABS(aTApurPIS[1]),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
		oReport:PrintText(IIf(aTApurPIS[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
		
		oReport:SkipLine(2)
		oReport:PrintText(STR0106,,10) //"Total de Retenção.......:"
		oReport:PrintText(Transform(nTDedPIS,PesqPict("SD2","D2_TOTAL")),,oContr:Cell("VALOR"):ColPos())

		oReport:SkipLine()
		oReport:PrintText(STR0107,,10) //"Total da Contribuição...:"
		nLin := oReport:Row()
		oReport:PrintText(Transform(ABS(aTApurPIS[1] - nTDedPIS),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
		oReport:PrintText(IIf(aTApurPIS[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
		oReport:PrintText(Transform(aTApurPIS[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())	
		oReport:SkipLine(2)
		oReport:FatLine()
	EndIf
	
	If lResumo
	
		oReport:PrintText(STR0118,,1300) //"Resumo por Movimento Processado"
		oReport:FatLine()
		
		oResMov:Cell("DESCR"):SetBlock( {|| aTotResumo[nX][1]} )
		oResMov:Cell("TRIBUT"):SetBlock( {|| aTotResumo[nX][2]} )
		oResMov:Cell("OUTROS"):SetBlock( {|| aTotResumo[nX][3]} )
		oResMov:Cell("TOTAL"):SetBlock( {|| aTotResumo[nX][2] + aTotResumo[nX][3]} )
		
		oResMov:SetHeaderSection(.T.)
		oResMov:PrintHeader()
		oResMov:SetHeaderSection(.F.)
		
		oResMov:Init()
		
	    For nX := 1 To Len(aTotResumo)
	    	
	    	oResMov:PrintLine()
			
		Next
		
		oResMov:Finish()
		
	EndIf

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Reposiciona na filial corrente              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSM0)
cFilAnt := SM0->M0_CODFIL

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³M906ENTSAI³ Autor ³ Liber De Esteban      ³ Data ³ 22/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime Resumo de Contribuicoes de PIS e COFINS            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³ExpO2: Array contendo valores para totalizacao              ³±±
±±³          ³ExpO3: Tipo do regustro (PIS/COFINS)                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function M906ENTSAI(oReport,aAliqes,lImpe)

Local nX
Local nOrdem 	:= oReport:Section(1):GetOrder()
Local oTotAliq	:= oReport:Section(4)

If nOrdem >= 2
	oTotAliq:Cell("DESCRI"):SetSize(55,.F.)
EndIf

oTotAliq:SetHeaderSection(.F.)
oTotAliq:Cell("DESCRI"):SetBlock( {|| STR0127 + Transform(aAliqEs[nX][1],"@E 99.99%")} ) //"Total da Aliquota "
oTotAliq:Cell("VALORCONT"):SetBlock( {|| aAliqEs[nX][2]} )
oTotAliq:Cell("ZFRANCA"):SetBlock( {|| aAliqEs[nX][3]} )
oTotAliq:Cell("VALDEBT"):SetBlock( {|| aAliqEs[nX][4]} )
oTotAliq:Cell("VALCRED"):SetBlock( {|| aAliqEs[nX][5]} )
oTotAliq:Cell("BASEDEBT"):SetBlock( {|| aAliqEs[nX][6]} )
oTotAliq:Cell("BASECRED"):SetBlock( {|| aAliqEs[nX][7]} )

oTotAliq:Init()
For nX := 1 to len(aAliqes)
	oTotAliq:PrintLine()
Next
oTotAliq:Finish()
aAliqes := {}

If lImpe .and. !TRB->(Eof())
	oReport:SkipLine()
	oReport:PrintText(IIF(TRB->TIPO == "PIS",STR0096,STR0097) + " - " + IIF(TRB->ES == "E",STR0119,STR0120),,1100) //"PIS - Programa de Integração Social"###"COFINS - Contribuição para o Financiamento da Seguridade Social"###"ENTRADAS"###"SAIDAS"
	oReport:SkipLine()
	If nOrdem == 1
		oReport:PrintText(TRB->CFOP + "  " + SX5->X5_DESCRI)
		oReport:SkipLine()
	EndIf
EndIf

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³CONTRI906 ³ Autor ³ Liber De Esteban      ³ Data ³ 22/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Imprime Resumo de Contribuicoes de PIS e COFINS            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto Report do Relatório                           ³±±
±±³          ³ExpO2: Array contendo valores para totalizacao              ³±±
±±³          ³ExpO3: Tipo do regustro (PIS/COFINS)                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function CONTRI906(oReport,aAliqCFGer,cTipo)

Local oContr 		:= oReport:Section(5)
Local nOrdem 		:= oReport:Section(1):GetOrder()
Local nAliq 		:= 0
Local nX			:= 0
Local nY			:= 0
Local aValContri	:= {0,0,0,0,0,0,0}
Local aContAliq 	:= {0,0,0,0,0,0,0}
Local aRet			:= {0,0}
Local aDedRet		:= FsCalcRet(mv_par02,mv_par03,,,,,@aRet)
Local nDedRet		:= IIF(cTipo=="PIS",aDedRet[1],aDedRet[2])
Local nRetencao		:= IIF(cTipo=="PIS",aRet[1],aRet[2]) // Tratamento para as empresas que nao sao Orgaos Publicos
Local lFirst 		:= .T.

nTDedPIS	+= IIF(cTipo=="PIS",nDedRet,0)
nTDedCOF	+= IIF(cTipo=="PIS",0,nDedRet)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ordena o array por aliquota + CFOP  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Asort(aAliqCFGer,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})

If nOrdem >= 2
	oContr:Cell("CD"):SetSize(31,.F./*lPixel*/)
EndIf

oContr:Cell("CFOP"):SetBlock( {|| aAliqCFGer[nX][2]} )
oContr:Cell("VALOR"):SetBlock( {|| abs(aAliqCFGer[nX][3])} )
oContr:Cell("CD"):SetBlock( {|| IIf(aAliqCFGer[nX][3] < 0,"(C)","(D)")} )
oContr:Cell("VALORCONT"):SetBlock( {|| aAliqCFGer[nX][4]} )
oContr:Cell("ZFRANCA"):SetBlock( {|| aAliqCFGer[nX][5]} )
oContr:Cell("ALIQ"):SetValue( Space(8) )
oContr:Cell("VALDEBT"):SetBlock( {|| aAliqCFGer[nX][6]} )
oContr:Cell("VALCRED"):SetBlock( {|| aAliqCFGer[nX][7]} )
oContr:Cell("BASEDEBT"):SetBlock( {|| aAliqCFGer[nX][8]} )
oContr:Cell("BASECRED"):SetBlock( {|| aAliqCFGer[nX][9]} )

oReport:SkipLine(2)
oReport:FatLine()
oReport:PrintText(STR0108,,10) //"Contribuição: "

nAliq	:= 0
lFirst	:= .T.

oContr:Init()
For nX := 1 To Len(aAliqCFGer)
	
	If mv_par10 == 2
		oContr:Hide()
	EndIf
	
	If nAliq <> aAliqCFGer[nX][1]
		If !lFirst
			oContr:Finish()
			oReport:SkipLine()
			oReport:PrintText(STR0088,,10) //"Total"
			oReport:ThinLine()
			nLin := oReport:Row()
			oReport:PrintText(Transform(ABS(aContAliq[1]),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
			oReport:PrintText(IIf(aContAliq[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
			oReport:PrintText(Transform(aContAliq[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
			oReport:PrintText(Transform(aContAliq[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
			oReport:PrintText(Transform(aContAliq[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
			oReport:PrintText(Transform(aContAliq[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
			oReport:PrintText(Transform(aContAliq[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
			oReport:PrintText(Transform(aContAliq[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
			oContr:Init()
		EndIf
		aContAliq := {0,0,0,0,0,0,0}
		nAliq     := aAliqCFGer[nX][1]
		oReport:SkipLine(2)
		oReport:PrintText(STR0109 + Transform(nAliq,Iif(nAliq<>0,"@E 99.99%","@E 99.99")),,10) //"Aliquota: "
		lFirst    := .F.
	Endif
	
	If mv_par10 == 2
		oContr:Hide()
	EndIf
	
	For nY := 1 to 7
		aContAliq[nY]  += aAliqCFGer[nX][nY+2]
		aValContri[nY] += aAliqCFGer[nX][nY+2]
		If cTipo == "PIS"
			aTApurPIS[nY] += aAliqCFGer[nX][nY+2]
			lApurPis := .T.
		Else
			aTApurCOF[nY] += aAliqCFGer[nX][nY+2]
			lApurCof := .T.
		EndIf
	Next
	
	oContr:Printline()
	
Next
oContr:Finish()

If Len(aAliqCFGer) > 0
	
	oReport:SkipLine()
	oReport:PrintText(STR0088,,10) //"Total"
	oReport:ThinLine()
	nLin := oReport:Row()
	oReport:PrintText(Transform(ABS(aContAliq[1]),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
	oReport:PrintText(IIf(aContAliq[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
	oReport:PrintText(Transform(aContAliq[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
	oReport:PrintText(Transform(aContAliq[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
	oReport:PrintText(Transform(aContAliq[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
	oReport:PrintText(Transform(aContAliq[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
	oReport:PrintText(Transform(aContAliq[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
	oReport:PrintText(Transform(aContAliq[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
	
	oReport:SkipLine(2)
	oReport:PrintText(STR0110,,10) //"Total Apurado"
	oReport:ThinLine()
	nLin := oReport:Row()
	oReport:PrintText(Transform(ABS(aValContri[1]),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
	oReport:PrintText(IIf(aValContri[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
	oReport:PrintText(Transform(aValContri[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
	oReport:PrintText(Transform(aValContri[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
	oReport:PrintText(Transform(aValContri[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
	oReport:PrintText(Transform(aValContri[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
	oReport:PrintText(Transform(aValContri[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
	oReport:PrintText(Transform(aValContri[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
	
	oReport:SkipLine(2)
	oReport:PrintText(STR0143,,10) //"Total de Retenção(Modalidade da Dedução: Vencimento)........: "
	oReport:ThinLine()
	oReport:PrintText(Transform(nRetencao,PesqPict("SD2","D2_TOTAL")),,oContr:Cell("VALOR"):ColPos())
	
	oReport:SkipLine(2)
	oReport:PrintText(STR0144,,10) //"Total de Retenção - Orgãos Públicos(Modalidade da Dedução: Pagamento)........: "
	oReport:ThinLine()
	oReport:PrintText(Transform((nDedRet-nRetencao),PesqPict("SD2","D2_TOTAL")),,oContr:Cell("VALOR"):ColPos())
	
	oReport:SkipLine()
	oReport:PrintText(STR0112,,10) //"Total da Contribuição"
	oReport:ThinLine()
	nLin := oReport:Row()
	oReport:PrintText(Transform(ABS(aValContri[1] - nDedRet),PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALOR"):ColPos())
	oReport:PrintText(IIf(aValContri[1] < 0,"(C)","(D)"),nLin,oContr:Cell("CD"):ColPos())
	oReport:PrintText(Transform(aValContri[2],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALORCONT"):ColPos())
	oReport:PrintText(Transform(aValContri[3],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("ZFRANCA"):ColPos())
	oReport:PrintText(Transform(aValContri[4],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALDEBT"):ColPos())
	oReport:PrintText(Transform(aValContri[5],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("VALCRED"):ColPos())
	oReport:PrintText(Transform(aValContri[6],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASEDEBT"):ColPos())
	oReport:PrintText(Transform(aValContri[7],PesqPict("SD2","D2_TOTAL")),nLin,oContr:Cell("BASECRED"):ColPos())
	
	oReport:SkipLine(2)
	oReport:PrintText(STR0113,,10) //"(C) Credito / (D) Debito"
	
EndIf

oReport:EndPage()
If !TRB->(Eof())
	oReport:PrintText(IIF(TRB->TIPO == "PIS",STR0096,STR0097) + " - " + IIF(TRB->ES == "E",STR0119,STR0120),,1100) //"PIS - Programa de Integração Social"###"COFINS - Contribuição para o Financiamento da Seguridade Social"###"ENTRADAS"###"SAIDAS"
	oReport:SkipLine()
	If nOrdem == 1
		oReport:PrintText(TRB->CFOP+IIF(SX5->(MsSeek(xFilial("SX5")+"13"+TRB->CFOP))," - "+AllTrim(SX5->X5_DESCRI),""))
		oReport:SkipLine()
	EndIf
EndIf
aAliqCFGer	:= {}

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MONTATRB ³ Autor ³ Liber De Esteban      ³ Data ³ 12/07/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria arquivo de trabalho para impressao no modelo grafico  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MONTATRB()

#IFDEF TOP
	Local aStruSD1		:= {}
	Local aStruSD2		:= {}
	Local aStruSB1 		:= {}
	Local aStruSF2		:= {}
	Local aStruSF1		:= {}
	Local aStruSF4		:= {}
	Local nX		    := 0
#ENDIF

Local cAliasSD2  	:= "SD2"
Local cAliasSD1  	:= "SD1"
Local cAliasSB1  	:= "SB1"
Local cAliasSF4  	:= "SF4"
Local cAliasSF2  	:= "SF2"
Local cAliasSF1  	:= "SF1"
Local cGrpTrib 	   	:= ""
Local cUF		   	:= ""
Local cB1_GRTRIB  	:= ""             
Local cCliFor		:= ""

Local dDtCorte	  	:= GetNewPar("MV_DTCORTE",CtoD("01/02/2004"))		//A partir desta data o sistema devera utilizar as informacoes gravadas na base

Local lA1_GRPTRIB 	:= SA1->(FieldPos("A1_GRPTRIB")) != 0
Local lA2_GRPTRIB 	:= SA2->(FieldPos("A2_GRPTRIB")) != 0
Local lApurac     	:= (SF4->(FieldPos("F4_PISFISC")) > 0)

Local nRedPis	  	:= 1
Local nRedCOF	  	:= 1
Local nValPisPas 	:= 0
Local nBasPisPas 	:= 0
Local nValCofins 	:= 0 
Local nBasCofins 	:= 0 
Local nTxPis     	:= 0
Local nTxCof     	:= 0
Local nExPis      	:= 0
Local nExCof      	:= 0
Local nPautaPIS		:= 0
Local nPautaCOF		:= 0

aResumo		:= {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Array para impressao do resumo por filial ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AADD(aResumo,{STR0120,0,0}) //"Saidas"
AADD(aResumo,{STR0089,0,0}) //"Devoluções de Saidas"
AADD(aResumo,{STR0119,0,0}) //"Entradas"
AADD(aResumo,{STR0090,0,0}) //"Devoluções de Entradas"

cArqTemp := CriaTrab(aArqTemp)
dbUseArea(.T.,__LocalDriver,cArqTemp,"TRB")
IndRegua("TRB",cArqTemp,IIF(MV_PAR09==1,"TIPO+CFOP+DTOS(EMISSAO)","TIPO+CFOP"))
dbSelectArea("TRB")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento das Saidas                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SD2")
SD2->(dbSetOrder(5))
#IFDEF TOP
	lQuery := .T.
	cAliasSD2 := "a906AMontSD2"
	cAliasSF2 := "a906AMontSD2"
	cAliasSF4 := "a906AMontSD2"
	cAliasSB1 := "a906AMontSD2"

	aStruSD2  := SD2->(dbStruct())
	aStruSB1  := SB1->(dbStruct())	
	aStruSF4  := SF4->(dbStruct())	
	aStruSF2  := SF2->(dbStruct())	

	cQuery 	:= "SELECT F4_AGREG,F4_IPI,F2_SERIE,F2_DOC,F2_SEGURO,F2_FRETE,F2_DESPESA,F2_VALMERC,D2_TOTAL,D2_DOC,D2_SERIE,D2_EMISSAO,D2_CF,D2_COD,D2_DESCZFR,B1_POSIPI,D2_TIPO,"
	cQuery  += "D2_ICMSRET,D2_VALIPI,D2_VALFRE,D2_SEGURO,D2_DESPESA,D2_CLIENTE,D2_LOJA "
	If !Empty( nPsVlPisSa )
		cQuery += "," + cCpVlPisSa
	EndIf

	If !Empty( nPsBsPisSa )
		cQuery += "," + cCpBsPisSa
	EndIf
	
	If !Empty( nPsAlPisSa )
		cQuery += "," + cCpAlPisSa
	EndIf
	
	If !Empty( nPsVlCofSa ) 
		cQuery += "," + cCpVlCOfSa 
	EndIf 
	
	If !Empty( nPsBsCofSa ) 
		cQuery += "," + cCpBsCofSa 
	EndIf 

	If !Empty( nPsAlCofSa ) 
		cQuery += "," + cCpAlCOfSa 
	EndIf 	

	If SB1->(FieldPos("B1_PPIS")) >0
		cQuery += ",B1_PPIS "
	Endif	

	If SB1->(FieldPos("B1_REDPIS")) > 0
		cQuery += ",B1_REDPIS "
	Endif	

	If SB1->(FieldPos("B1_VLR_PIS")) >0    // Valor de Pauta PIS
		cQuery += ",B1_VLR_PIS "
	Endif	

	If SB1->(FieldPos("B1_REDCOF")) > 0
		cQuery += ",B1_REDCOF "
	Endif	

	If SB1->(FieldPos("B1_PCOFINS")) > 0	
		cQuery += ",B1_PCOFINS "
	Endif

	If SB1->(FieldPos("B1_VLR_COF")) >0    // Valor de Pauta COFINS
		cQuery += ",B1_VLR_COF "
	Endif	
	
	If SB1->(FieldPos("B1_GRTRIB")) > 0	
		cQuery += ",B1_GRTRIB "
	Endif
	
	If SF4->(FieldPos("F4_BASEPIS")) > 0
		cQuery += ",F4_BASEPIS "	
	Endif		
	
	If SF4->(FieldPos("F4_BASECOF")) > 0
		cQuery += ",F4_BASECOF "	
	Endif

	If SF4->(FieldPos("F4_PISCOF")) > 0
		cQuery += ",F4_PISCOF "	
	Endif		

	If SF4->(FieldPos("F4_PISCRED")) > 0
		cQuery += ",F4_PISCRED "	
	Endif		
	
	If lApurac
		cQuery += ",F4_PISFISC "
	Endif

	cQuery 	+= "FROM "+RetSqlName("SD2")+" SD2, "
	cQuery 	+= RetSqlName("SF4")+" SF4, "	
	cQuery 	+= RetSqlName("SB1")+" SB1, "	
	cQuery 	+= RetSqlName("SF2")+" SF2 "		

	cQuery 	+= "WHERE D2_FILIAL='"+xFilial("SD2")+"' AND "
	cQuery 	+= "D2_EMISSAO>='"+Dtos(MV_PAR02)+"' AND "
	cQuery 	+= "D2_EMISSAO<='"+Dtos(MV_PAR03)+"' AND "
	cQuery  += "SD2.D_E_L_E_T_ = ' ' AND "	

	cQuery  += "F4_FILIAL = '"+xFilial("SF4")+"' AND "
	cQuery  += "F4_CODIGO = D2_TES AND "
	cQuery  += "SF4.D_E_L_E_T_ = ' ' AND "

	//Livro Selecionado
	If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
		cQuery += " F4_NRLIVRO='"+MV_PAR05+"' AND "
	EndIf
	cQuery  += "B1_FILIAL = '"+xFilial("SB1")+"' AND "
	cQuery  += "B1_COD = D2_COD AND "
	cQuery  += "SB1.D_E_L_E_T_ = ' ' AND "

	cQuery  += "F2_FILIAL = '"+xFilial("SF2")+"' AND "
	cQuery  += "F2_DOC = D2_DOC AND "
	cQuery  += "F2_SERIE = D2_SERIE AND "
	cQuery  += "F2_CLIENTE = D2_CLIENTE AND "	
	cQuery  += "F2_LOJA = D2_LOJA AND "		
	cQuery  += "F2_EMISSAO = D2_EMISSAO AND "	
	cQuery  += "SF2.D_E_L_E_T_ = ' ' AND "
	cQuery  += "SF2.F2_TIPO NOT IN('I', 'P') "	//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
	
	If ExistBlock("MT996QRY")
		cQuery := ExecBlock("MT996QRY",.F.,.F.,{cQuery,1})
	EndIf

    If mv_par11 ==1
		cQuery += "ORDER BY D2_CF, D2_DOC"
	Else
		cQuery += "ORDER BY D2_CF, D2_COD"
	Endif	

	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)

	For nX := 1 To len(aStruSD2)
		If aStruSD2[nX][2] <> "C" .And. FieldPos(aStruSD2[nX][1])<>0
			TcSetField(cAliasSD2,aStruSD2[nX][1],aStruSD2[nX][2],aStruSD2[nX][3],aStruSD2[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSB1)
		If aStruSB1[nX][2] <> "C" .And. FieldPos(aStruSB1[nX][1])<>0
			TcSetField(cAliasSB1,aStruSB1[nX][1],aStruSB1[nX][2],aStruSB1[nX][3],aStruSB1[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSF4)
		If aStruSF4[nX][2] <> "C" .And. FieldPos(aStruSF4[nX][1])<>0
			TcSetField(cAliasSF4,aStruSF4[nX][1],aStruSF4[nX][2],aStruSF4[nX][3],aStruSF4[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSF2)
		If aStruSF2[nX][2] <> "C" .And. FieldPos(aStruSF2[nX][1])<>0
			TcSetField(cAliasSF2,aStruSF2[nX][1],aStruSF2[nX][2],aStruSF2[nX][3],aStruSF2[nX][4])
		EndIf
	Next nX

	dbSelectArea(cAliasSD2)	
	nPsVlPisSa := ( cAliasSD2 )->( FieldPos( cCpVlPisSa ) )
	nPsBsPisSa := ( cAliasSD2 )->( FieldPos( cCpBsPisSa ) )
	nPsAlPisSa := ( cAliasSD2 )->( FieldPos( cCpAlPisSa ) )
	nPsVlCofSa := ( cAliasSD2 )->( FieldPos( cCpVlCofSa ) ) 
	nPsBsCOfSa := ( cAliasSD2 )->( FieldPos( cCpBsCofSa ) ) 
	nPsAlCofSa := ( cAliasSD2 )->( FieldPos( cCpAlCofSa ) ) 
#ELSE
    cAliasSD2 := "SD2"
    cIndex    := CriaTrab(NIL,.F.)
	cKey	  := 'D2_CF'
	cCondicao := 'D2_FILIAL=="'+xFilial("SD2")+'".And.'
	cCondicao += 'DTOS(D2_EMISSAO)>="'+DTOS(MV_PAR02)+'".And.DTOS(D2_EMISSAO)<="'+DTOS(MV_PAR03)+'".And.'
	cCondicao += '!D2_TIPO$"I#P"'		//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
	IndRegua(cAliasSD2,cIndex,cKey,,cCondicao)
	nIndex := RetIndex("SD2")
	dbSelectArea("SD2")
	dbSetIndex(cIndex+OrdBagExt())
	 
	dbSetOrder(nIndex+1)
	dbGoTop()
	dbSelectArea(cAliasSD2)
#ENDIF
While (cAliasSD2)->(!Eof()) 
	nPautaPIS := 0
	nPautaCOF := 0
	
	If !lQuery
		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+(cAliasSD2)->D2_TES))
		SB1->(dbSetOrder(1))
		SB1->(MsSeek(xFilial("SB1")+(cAliasSD2)->D2_COD))
		SF2->(dbSetOrder(1))
		SF2->(MsSeek(xFilial("SF2")+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
		cB1_GRTRIB := SB1->B1_GRTRIB
	Else
		cB1_GRTRIB := (cAliasSB1)->B1_GRTRIB
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica Cliente/Fornecedor    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA1->(dbSetOrder(1))
	SA2->(dbSetOrder(1))

	If (cAliasSD2)->D2_TIPO$"DB"
		SA2->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
		cCliFor 	:= SA2->A2_NOME
	Else
		SA1->(MsSeek(xFilial("SA1")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
		cCliFor 	:= SA1->A1_NOME
	Endif
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a excecao fiscal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cGrpTrib 	:= ""
	cUF		 	:= ""
	nExPis		:= 0
	nExCof 		:= 0
	If lA1_GRPTRIB .And. lA2_GRPTRIB .And. !Empty(cB1_GRTRIB)
		SA1->(dbSetOrder(1))
		SA2->(dbSetOrder(1))
		If (cAliasSD2)->D2_TIPO$"DB"
			SA2->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
			cGrpTrib 	:= SA2->A2_GRPTRIB
			cUF			:= SA2->A2_EST
		Else
			SA1->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
			cGrpTrib	:= SA1->A1_GRPTRIB
			cUF			:= SA1->A1_EST
		Endif                 
	
		If !Empty(cGrpTrib)
			dbSelectArea("SF7")
			SF7->(dbSetOrder(1))
			If SF7->(dbSeek(xFilial("SF7")+cB1_GRTRIB+cGrpTrib))
				While !SF7->(Eof()) .And. SF7->F7_FILIAL+SF7->F7_GRTRIB+SF7->F7_GRPCLI == xFilial("SF7")+cB1_GRTRIB+cGrpTrib
					If (cUF == SF7->F7_EST .Or. SF7->F7_EST == "**")
						nExPis 		:= Iif(SF7->(FieldPos("F7_ALIQPIS")) > 0,SF7->F7_ALIQPIS,0)
						nExCof 		:= Iif(SF7->(FieldPos("F7_ALIQCOF")) > 0,SF7->F7_ALIQCOF,0)
						Exit
					Endif
					SF7->(dbSkip())
				End
			EndIf
		EndIf
	EndIf
	
	If (cAliasSF4)->F4_AGREG <> "N"
		
		If SB1->(FieldPos("B1_PPIS")) >0
			nTxPIS	:= 	Iif((cAliasSB1)->B1_PPIS <> 0,(cAliasSB1)->B1_PPIS , GetMv("MV_TXPIS"))
		Endif
		
		If SB1->(FieldPos("B1_REDPIS")) > 0
			nRedPIS	:= 	Iif((cAliasSB1)->B1_REDPIS > 0,1-((cAliasSB1)->B1_REDPIS / 100 ), 1 )
		Endif
		
		If SF4->(FieldPos("F4_BASEPIS")) > 0
			nRedPIS	*= 	Iif((cAliasSF4)->F4_BASEPIS > 0,1-((cAliasSF4)->F4_BASEPIS / 100 ), 1 )
		Endif
		
		If SB1->(FieldPos("B1_VLR_PIS")) >0    // Valor de Pauta PIS
			nPautaPIS := (cAliasSB1)->B1_VLR_PIS
		Endif	
		
		If SB1->(FieldPos("B1_REDCOF")) > 0
			nRedCOF	:= 	Iif((cAliasSB1)->B1_REDCOF > 0,1-((cAliasSB1)->B1_REDCOF / 100 ), 1 )
		EndIf
		
		If SF4->(FieldPos("F4_BASECOF")) > 0
			nRedCOF	*= 	Iif((cAliasSF4)->F4_BASECOF > 0,1-((cAliasSF4)->F4_BASECOF / 100 ), 1 )
		EndIf
		
		If SB1->(FieldPos("B1_PCOFINS")) > 0	
			nTxCOF	:=	if((cAliasSB1)->B1_PCOFINS <> 0,(cAliasSB1)->B1_PCOFINS , GetMv("MV_TXCOFIN"))
		Endif
  		
		If SB1->(FieldPos("B1_VLR_COF")) >0    // Valor de Pauta COFINS
			nPautaCOF := (cAliasSB1)->B1_VLR_COF
		Endif	

		If SF4->(FieldPos("F4_PISCOF")) > 0
			If !lApurac .Or. ((cAliasSF4)->F4_PISFISC<>"2")
				If (cAliasSF4)->F4_PISCOF $ "13" //1-PIS;3-Ambos
					nValPisPas := 0
					nBasPisPas := 0
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se existem os campos para gravacao do valor/base do PIS  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (cAliasSD2)->D2_EMISSAO >= dDtCorte .And. ;
						!Empty( nPsVlPisSa ) .And. !Empty( nPsBsPisSa ) .And.  !Empty( nPsAlPisSa )
						nValPisPas := ( cAliasSD2 )->( FieldGet( nPsVlPisSa ) )
						nBasPisPas := ( cAliasSD2 )->( FieldGet( nPsBsPisSa ) )
						nTxPIS := ( cAliasSD2 )->( FieldGet( nPsAlPisSa ) )
					EndIf
					
					If mv_par01 <> 2 //PIS e Ambos
						RecLock("TRB",.T.)
						TRB->NUMNF     	:= (cAliasSD2)->D2_DOC
						TRB->SERIE     	:= (cAliasSD2)->D2_SERIE
						TRB->EMISSAO   	:= (cAliasSD2)->D2_EMISSAO
						TRB->CFOP      	:= (cAliasSD2)->D2_CF
						TRB->PRODUTO   	:= (cAliasSD2)->D2_COD
						TRB->NCM       	:= (cAliasSB1)->B1_POSIPI
						TRB->VALORCONT 	:= (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+ If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						TRB->ZFRANCA   	:= (cAliasSD2)->D2_DESCZFR
						TRB->ALIQ      	:= Iif(nExPis == 0,Iif(nPautaPIS <> 0,nPautaPIS,nTxPIS),nExPis)
						TRB->TIPO      	:= "PIS"
						TRB->ES			:=	"S"
						TRB->CLIFOR		:= cCliFor
						TRB->PAUTA		:= Iif(nPautaPIS <> 0,"S","N")
						MsUnlock()
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD2)->D2_EMISSAO >= dDtCorte
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Sempre efetua o debito na saida                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SF4->(FieldPos("F4_PISCRED")) >0
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1" // Se a opcao for 'calcula'/'credita', nao debita 
									TRB->PISDSAI   := nValPisPas
									TRB->BASPIDSAI := nBasPisPas					
								Endif	
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->PISCSAI   := nValPisPas
									TRB->BASPICSAI := nBasPisPas
									
								Endif	
								MsUnlock()
							Endif	
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Sempre efetua o debito na saida                                   ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If SF4->(FieldPos("F4_PISCRED")) >0
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1"  // Se a opcao for 'calcula', nao debita 
									TRB->PISDSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) ) * nRedPis ) * (TRB->ALIQ/100)
									TRB->BASPIDSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedPis
								Endif	
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->PISCSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) )  * nRedPis) * (TRB->ALIQ/100)
									TRB->BASPICSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedPis
								Endif	
								MsUnlock()
							Endif
						EndIf						
					Endif
				EndIf
				If (cAliasSF4)->F4_PISCOF $ "23" .And. mv_par01 <> 1 // 2-Cofins; 3- Ambos
					nValCofins := 0
					nBasCofins := 0
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se existem os campos para gravacao do valor/base da COFINS  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (cAliasSD2)->D2_EMISSAO >= dDtCorte .And. ;
						!Empty( nPsVlCofSa ) .And. !Empty( nPsBsCofSa ) .And. !Empty( nPsAlCofSa )
						nValCofins := ( cAliasSD2 )->( FieldGet( nPsVlCofSa ) )
						nBasCofins := ( cAliasSD2 )->( FieldGet( nPsBsCofSa ) )
						nTxCOF := ( cAliasSD2 )->( FieldGet( nPsAlCofSa ) )
					EndIf	
					
					RecLock("TRB",.T.)
					TRB->NUMNF     := (cAliasSD2)->D2_DOC
					TRB->SERIE     := (cAliasSD2)->D2_SERIE
					TRB->EMISSAO   := (cAliasSD2)->D2_EMISSAO
					TRB->CFOP      := (cAliasSD2)->D2_CF
					TRB->PRODUTO   := (cAliasSD2)->D2_COD
					TRB->NCM       := (cAliasSB1)->B1_POSIPI
					TRB->VALORCONT := (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If( (cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
					TRB->ZFRANCA   := (cAliasSD2)->D2_DESCZFR
					TRB->ALIQ      := Iif(nExCof == 0,Iif(nPautaCOF <> 0,nPautaCOF,nTxCOF),nExCof)
					TRB->TIPO      := "COF"
					TRB->ES        := "S"
					TRB->CLIFOR		:= cCliFor
					TRB->PAUTA		:= Iif(nPautaCOF <> 0,"S","N")					
					MsUnlock()
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (cAliasSD2)->D2_EMISSAO >= dDtCorte
						If SF4->(FieldPos("F4_PISCRED")) >0
							RecLock("TRB",.F.)
							If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1" // Se a opcao for 'calcula', nao debita 
								TRB->COFDSAI   := nValCofins
								TRB->BASCODSAI := nBasCofins
							Endif	
							If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
								TRB->COFCSAI   := nValCofins
								TRB->BASCOCSAI := nBasCofins
							Endif	
							MsUnlock()
						Endif	
		            Else
						If SF4->(FieldPos("F4_PISCRED")) >0
							RecLock("TRB",.F.)
							If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1"
								TRB->COFDSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) ) * nRedCOF) * (TRB->ALIQ/100)
								TRB->BASCODSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedCOF
							Endif	
							If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita ;2-Debita
								TRB->COFCSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) )  * nRedCOF) * (TRB->ALIQ/100)
								TRB->BASCOCSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedCOF
							Endif	
							MsUnlock()
						Endif	
					Endif
				EndIf							
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera as informacoes para o Resumo -  Saida ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
				
				If (cAliasSF4)->F4_PISCOF $ "123" //1-PIS;2-COFINS;3-Ambos
				
					If !(cAliasSD2)->D2_TIPO $ "BD" 
						aResumo[1][2] += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						//nVendTrib
					EndIf
					
					If (cAliasSD2)->D2_TIPO == "D" 
						aResumo[4][2] += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						//nDevCompT
					EndIF	
								
				ELSE
					If !(cAliasSD2)->D2_TIPO $ "BD" 
						aResumo[1][3] += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						//nValVend
					EndIF				
	
			   		If (cAliasSD2)->D2_TIPO == "D" 
						aResumo[4][3] += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA // Devolucoes Compras D2
						//nValDevComp
					EndIF				
				Endif
			Endif	
		EndIf
	EndIf

	(cAliasSD2)->( dbSkip())
EndDo
If lQuery
	dbSelectArea(cAliasSD2)
	dbCloseArea()
	dbSelectArea("SD2")
Else
	dbSelectArea("SD2")
	RetIndex("SD2")
	dbClearFilter()
	Ferase(cIndex+OrdBagExt())
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Processamento das Entradas                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SD1")
SD1->(dbSetOrder(6))
#IFDEF TOP
	lQuery := .T.
	cAliasSD1 := "a906AMontSD1"
	cAliasSF4 := "a906AMontSD1"
	cAliasSB1 := "a906AMontSD1"	
	cAliasSF1 := "a906AMontSD1"	

	aStruSD1  := SD1->(dbStruct())
	aStruSB1  := SB1->(dbStruct())	
	aStruSF4  := SF4->(dbStruct())	
	aStruSF1  := SF1->(dbStruct())	

	cQuery 	:= "SELECT D1_CF, D1_COD, D1_TOTAL, D1_VALDESC, B1_POSIPI, D1_DOC, D1_SERIE, D1_DTDIGIT, D1_TIPO, "
	cQuery  += "D1_ICMSRET,D1_VALIPI,D1_VALFRE,D1_SEGURO,D1_DESPESA,D1_VALICM,D1_FORNECE,D1_LOJA, "

	If !Empty( nPsVlPisEn )
		cQuery += cCpVlPisEn + ","
	EndIf

	If !Empty( nPsBsPisEn )
		cQuery += cCpBsPisEn + ","
	EndIf
	
	If !Empty( nPsAlPisEn )
		cQuery += cCpAlPisEn + ","
	EndIf	
	
	If !Empty( nPsVlCofEn ) 
		cQuery += cCpVlCofEn + "," 
	EndIf 
	
	If !Empty( nPsBsCofEn ) 
		cQuery += cCpBsCofEn + "," 
	EndIf 
	
	If !Empty( nPsAlCofEn ) 
		cQuery += cCpAlCofEn + "," 
	EndIf 
	
	If SF4->( FieldPos( "F4_AGRPIS" ) )>0
		cQuery	+=	"F4_AGRPIS,"
	EndIF

	If SF4->( FieldPos( "F4_AGRCOF" ) )>0
		cQuery	+=	"F4_AGRCOF,"
	EndIF

	cQuery  += "F4_AGREG,F4_PISCOF,F4_IPI,F1_SEGURO, F1_FRETE, F1_DESPESA, F1_VALMERC, F1_DOC,F1_SERIE,F1_FORNECE,F1_LOJA "

	If SB1->(FieldPos("B1_PPIS")) >0
		cQuery += ",B1_PPIS "
	Endif	

	If SB1->(FieldPos("B1_REDPIS")) > 0
		cQuery += ",B1_REDPIS "
	Endif	

	If SB1->(FieldPos("B1_VLR_PIS")) >0    // Valor de Pauta PIS
		cQuery += ",B1_VLR_PIS "
	Endif	

	If SB1->(FieldPos("B1_REDCOF")) > 0
		cQuery += ",B1_REDCOF "
	Endif	

	If SB1->(FieldPos("B1_PCOFINS")) > 0	
		cQuery += ",B1_PCOFINS "
	Endif
	
	If SB1->(FieldPos("B1_VLR_COF")) >0    // Valor de Pauta COFINS
		cQuery += ",B1_VLR_COF "
	Endif	

	If SB1->(FieldPos("B1_GRTRIB")) > 0	
		cQuery += ",B1_GRTRIB "
	Endif

	If SF4->(FieldPos("F4_BASEPIS")) > 0
		cQuery += ",F4_BASEPIS "
	Endif	

	If SF4->(FieldPos("F4_PISCOF")) > 0
		cQuery += ",F4_PISCOF "	
	Endif		
	
	If SF4->(FieldPos("F4_BASECOF")) > 0
		cQuery += ",F4_BASECOF "	
	Endif

	If SF4->(FieldPos("F4_PISCRED")) > 0
		cQuery += ",F4_PISCRED "	
	Endif		
	
	If lApurac
		cQuery += ",F4_PISFISC "
	Endif

	cQuery 	+= "FROM "+RetSqlName("SD1")+" SD1, "
	cQuery 	+= RetSqlName("SF4")+" SF4, "
	cQuery 	+= RetSqlName("SB1")+" SB1, "	
	cQuery 	+= RetSqlName("SF1")+" SF1 "	

	cQuery 	+= "WHERE D1_FILIAL='"+xFilial("SD1")+"' AND "
	cQuery 	+= "D1_DTDIGIT>='"+Dtos(MV_PAR02)+"' AND "
	cQuery 	+= "D1_DTDIGIT<='"+Dtos(MV_PAR03)+"' AND "
	cQuery  += "SD1.D_E_L_E_T_ = ' ' AND "

	cQuery  += "F4_FILIAL ='"+xFilial("SF4")+"' AND "
	cQuery  += "F4_CODIGO = D1_TES AND "
	cQuery  += "SF4.D_E_L_E_T_ = ' ' AND "

	//Livro Selecionado
	If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
		cQuery += " F4_NRLIVRO='"+MV_PAR05+"' AND "
	EndIf
	//
	cQuery  += "B1_FILIAL = '"+xFilial("SB1")+"' AND "
	cQuery  += "B1_COD = D1_COD AND "
	cQuery  += "SB1.D_E_L_E_T_ = ' ' AND "

	cQuery  += "F1_FILIAL = '"+xFilial("SF1")+"' AND "
	cQuery  += "F1_DOC = D1_DOC AND "
	cQuery  += "F1_SERIE = D1_SERIE AND "
	cQuery  += "F1_FORNECE = D1_FORNECE AND "
	cQuery  += "F1_LOJA = D1_LOJA AND "
	cQuery  += "F1_DTDIGIT = D1_DTDIGIT AND "
	cQuery  += "SF1.D_E_L_E_T_ = ' ' AND "
	cQuery  += "SF1.F1_TIPO NOT IN('I','P') "	//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
	
	If ExistBlock("MT996QRY")
		cQuery := ExecBlock("MT996QRY",.F.,.F.,{cQuery,2})
	EndIf

    If mv_par11 ==1
		cQuery += "ORDER BY D1_CF, D1_DOC"
	Else
		cQuery += "ORDER BY D1_CF, D1_COD"
	Endif

	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)

	For nX := 1 To len(aStruSD1)
		If aStruSD1[nX][2] <> "C" .And. FieldPos(aStruSD1[nX][1])<>0
			TcSetField(cAliasSD1,aStruSD1[nX][1],aStruSD1[nX][2],aStruSD1[nX][3],aStruSD1[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSB1)
		If aStruSB1[nX][2] <> "C" .And. FieldPos(aStruSB1[nX][1])<>0
			TcSetField(cAliasSB1,aStruSB1[nX][1],aStruSB1[nX][2],aStruSB1[nX][3],aStruSB1[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSF4)
		If aStruSF4[nX][2] <> "C" .And. FieldPos(aStruSF4[nX][1])<>0
			TcSetField(cAliasSF4,aStruSF4[nX][1],aStruSF4[nX][2],aStruSF4[nX][3],aStruSF4[nX][4])
		EndIf
	Next nX

	For nX := 1 To len(aStruSF1)
		If aStruSF1[nX][2] <> "C" .And. FieldPos(aStruSF1[nX][1])<>0
			TcSetField(cAliasSF1,aStruSF1[nX][1],aStruSF1[nX][2],aStruSF1[nX][3],aStruSF1[nX][4])
		EndIf
	Next nX                     	
	dbSelectArea(cAliasSD1)
	nPsVlPisEn := ( cAliasSD1 )->( FieldPos( cCpVlPisEn ) )
	nPsBsPisEn := ( cAliasSD1 )->( FieldPos( cCpBsPisEn ) )
	nPsAlPisEn := ( cAliasSD1 )->( FieldPos( cCpAlPisEn ) ) 	
	nPsVlCofEn := ( cAliasSD1 )->( FieldPos( cCpVlCofEn ) )
	nPsBsCofEn := ( cAliasSD1 )->( FieldPos( cCpBsCofEn ) ) 	
	nPsAlCofEn := ( cAliasSD1 )->( FieldPos( cCpAlCofEn ) )
#ELSE
    cAliasSD1 := "SD1"
    cIndex1   := CriaTrab(NIL,.F.)
	cKey	  := 'D1_CF'
	cCondicao := 'D1_FILIAL=="'+xFilial("SD1")+'".And.'
	cCondicao += 'DTOS(D1_DTDIGIT)>="'+DTOS(MV_PAR02)+'".And.DTOS(D1_DTDIGIT)<="'+DTOS(MV_PAR03)+'".And.'
	cCondicao += '!D1_TIPO$"I#P"'		//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
	IndRegua(cAliasSD1,cIndex1,cKey,,cCondicao)
	nIndex := RetIndex("SD1")
	dbSelectArea("SD1")
	dbSetIndex(cIndex1+OrdBagExt())
	 
	dbSetOrder(nIndex+1)
	dbGoTop()
	dbSelectArea(cAliasSD1)
#ENDIF
While (cAliasSD1)->(!Eof()) 
	nPautaPIS := 0
	nPautaCOF := 0
	
	If !lQuery
		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES))
		SB1->(dbSetOrder(1))
		SB1->(MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
		SF1->(dbSetOrder(1))
		SF1->(MsSeek(xFilial("SF1")+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_TIPO))
		cB1_GRTRIB := SB1->B1_GRTRIB
	Else                            
		cB1_GRTRIB := (cAliasSB1)->B1_GRTRIB
	//Livro Selecionado
		If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
			If !(SF4->F4_NRLIVRO==MV_PAR05)
				lValido := .F.
			EndIf
		EndIf
	EndIf                        

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica Cliente/Fornecedor    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SA1->(dbSetOrder(1))
	SA2->(dbSetOrder(1))
		
	If (cAliasSD1)->D1_TIPO$"DB"
		SA1->(MsSeek(xFilial("SA1")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
		cCliFor 	:= SA1->A1_NOME
	Else
		SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
		cCliFor 	:= SA2->A2_NOME
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿                                                   
	//³Verifica a excecao fiscal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cGrpTrib 	:= ""
	cUF		 	:= ""
	nExPis		:= 0
	nExCof 		:= 0
	If lA1_GRPTRIB .And. lA2_GRPTRIB .And. !Empty(cB1_GRTRIB)
		SA1->(dbSetOrder(1))
		SA2->(dbSetOrder(1))
		If (cAliasSD1)->D1_TIPO$"DB"
			SA1->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
			cGrpTrib	:= SA1->A1_GRPTRIB
			cUF			:= SA1->A1_EST
		Else
			SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
			cGrpTrib 	:= SA2->A2_GRPTRIB
			cUF			:= SA2->A2_EST
		Endif                 
	
		If !Empty(cGrpTrib)
			dbSelectArea("SF7")
			SF7->(dbSetOrder(1))
			If SF7->(dbSeek(xFilial("SF7")+cB1_GRTRIB+cGrpTrib))
				While !SF7->(Eof()) .And. SF7->F7_FILIAL+SF7->F7_GRTRIB+SF7->F7_GRPCLI == xFilial("SF7")+cB1_GRTRIB+cGrpTrib
					If (cUF == SF7->F7_EST .Or. SF7->F7_EST == "**")
						nExPis 		:= Iif(SF7->(FieldPos("F7_ALIQPIS")) > 0,SF7->F7_ALIQPIS,0)
						nExCof 		:= Iif(SF7->(FieldPos("F7_ALIQCOF")) > 0,SF7->F7_ALIQCOF,0)
						Exit
					Endif
					SF7->(dbSkip())
				End
			EndIf
		EndIf
	EndIf

	If (cAliasSF4)->F4_AGREG <> "N"
		If SB1->(FieldPos("B1_PPIS")) >0
			nTxPIS	:= 	Iif((cAliasSB1)->B1_PPIS <> 0,(cAliasSB1)->B1_PPIS , GetMv("MV_TXPIS"))    
		Endif
		If SB1->(FieldPos("B1_REDPIS")) > 0
			nRedPIS	:= 	Iif((cAliasSB1)->B1_REDPIS > 0,1-((cAliasSB1)->B1_REDPIS / 100 ), 1 )
		Endif
		If SB1->(FieldPos("B1_VLR_PIS")) >0    // Valor de Pauta PIS
			nPautaPIS := (cAliasSB1)->B1_VLR_PIS
		Endif	
		If SF4->(FieldPos("F4_BASEPIS")) > 0
			nRedPIS	*= 	Iif((cAliasSF4)->F4_BASEPIS > 0,1-((cAliasSF4)->F4_BASEPIS / 100 ), 1 )
		Endif		
		If SB1->(FieldPos("B1_REDCOF")) > 0
			nRedCOF	:= 	Iif((cAliasSB1)->B1_REDCOF > 0,1-((cAliasSB1)->B1_REDCOF / 100 ), 1 )
		Endif
		If SF4->(FieldPos("F4_BASECOF")) > 0
			nRedCOF	*= 	Iif((cAliasSF4)->F4_BASECOF > 0,1-((cAliasSF4)->F4_BASECOF / 100 ), 1 )
		EndIf
		If SB1->(FieldPos("B1_PCOFINS")) > 0
			nTxCOF	:=	if((cAliasSB1)->B1_PCOFINS <> 0,(cAliasSB1)->B1_PCOFINS , GetMv("MV_TXCOFIN"))
		Endif
		If SB1->(FieldPos("B1_VLR_COF")) >0    // Valor de Pauta COFINS
			nPautaCOF := (cAliasSB1)->B1_VLR_COF
		Endif	
		If SF4->(FieldPos("F4_PISCOF")) >0
			If !lApurac .Or. ((cAliasSF4)->F4_PISFISC<>"2")
				If (cAliasSF4)->F4_PISCOF $ "13" //1-PIS,3=Ambos
					If SF4->(FieldPos("F4_PISCRED")) >0	
						nValPisPas := 0
						nBasPisPas := 0
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se existem os campos para gravacao do valor/base do PIS  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD1)->D1_DTDIGIT >= dDtCorte .And. ;
							!Empty( nPsVlPisEn ) .And. !Empty( nPsBsPisEn ) .And. !Empty( nPsAlPisEn )
							nValPisPas := ( cAliasSD1 )->( FieldGet( nPsVlPisEn ) )
							nBasPisPas := ( cAliasSD1 )->( FieldGet( nPsBsPisEn ) )
							nTxPIS := ( cAliasSD1 )->( FieldGet( nPsAlPisEn ) )
						EndIf
						If mv_par01 <> 2 //PIS e Ambos
							RecLock("TRB",.T.)
							TRB->NUMNF     := (cAliasSD1)->D1_DOC
							TRB->SERIE     := (cAliasSD1)->D1_SERIE
							TRB->EMISSAO   := (cAliasSD1)->D1_DTDIGIT
							TRB->CFOP      := (cAliasSD1)->D1_CF
							TRB->PRODUTO   := (cAliasSD1)->D1_COD
							TRB->NCM       := (cAliasSB1)->B1_POSIPI
							TRB->VALORCONT := ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA+IIf((cAliasSF4)->F4_AGREG$"I/B",(cAliasSD1)->D1_VALICM,0))-(cAliasSD1)->D1_VALDESC
							TRB->ZFRANCA   := 0
							TRB->ALIQ      := Iif(nExPis == 0,Iif(nPautaPIS <> 0,nPautaPIS,nTxPIS),nExPis)
							TRB->TIPO      := "PIS"
							TRB->ES        := "E"
							TRB->CLIFOR		:= cCliFor
							TRB->PAUTA		:= Iif(nPautaPIS <> 0,"S","N")							
							MsUnlock()
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (cAliasSD1)->D1_DTDIGIT >= dDtCorte
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->PISCENT   := nValPisPas
									TRB->BASPICENT := nBasPisPas					
								ElseIf (cAliasSF4)->F4_PISCRED =="2"
									TRB->PISDENT   := nValPisPas
									TRB->BASPIDENT := nBasPisPas					
		                        Endif
								MsUnlock()
							Else			
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->PISCENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC) * nRedPis) * (TRB->ALIQ/100)
									TRB->BASPICENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedPis
								ElseIf (cAliasSF4)->F4_PISCRED =="2"
									TRB->PISDENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC) * nRedPis) * (TRB->ALIQ/100)
									TRB->BASPIDENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedPis
		                        Endif
								MsUnlock()
							EndIf				
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
							//³Acumula PIS no Valor Contabil                  ³
							//³Produtos importados devem agregar esses valores³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
							If SF4->(FieldPos("F4_AGRPIS")) > 0
								If (cAliasSF4)->F4_AGRPIS = "1"
								    RecLock("TRB",.F.)
									If (cAliasSF4)->F4_PISCRED == "1"
								    	TRB->VALORCONT += TRB->PISCENT 
								 	Else                               
								 		TRB->VALORCONT += TRB->PISDENT 
								 	Endif
							    	MsUnlock()
								Endif
							Endif	
						Endif
					EndIf
				Endif
				If (cAliasSF4)->F4_PISCOF $ "23" .And. mv_par01 <> 1 //2-COFINS;3-Ambos
					If SF4->(FieldPos("F4_PISCRED")) >0
						nValCofins := 0 
						nBasCofins := 0 					
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se existem os campos para gravacao do valor/base da COFINS ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD1)->D1_DTDIGIT >= dDtCorte .And. ;
							!Empty( nPsVlCofEn ) .And. !Empty( nPsBsCofEn ) .And. !Empty( nPsAlCofEn )
							nValCofins := ( cAliasSD1 )->( FieldGet( nPsVlCofEn ) )
							nBasCofins := ( cAliasSD1 )->( FieldGet( nPsBsCofEn ) )
							nTxCOF := ( cAliasSD1 )->( FieldGet( nPsAlCofEn ) )
						EndIf	
					
						RecLock("TRB",.T.)
						TRB->NUMNF     := (cAliasSD1)->D1_DOC
						TRB->SERIE     := (cAliasSD1)->D1_SERIE   
						TRB->EMISSAO   := (cAliasSD1)->D1_DTDIGIT
						TRB->CFOP      := (cAliasSD1)->D1_CF
						TRB->PRODUTO   := (cAliasSD1)->D1_COD
						TRB->NCM       := (cAliasSB1)->B1_POSIPI
						TRB->VALORCONT := ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA+IIf((cAliasSF4)->F4_AGREG$"I/B",(cAliasSD1)->D1_VALICM,0))-(cAliasSD1)->D1_VALDESC
						TRB->ZFRANCA   := 0
						TRB->ALIQ      := Iif(nExCof == 0,Iif(nPautaCOF <> 0,nPautaCOF,nTxCOF),nExCof)
						TRB->TIPO      := "COF"
						TRB->ES        := "E"        
						TRB->CLIFOR    := cCliFor 
						TRB->PAUTA	   := Iif(nPautaCOF <> 0,"S","N")
						MsUnlock()
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD1)->D1_DTDIGIT >= dDtCorte
							RecLock("TRB",.F.)
							If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
								TRB->COFCENT   := nValCofins
								TRB->BASCOCENT := nBasCofins
							ElseIf (cAliasSF4)->F4_PISCRED =="2"
								TRB->COFDENT   := nValCofins
								TRB->BASCODENT := nBasCofins 
		                    Endif
		                    MsUnlock()
						Else
							RecLock("TRB",.F.)
							If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita ;2-Debita
								TRB->COFCENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedCOF) * (TRB->ALIQ/100)
								TRB->BASCOCENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedCOF
							ElseIf	(cAliasSF4)->F4_PISCRED =="2"
								TRB->COFDENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedCOF) * (TRB->ALIQ/100)
								TRB->BASCODENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedCOF
							Endif	
							MsUnlock()
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
						//³Acumula COFINS no Valor Contabil               ³
						//³Produtos importados devem agregar esses valores³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
						If SF4->(FieldPos("F4_AGRCOF")) > 0
							If (cAliasSF4)->F4_AGRCOF = "1"
							    RecLock("TRB",.F.)
							    If (cAliasSF4)->F4_PISCRED == "1"
							    	TRB->VALORCONT += TRB->COFCENT
							    Else                              
							    	TRB->VALORCONT += TRB->COFDENT
							    Endif
						    	MsUnlock()
							Endif
						Endif	
					Endif	
				Endif
											
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera as informacoes para o Resumo -  Entrada ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						
				If (cAliasSF4)->F4_PISCOF $ "123" //1-PIS;2-COFINS;3-Ambos
				 
					If !(cAliasSD1)->D1_TIPO $ "BD"
					 	aResumo[3][2] += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
					 	//nCompTrib
					EndIf                         
					
					If (cAliasSD1)->D1_TIPO == "D" 
						aResumo[2][2] += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						//nDevVendT
					EndIF
									
				ELSE		
					If !(cAliasSD1)->D1_TIPO $ "BD" 
						 aResumo[3][3] += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						 //nValComp
					EndIF						
					If (cAliasSD1)->D1_TIPO == "D" 
						aResumo[2][3] += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						//nValDevVend
					EndIF		
				EndIf							
			EndIf
		EndIf
	EndIf
	
	(cAliasSD1)->( dbSkip())
EndDo

If lQuery
	dbSelectArea(cAliasSD1)
	dbCloseArea()
	dbSelectArea("SD1")
Else
	dbSelectArea("SD1")
	RetIndex("SD1")
	Set Filter to
	Ferase(cIndex1+OrdBagExt())
EndIf
 
Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³MATR906R3 ³ Autor ³ Nereu Humberto Jr.    ³ Data ³ 17/02/03 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Relatorio PIS e COFINS (Release 3)                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAFIS                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function MATR906R3
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local   cText1   := STR0001 //"Este programa emite Relatorio das Contribuicoes ao PIS e COFINS"
Local   cString  := "SD2"
Local	aOrd	 := {STR0036, STR0037, STR0056}
Private cTitulo  := STR0002 //"Relatorio - (PIS/COFINS)"
Private cPerg    := "MTR906"
Private nLastKey := 0
Private m_pag    := 01
Private Limite   := 220
Private cTamanho := "G"
Private lEnd     := .F.
Private NomeProg := "MATR906"
Private aReturn  := { STR0003 , 1, STR0004 , 2, 2, 1, "",1 } //"Zebrado" , "Administracao"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas para parametros                     ³
//³ mv_par01            // Pis/Cofins/Ambos ?                ³
//³ mv_par02            // Data Inicial                      ³
//³ mv_par03            // Data Final                        ³
//³ mv_par04            // Analitico/Sintetico               ³
//³ mv_par05            // Livro Selecionado                 ³
//³ mv_par06            // Processa filiais                  ³
//³ mv_par07            // Filial Inicial                    ³
//³ mv_par08            // Filial Final                      ³
//| mv_par09			// Total por Dia                     |
//| mv_par10			// Resumo por CFOP                   |
//| mv_par11			// Resumo das Notas Fiscais          |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()
Pergunte(cPerg,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel:="MATR906"   // nome default do relatorio em disco
wnrel:=SetPrint(cString,wnrel,cPerg,cTitulo,cText1,,,.F.,aOrd,,cTamanho,,.F.)
If nLastKey==27
   dbClearFilter()
   Return
Endif       
SetDefault(aReturn,cString)
If nLastKey==27
   dbClearFilter()
   Return
Endif       

RptStatus({|lEnd| a906Relat(@lEnd,wnRel,cString,cTamanho)},cTitulo)

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A906Relat    ³ Autor ³Edstron E. Correia ³ Data ³ 02/07/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Selecao e Emissao das Contribuicoes ao PIS e COFINS        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A906Relat(lEnd,WnRel,cString,cTamanho)

Local aStruSD1		:= {}
Local aStruSD2		:= {}
Local aStruSB1 		:= {}
Local aStruSF2		:= {}
Local aStruSF1		:= {}
Local aStruSF4		:= {}
Local aResAliCF		:= {}   // Resumo por Aliquota + CFOP
Local aArqTemp		:= {}
Local aPIS			:= {}
Local aCOFINS		:= {}
Local aRelImp		:= MaFisRelImp("MT100",{ "SD1" })
Local aRelImp2		:= MaFisRelImp("MT100",{ "SD2" })
Local aTotaisPIS	:= Array( 8 )
Local aTotaisCOF	:= Array( 8 ) 
Local aAliqs		:= {}
Local aDedRet		:= {0,0}
Local aTotSai		:= Array(3)
Local aTotDevS		:= Array(3)
Local aTotEnt		:= Array(3)
Local aTotDevE		:= Array(3)
Local aTotApur		:= Array(2,3)
Local aTAlPISS		:= {}  
Local aTAlCOFS		:= {}  
Local aTAlPISE		:= {}  
Local aTAlCOFE		:= {}  
Local aCFOPPISS		:= {}  
Local aCFOPCOFS   	:= {}  
Local aCFOPPISE   	:= {}  
Local aCFOPCOFE   	:= {}        
Local aAliqCFGer	:= {}
Local aContrAliq    := Array(6)
Local aValContri    := Array(6)
Local aRet			:= {0,0}

Local cAliasSD2  	:= "SD2"
Local cAliasSD1  	:= "SD1"
Local cAliasSB1  	:= "SB1"
Local cAliasSF4  	:= "SF4"
Local cAliasSF2  	:= "SF2"
Local cAliasSF1  	:= "SF1"
Local cCpVlPisEn 	:= ""
Local cCpBsPisEn 	:= ""
Local cCpVlPisSa 	:= ""
Local cCpBsPisSa 	:= ""
Local cCpAlPisSa 	:= ""
Local cCpAlPisEn 	:= ""
Local cCpVlCofEn 	:=  ""
Local cCpBsCofEn 	:=  ""
Local cCpVlCofSa 	:= ""
Local cCpBsCofSa 	:= ""
Local cCpAlCofEn 	:= ""
Local cCpAlCofSa 	:= ""
Local cLinha     	:= ""
Local cLinha2		:= ""
Local cArqTemp   	:= ""
Local cabec1     	:= ""
Local cabec2     	:= ""
Local cQuebra    	:= ""
Local cTipo      	:= ""
Local cContArq   	:= ""
Local cLinArq    	:= ""
Local cArqCp     	:= ""
Local cGrpTrib 	   	:= ""
Local cUF		   	:= ""
Local cB1_GRTRIB  	:= ""
Local cFilOri     	:= SM0->M0_CODFIL
Local cFilIni     	:= ""
Local cFilFin     	:= ""
Local cFilProc    	:= ""           
Local cCFOP		  	:= ""
Local cDesc_cfop  	:= ""                                     
Local CNumNota     := ""                                     
Local cSerie       := ""
Local cEmissao     := ""
Local cNcm         := ""
Local cProd        := ""
Local dDtCorte	  	:= GetNewPar("MV_DTCORTE",CtoD("01/02/2004"))		//A partir desta data o sistema devera utilizar as informacoes gravadas na base
Local cCliFor		:= ""           

Local lRet       	:= .F.
Local lContinua  	:= .T.
Local lEntrada   	:= .F.
Local lQuebra    	:= .F.
Local lFirst     	:= .F.
Local lResumo	 	:= .F.
Local lA1_GRPTRIB 	:= SA1->(FieldPos("A1_GRPTRIB")) != 0
Local lA2_GRPTRIB 	:= SA2->(FieldPos("A2_GRPTRIB")) != 0
Local lApurac     	:= (SF4->(FieldPos("F4_PISFISC")) > 0)

Local nPos		  	:= 0
Local nX		    := 0
Local nRedPis	  	:= 1
Local nRedCOF	  	:= 1
Local nValPisPas 	:= 0
Local nBasPisPas 	:= 0
Local nPsVlPisEn 	:= 0
Local nPsBsPisEn 	:= 0
Local nPsVlPisSa 	:= 0
Local nPsBsPisSa 	:= 0
Local nPsAlPisEn 	:= 0
Local nPsAlPisSa 	:= 0
Local nPosCofins 	:= 0 
Local nValCofins 	:= 0 
Local nBasCofins 	:= 0 
Local nPsVlCofEn 	:= 0 
Local nPsBsCofEn 	:= 0  
Local nPsVlCofSa 	:= 0 
Local nPsBsCofSa 	:= 0 
Local nPsAlCofEn 	:= 0  
Local nPsAlCofSa 	:= 0 
Local nScanPis   	:= 0
Local nScanCof   	:= 0  
Local nTxPis     	:= 0
Local nTxCof     	:= 0
Local nCredPis   	:= 0
Local nCredCof   	:= 0
Local nValCont   	:= 0
Local nZFranca   	:= 0
Local nValDebi   	:= 0
Local nValCred   	:= 0
Local nBasDebi   	:= 0
Local nBasCred   	:= 0
Local nDValCont   	:= 0
Local nDZFranca   	:= 0
Local nDValDebi   	:= 0
Local nDValCred   	:= 0
Local nDBasDebi   	:= 0
Local nDBasCred   	:= 0
Local nGValCont  	:= 0
Local nGZFranca  	:= 0
Local nGValDebi  	:= 0
Local nGValCred  	:= 0
Local nGBasDebi  	:= 0
Local nGBasCred  	:= 0
Local nValContri 	:= 0
Local nContCp    	:= 0
Local nExPis      	:= 0
Local nExCof      	:= 0
Local nValDevVend 	:= 0
Local nValComp    	:= 0
Local nValVend    	:= 0 
Local nValDevComp 	:= 0
Local nVendTrib	  	:= 0
Local nDevCompT   	:= 0
Local nCompTrib   	:= 0
Local nDevVendT   	:= 0 
Local nTValPIS    	:= 0
Local nTValCOF    	:= 0
Local nTotal      	:= 0 
Local nTot_emp	  	:= 0
Local nPosAliq    	:= 0            
Local nContrAli		:= 0
Local nAliq			:= 0 
Local nAcVlrCtb 	:= 0
Local nAcZfranca	:= 0
Local nAcVlrCtbD	:= 0
Local nAcVlrCtbC	:= 0
Local nAcBsCtbD		:= 0
Local nAcBsCtbC		:= 0 
Local nCt			:= 0  
Local nPautaPIS		:= 0
Local nPautaCOF		:= 0
Local nXX			:= 0
Local nLiAnt        := 0 
Local nAliqP		:= 0

cbtxt      := Space(10)
cbcont     := 00
li         := 80

If mv_par04 == 1 // Analitico
	Cabec1 := STR0022  //" Produto          NCM         Valor Contabil            Zona Franca      Aliquota              Valor da Contribuicao                            Base da Contribuicao              Documento   Serie  Emissao   Cliente/Forn."
Else	                                                                                                                                                                                                                                              
	Cabec1 := STR0005  //" Produto          NCM         Valor Contabil            Zona Franca      Aliquota              Valor da Contribuicao                            Base da Contribuicao"
Endif	

Cabec2 := STR0006  //"                                                          Desconto                             Debito                 Credito                  Debito                 Credito" 

// " Produto          NCM         Valor Contabil            Zona Franca      Aliquota              Valor da Contribuicao                            Base da Contribuicao              Documento   Serie  Emissao                "
// "                                                          Desconto                             Debito                 Credito                  Debito                 Credito" 
// "XXXXXXXXXXXXXXX  XXXXXXXXXX  999,999,999,999.99   999,999,999,999.99    99.99    999,999,999,999.99      999,999,999,999.99      999,999,999,999.99      999,999,999,999.99
// 0         1         2         3         4         5         6         7         8         9         10        11        12        13        14        15        16        17        18        19        20        21        22
// 012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901


SetRegua(SD1->(LastRec())+SD2->(LastRec())) 

//Inicialização do Array de Total Contribuicao
For nCt := 1 To len(aValContri)
	aValContri[nCt] := 0
Next nCt  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do PIS - Entrada                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_BASEPS2"} ) )
	cCpBsPisEn := aRelImp[nScanPis,2]
	nPsBsPisEn := SD1->(FieldPos(cCpBsPisEn))
EndIf
If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_VALPS2"} ) )
	cCpVlPisEn := aRelImp[nScanPis,2]
	nPsVlPisEn := SD1->(FieldPos(cCpVlPisEn))
EndIf
If !Empty( nScanPis := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQPS2"} ) )
	cCpAlPisEn := aRelImp[nScanPis,2]
	nPsAlPisEn := SD1->(FieldPos(cCpAlPisEn))
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do PIS - Saida                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_BASEPS2"} ) )
	cCpBsPisSa := aRelImp2[nScanPis,2]
	nPsBsPisSa := SD2->(FieldPos(cCpBsPisSa))
EndIf
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_VALPS2"} ) )
	cCpVlPisSa := aRelImp2[nScanPis,2]
	nPsVlPisSa := SD2->(FieldPos(cCpVlPisSa))
EndIf 	
If !Empty( nScanPis := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_ALIQPS2"} ) )
	cCpAlPisSa := aRelImp2[nScanPis,2]
	nPsAlPisSa := SD2->(FieldPos(cCpAlPisSa))
EndIf 	

AFill( aTotaisCof, 0 ) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do COF - Entrada                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_BASECF2"} ) )
	cCpBsCofEn := aRelImp[nScanCof,2]
	nPsBsCofEn := SD1->(FieldPos(cCpBsCofEn))
EndIf 	

If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_VALCF2"} ) )
	cCpVlCofEn := aRelImp[nScanCof,2]
	nPsVlCofEn := SD1->(FieldPos(cCpVlCofEn))
EndIf 	

If !Empty( nScanCof := aScan(aRelImp,{|x| x[1]=="SD1" .And. x[3]=="IT_ALIQCF2"} ) )
	cCpAlCofEn := aRelImp[nScanCof,2]
	nPsAlCofEn := SD1->(FieldPos(cCpAlCofEn))
EndIf 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento para os campos do COF - Saida                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_BASECF2"} ) )
	cCpBsCofSa := aRelImp2[nScanCof,2]
	nPsBsCofSa := SD2->(FieldPos(cCpBsCofSa))
EndIf 	

If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_VALCF2"} ) )
	cCpVlCofSa := aRelImp2[nScanCof,2]
	nPsVlCofSa := SD2->(FieldPos(cCpVlCofSa))
EndIf 	

If !Empty( nScanCof := aScan(aRelImp2,{|x| x[1]=="SD2" .And. x[3]=="IT_ALIQCF2"} ) )
	cCpAlCofSa := aRelImp2[nScanCof,2]
	nPsAlCofSa := SD2->(FieldPos(cCpAlCofSa))
EndIf 	

AADD(aArqTemp,{"NUMNF"		,"C",TamSx3("D2_DOC")[1],0})
AADD(aArqTemp,{"SERIE"		,"C",03,0})
AADD(aArqTemp,{"EMISSAO"   ,"D",08,0})
AADD(aArqTemp,{"TIPO"		,"C",03,0})
AADD(aArqTemp,{"CFOP"	    ,"C",04,0})
AADD(aArqTemp,{"PRODUTO"	,"C",15,0})
AADD(aArqTemp,{"NCM"		,"C",10,0})
AADD(aArqTemp,{"VALORCONT"	,"N",14,2})
AADD(aArqTemp,{"ZFRANCA"	,"N",14,2})
AADD(aArqTemp,{"ALIQ"		,"N",05,2})
AADD(aArqTemp,{"PISCSAI"	,"N",14,2})
AADD(aArqTemp,{"PISDSAI"	,"N",14,2})
AADD(aArqTemp,{"BASPICSAI"	,"N",14,2})
AADD(aArqTemp,{"BASPIDSAI"	,"N",14,2})
AADD(aArqTemp,{"PISCENT"	,"N",14,2})
AADD(aArqTemp,{"PISDENT"	,"N",14,2})
AADD(aArqTemp,{"BASPICENT"	,"N",14,2})
AADD(aArqTemp,{"BASPIDENT"	,"N",14,2})
AADD(aArqTemp,{"COFCSAI"	,"N",14,2})
AADD(aArqTemp,{"COFDSAI"	,"N",14,2})
AADD(aArqTemp,{"BASCOCSAI"	,"N",14,2})
AADD(aArqTemp,{"BASCODSAI"	,"N",14,2})
AADD(aArqTemp,{"COFCENT"	,"N",14,2})
AADD(aArqTemp,{"COFDENT"	,"N",14,2})
AADD(aArqTemp,{"BASCOCENT"	,"N",14,2})
AADD(aArqTemp,{"BASCODENT"	,"N",14,2})
AADD(aArqTemp,{"ES"			,"C",01,0})
AADD(aArqTemp,{"CLIFOR"		,"C",16,0})
AADD(aArqTemp,{"PAUTA"		,"C",01,0})     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Array para totalizar os movimentos por filial³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX := 1 to 3
	aTotSai[nX] 	:= 0
	aTotDevS[nX]	:= 0
	aTotEnt[nX]		:= 0
	aTotDevE[nX]	:= 0
	aTotApur[1][nX]	:= 0
	aTotApur[2][nX]	:= 0
Next
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se ira processar mais de uma filial.                                        ³
//³Se sim, ira emitir o relatorio separadamente, criando um resumo das filiais ao final.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par06 == 1
	cFilIni := mv_par07
	cFilFin := mv_par08
Else
	cFilIni := cFilAnt
	cFilFin := cFilAnt
Endif

dbSelectArea("SM0")
SM0->(dbSeek(cEmpAnt+cFilIni,.T.))

cFilProc := cFilIni
	
While SM0->M0_CODIGO == cEmpAnt .And. SM0->M0_CODFIL <= cFilFin .And. !SM0->(Eof())
	
	cFilAnt := SM0->M0_CODFIL

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria o temporario para cada filial processada.                 ³
	//³Ao final do processamento, deleta o temporario filial a filial.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqTemp := CriaTrab(aArqTemp)
	dbUseArea(.T.,__LocalDriver,cArqTemp,"TRB")
	IndRegua("TRB",cArqTemp,IIF(MV_PAR09==1,"TIPO+CFOP+DTOS(EMISSAO)","TIPO+CFOP"))
	dbSelectArea("TRB")
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento das Saidas                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD2")
	SD2->(dbSetOrder(5))
	#IFDEF TOP
		lQuery := .T.
		cAliasSD2 := "a906AMontSD2"
		cAliasSF2 := "a906AMontSD2"
		cAliasSF4 := "a906AMontSD2"
		cAliasSB1 := "a906AMontSD2"
	
		aStruSD2  := SD2->(dbStruct())
		aStruSB1  := SB1->(dbStruct())	
		aStruSF4  := SF4->(dbStruct())	
		aStruSF2  := SF2->(dbStruct())	
	
		cQuery 	:= "SELECT F4_AGREG,F4_IPI,F2_SERIE,F2_DOC,F2_SEGURO,F2_FRETE,F2_DESPESA,F2_VALMERC,D2_TOTAL,D2_DOC,D2_SERIE,D2_EMISSAO,D2_CF,D2_COD,D2_DESCZFR,B1_POSIPI,D2_TIPO,"
		cQuery  += "D2_ICMSRET,D2_VALIPI,D2_VALFRE,D2_SEGURO,D2_DESPESA,D2_CLIENTE,D2_LOJA "
		If !Empty( nPsVlPisSa )
			cQuery += "," + cCpVlPisSa
		EndIf
	
		If !Empty( nPsBsPisSa )
			cQuery += "," + cCpBsPisSa
		EndIf
		
		If !Empty( nPsAlPisSa )
			cQuery += "," + cCpAlPisSa
		EndIf
		
		If !Empty( nPsVlCofSa ) 
			cQuery += "," + cCpVlCOfSa 
		EndIf 
		
		If !Empty( nPsBsCofSa ) 
			cQuery += "," + cCpBsCofSa 
		EndIf 
	
		If !Empty( nPsAlCofSa ) 
			cQuery += "," + cCpAlCOfSa 
		EndIf 	
	
		If SB1->(FieldPos("B1_PPIS")) >0
			cQuery += ",B1_PPIS "
		Endif	
	
		If SB1->(FieldPos("B1_REDPIS")) > 0
			cQuery += ",B1_REDPIS "
		Endif	
	
		If SB1->(FieldPos("B1_VLR_PIS")) > 0 //Valor de Pauta PIS
			cQuery += ",B1_VLR_PIS "
		Endif	

		If SB1->(FieldPos("B1_REDCOF")) > 0
			cQuery += ",B1_REDCOF "
		Endif	
	
		If SB1->(FieldPos("B1_PCOFINS")) > 0	
			cQuery += ",B1_PCOFINS "
		Endif
	
		If SB1->(FieldPos("B1_VLR_COF")) > 0 //Valor de Pauta COFINS
			cQuery += ",B1_VLR_COF "
        Endif

		If SB1->(FieldPos("B1_GRTRIB")) > 0	
			cQuery += ",B1_GRTRIB "
		Endif

		If SF4->(FieldPos("F4_BASEPIS")) > 0
			cQuery += ",F4_BASEPIS "	
		Endif		
		
		If SF4->(FieldPos("F4_BASECOF")) > 0
			cQuery += ",F4_BASECOF "	
		Endif
	
		If SF4->(FieldPos("F4_PISCOF")) > 0
			cQuery += ",F4_PISCOF "	
		Endif		
	
		If SF4->(FieldPos("F4_PISCRED")) > 0
			cQuery += ",F4_PISCRED "	
		Endif		
		
		If lApurac
			cQuery += ",F4_PISFISC "
		Endif
	
		cQuery 	+= "FROM "+RetSqlName("SD2")+" SD2, "
		cQuery 	+= RetSqlName("SF4")+" SF4, "	
		cQuery 	+= RetSqlName("SB1")+" SB1, "	
		cQuery 	+= RetSqlName("SF2")+" SF2 "		
	
		cQuery 	+= "WHERE D2_FILIAL='"+xFilial("SD2")+"' AND "
		cQuery 	+= "D2_EMISSAO>='"+Dtos(MV_PAR02)+"' AND "
		cQuery 	+= "D2_EMISSAO<='"+Dtos(MV_PAR03)+"' AND "
		cQuery  += "SD2.D_E_L_E_T_ = ' ' AND "	
	
		cQuery  += "F4_FILIAL = '"+xFilial("SF4")+"' AND "
		cQuery  += "F4_CODIGO = D2_TES AND "
		cQuery  += "SF4.D_E_L_E_T_ = ' ' AND "
	
		//Livro Selecionado
		If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
			cQuery += " F4_NRLIVRO='"+MV_PAR05+"' AND "
		EndIf
		cQuery  += "B1_FILIAL = '"+xFilial("SB1")+"' AND "
		cQuery  += "B1_COD = D2_COD AND "
		cQuery  += "SB1.D_E_L_E_T_ = ' ' AND "
	
		cQuery  += "F2_FILIAL = '"+xFilial("SF2")+"' AND "
		cQuery  += "F2_DOC = D2_DOC AND "
		cQuery  += "F2_SERIE = D2_SERIE AND "
		cQuery  += "F2_CLIENTE = D2_CLIENTE AND "	
		cQuery  += "F2_LOJA = D2_LOJA AND "		
		cQuery  += "F2_EMISSAO = D2_EMISSAO AND "	
		cQuery  += "SF2.D_E_L_E_T_ = ' ' AND "
		cQuery  += "SF2.F2_TIPO NOT IN('I', 'P') "	//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
		
		If ExistBlock("MT996QRY")
			cQuery := ExecBlock("MT996QRY",.F.,.F.,{cQuery,1})
		EndIf
	
	    If mv_par11 ==1
			cQuery += "ORDER BY D2_CF, D2_DOC"
		Else
			cQuery += "ORDER BY D2_CF, D2_COD"
		Endif	
	
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)
	
		For nX := 1 To len(aStruSD2)
			If aStruSD2[nX][2] <> "C" .And. FieldPos(aStruSD2[nX][1])<>0
				TcSetField(cAliasSD2,aStruSD2[nX][1],aStruSD2[nX][2],aStruSD2[nX][3],aStruSD2[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSB1)
			If aStruSB1[nX][2] <> "C" .And. FieldPos(aStruSB1[nX][1])<>0
				TcSetField(cAliasSB1,aStruSB1[nX][1],aStruSB1[nX][2],aStruSB1[nX][3],aStruSB1[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSF4)
			If aStruSF4[nX][2] <> "C" .And. FieldPos(aStruSF4[nX][1])<>0
				TcSetField(cAliasSF4,aStruSF4[nX][1],aStruSF4[nX][2],aStruSF4[nX][3],aStruSF4[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSF2)
			If aStruSF2[nX][2] <> "C" .And. FieldPos(aStruSF2[nX][1])<>0
				TcSetField(cAliasSF2,aStruSF2[nX][1],aStruSF2[nX][2],aStruSF2[nX][3],aStruSF2[nX][4])
			EndIf
		Next nX
	
		dbSelectArea(cAliasSD2)	
		nPsVlPisSa := ( cAliasSD2 )->( FieldPos( cCpVlPisSa ) )
		nPsBsPisSa := ( cAliasSD2 )->( FieldPos( cCpBsPisSa ) )
		nPsAlPisSa := ( cAliasSD2 )->( FieldPos( cCpAlPisSa ) )
		nPsVlCofSa := ( cAliasSD2 )->( FieldPos( cCpVlCofSa ) ) 
		nPsBsCOfSa := ( cAliasSD2 )->( FieldPos( cCpBsCofSa ) ) 
		nPsAlCofSa := ( cAliasSD2 )->( FieldPos( cCpAlCofSa ) ) 
	#ELSE
	    cAliasSD2 := "SD2"
	    cIndex    := CriaTrab(NIL,.F.)
		cKey	  := 'D2_CF'
		cCondicao := 'D2_FILIAL=="'+xFilial("SD2")+'".And.'
		cCondicao += 'DTOS(D2_EMISSAO)>="'+DTOS(MV_PAR02)+'".And.DTOS(D2_EMISSAO)<="'+DTOS(MV_PAR03)+'".And.'
		cCondicao += '!D2_TIPO$"I#P"'		//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
		IndRegua(cAliasSD2,cIndex,cKey,,cCondicao)
		nIndex := RetIndex("SD2")
		dbSelectArea("SD2")
		dbSetIndex(cIndex+OrdBagExt())
		 
		dbSetOrder(nIndex+1)
		dbGoTop()
		dbSelectArea(cAliasSD2)
	#ENDIF
	While (cAliasSD2)->(!Eof()) 
		nPautaPIS := 0
		nPautaCOF := 0
		
		If !lQuery
			SF4->(dbSetOrder(1))
			SF4->(MsSeek(xFilial("SF4")+(cAliasSD2)->D2_TES))
			SB1->(dbSetOrder(1))
			SB1->(MsSeek(xFilial("SB1")+(cAliasSD2)->D2_COD))
			SF2->(dbSetOrder(1))
			SF2->(MsSeek(xFilial("SF2")+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
			cB1_GRTRIB := SB1->B1_GRTRIB
		Else                            
			cB1_GRTRIB := (cAliasSB1)->B1_GRTRIB
		EndIf                        
		                            
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica Cliente/Fornecedor    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SA1->(dbSetOrder(1))
		SA2->(dbSetOrder(1))

		If (cAliasSD2)->D2_TIPO$"DB"
			SA2->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
			cCliFor 	:= SA2->A2_NOME
		Else
			SA1->(MsSeek(xFilial("SA1")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
			cCliFor 	:= SA1->A1_NOME
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a excecao fiscal³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cGrpTrib 	:= ""
		cUF		 	:= ""
		nExPis		:= 0
		nExCof 		:= 0
		If lA1_GRPTRIB .And. lA2_GRPTRIB .And. !Empty(cB1_GRTRIB)
			SA1->(dbSetOrder(1))
			SA2->(dbSetOrder(1))
			If (cAliasSD2)->D2_TIPO$"DB"
				SA2->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
				cGrpTrib 	:= SA2->A2_GRPTRIB
				cUF			:= SA2->A2_EST
			Else
				SA1->(MsSeek(xFilial("SA2")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA))
				cGrpTrib	:= SA1->A1_GRPTRIB
				cUF			:= SA1->A1_EST 
			Endif                 
		
			If !Empty(cGrpTrib)
				dbSelectArea("SF7")
				SF7->(dbSetOrder(1))
				If SF7->(dbSeek(xFilial("SF7")+cB1_GRTRIB+cGrpTrib))
					While !SF7->(Eof()) .And. SF7->F7_FILIAL+SF7->F7_GRTRIB+SF7->F7_GRPCLI == xFilial("SF7")+cB1_GRTRIB+cGrpTrib
						If (cUF == SF7->F7_EST .Or. SF7->F7_EST == "**")
							nExPis 		:= Iif(SF7->(FieldPos("F7_ALIQPIS")) > 0,SF7->F7_ALIQPIS,0)
							nExCof 		:= Iif(SF7->(FieldPos("F7_ALIQCOF")) > 0,SF7->F7_ALIQCOF,0)
							Exit
						Endif
						SF7->(dbSkip())
					End
				EndIf
			EndIf
		EndIf
		
		If (cAliasSF4)->F4_AGREG <> "N"
	
			If SB1->(FieldPos("B1_PPIS")) >0
				nTxPIS	:= 	Iif((cAliasSB1)->B1_PPIS <> 0,(cAliasSB1)->B1_PPIS , GetMv("MV_TXPIS"))
			Endif
	
			If SB1->(FieldPos("B1_REDPIS")) > 0
				nRedPIS	:= 	Iif((cAliasSB1)->B1_REDPIS > 0,1-((cAliasSB1)->B1_REDPIS / 100 ), 1 )
			Endif
			
			If SF4->(FieldPos("F4_BASEPIS")) > 0
				nRedPIS	*= 	Iif((cAliasSF4)->F4_BASEPIS > 0,1-((cAliasSF4)->F4_BASEPIS / 100 ), 1 )
			Endif
			
			If SB1->(FieldPos("B1_VLR_PIS")) > 0
				nPautaPIS	:= 	(cAliasSB1)->B1_VLR_PIS
			Endif

			If SB1->(FieldPos("B1_REDCOF")) > 0
				nRedCOF	:= 	Iif((cAliasSB1)->B1_REDCOF > 0,1-((cAliasSB1)->B1_REDCOF / 100 ), 1 )
			EndIf
			
			If SF4->(FieldPos("F4_BASECOF")) > 0
				nRedCOF	*= 	Iif((cAliasSF4)->F4_BASECOF > 0,1-((cAliasSF4)->F4_BASECOF / 100 ), 1 )
			EndIf
	
			If SB1->(FieldPos("B1_PCOFINS")) > 0	
				nTxCOF	:=	if((cAliasSB1)->B1_PCOFINS <> 0,(cAliasSB1)->B1_PCOFINS , GetMv("MV_TXCOFIN"))
			Endif
	           
			If SB1->(FieldPos("B1_VLR_COF")) > 0
				nPautaCOF	:= 	(cAliasSB1)->B1_VLR_COF
			Endif

			If SF4->(FieldPos("F4_PISCOF")) > 0
				If !lApurac .Or. ((cAliasSF4)->F4_PISFISC<>"2")
					If (cAliasSF4)->F4_PISCOF $ "13" //1-PIS;3-Ambos
						nValPisPas := 0
						nBasPisPas := 0
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se existem os campos para gravacao do valor/base do PIS  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD2)->D2_EMISSAO >= dDtCorte .And. ;
							!Empty( nPsVlPisSa ) .And. !Empty( nPsBsPisSa ) .And.  !Empty( nPsAlPisSa )
							nValPisPas := ( cAliasSD2 )->( FieldGet( nPsVlPisSa ) )
							nBasPisPas := ( cAliasSD2 )->( FieldGet( nPsBsPisSa ) )
							nTxPIS := ( cAliasSD2 )->( FieldGet( nPsAlPisSa ) )
						EndIf
						
						If mv_par01 <> 2 //PIS e Ambos
							RecLock("TRB",.T.)
							TRB->NUMNF     	:= (cAliasSD2)->D2_DOC
							TRB->SERIE     	:= (cAliasSD2)->D2_SERIE
							TRB->EMISSAO   	:= (cAliasSD2)->D2_EMISSAO
							TRB->CFOP      	:= (cAliasSD2)->D2_CF
							TRB->PRODUTO   	:= (cAliasSD2)->D2_COD
							TRB->NCM       	:= (cAliasSB1)->B1_POSIPI
							TRB->VALORCONT 	:= (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+ If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
							TRB->ZFRANCA   	:= (cAliasSD2)->D2_DESCZFR
							TRB->ALIQ      	:= Iif(nExPis == 0,Iif(nPautaPIS <> 0,nPautaPIS,nTxPIS),nExPis)
							TRB->TIPO      	:= "PIS"
							TRB->ES			:=	"S"
							TRB->CLIFOR		:= cCliFor
							TRB->PAUTA		:= Iif(nPautaPIS <> 0,"S","N")
							MsUnlock()
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (cAliasSD2)->D2_EMISSAO >= dDtCorte
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Sempre efetua o debito na saida                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If SF4->(FieldPos("F4_PISCRED")) >0
									RecLock("TRB",.F.)
									If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1" // Se a opcao for 'calcula'/'credita', nao debita 
										TRB->PISDSAI   := nValPisPas
										TRB->BASPIDSAI := nBasPisPas					
									Endif	
									If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
										TRB->PISCSAI   := nValPisPas
										TRB->BASPICSAI := nBasPisPas
									Endif	
									MsUnlock()
								Endif	
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Sempre efetua o debito na saida                                   ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If SF4->(FieldPos("F4_PISCRED")) >0
									RecLock("TRB",.F.)
									If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1"  // Se a opcao for 'calcula', nao debita 
										TRB->PISDSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) ) * nRedPis ) * (TRB->ALIQ/100)
										TRB->BASPIDSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedPis
									Endif	
									If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
										TRB->PISCSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) )  * nRedPis) * (TRB->ALIQ/100)
										TRB->BASPICSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedPis
									Endif	
									MsUnlock()
								Endif
							EndIf						
						Endif
					EndIf
					If (cAliasSF4)->F4_PISCOF $ "23" .And. mv_par01 <> 1 // 2-Cofins; 3- Ambos
						nValCofins := 0 
						nBasCofins := 0 					
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica se existem os campos para gravacao do valor/base da COFINS  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD2)->D2_EMISSAO >= dDtCorte .And. ;
							!Empty( nPsVlCofSa ) .And. !Empty( nPsBsCofSa ) .And. !Empty( nPsAlCofSa )
							nValCofins := ( cAliasSD2 )->( FieldGet( nPsVlCofSa ) )
							nBasCofins := ( cAliasSD2 )->( FieldGet( nPsBsCofSa ) )
							nTxCOF := ( cAliasSD2 )->( FieldGet( nPsAlCofSa ) )
						EndIf	
						
						RecLock("TRB",.T.)
						TRB->NUMNF     := (cAliasSD2)->D2_DOC
						TRB->SERIE     := (cAliasSD2)->D2_SERIE    
						TRB->EMISSAO   := (cAliasSD2)->D2_EMISSAO
						TRB->CFOP      := (cAliasSD2)->D2_CF
						TRB->PRODUTO   := (cAliasSD2)->D2_COD
						TRB->NCM       := (cAliasSB1)->B1_POSIPI
						TRB->VALORCONT := (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If( (cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						TRB->ZFRANCA   := (cAliasSD2)->D2_DESCZFR
						TRB->ALIQ      := Iif(nExCof == 0,Iif(nPautaCOF <> 0,nPautaCOF,nTxCOF),nExCof)
						TRB->TIPO      := "COF"
						TRB->ES        := "S"
						TRB->CLIFOR	   := cCliFor
						TRB->PAUTA	   := Iif(nPautaCOF <> 0,"S","N")
						MsUnlock()
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If (cAliasSD2)->D2_EMISSAO >= dDtCorte
							If SF4->(FieldPos("F4_PISCRED")) >0
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1"// Se a opcao for 'calcula'/'credita', nao debita 
									TRB->COFDSAI   := nValCofins
									TRB->BASCODSAI := nBasCofins
								Endif	
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->COFCSAI   := nValCofins
									TRB->BASCOCSAI := nBasCofins
								Endif	
								MsUnlock()
							Endif	
			            Else
							If SF4->(FieldPos("F4_PISCRED")) >0
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED <> "4" .And. (cAliasSF4)->F4_PISCRED <> "1"
									TRB->COFDSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) ) * nRedCOF) * (TRB->ALIQ/100)
									TRB->BASCODSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedCOF
								Endif	
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita ;2-Debita
									TRB->COFCSAI   := ( ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC) )  * nRedCOF) * (TRB->ALIQ/100)
									TRB->BASCOCSAI := ( (cAliasSD2)->D2_TOTAL+((cAliasSD2)->D2_TOTAL*((cAliasSF2)->F2_SEGURO+(cAliasSF2)->F2_DESPESA+(cAliasSF2)->F2_FRETE)/(cAliasSF2)->F2_VALMERC)  ) * nRedCOF
								Endif	
								MsUnlock()
							Endif	
						Endif
					EndIf							
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera as informacoes para o Resumo -  Saida ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
					
					If (cAliasSF4)->F4_PISCOF $ "123" //1-PIS;2-COFINS;3-Ambos
					
						If !(cAliasSD2)->D2_TIPO $ "BD" 
							nVendTrib += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						EndIf
						
						If (cAliasSD2)->D2_TIPO == "D" 
							nDevCompT += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						EndIF	
									
					ELSE
						If !(cAliasSD2)->D2_TIPO $ "BD" 
							nValVend += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA
						EndIF				
		
				   		If (cAliasSD2)->D2_TIPO == "D" 
							nValDevComp += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD2)->D2_TIPO=="P",0,(cAliasSD2)->D2_VALIPI))+(cAliasSD2)->D2_VALFRE+(cAliasSD2)->D2_SEGURO+(cAliasSD2)->D2_DESPESA // Devolucoes Compras D2
						EndIF				
					Endif
				Endif	
			EndIf
		EndIf
	
		(cAliasSD2)->( dbSkip())
		IncRegua()
	EndDo
	If lQuery
		dbSelectArea(cAliasSD2)
		dbCloseArea()
		dbSelectArea("SD2")
	Else
		dbSelectArea("SD2")
		RetIndex("SD2")
		dbClearFilter()
		Ferase(cIndex+OrdBagExt())
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Processamento das Entradas                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD1")
	SD1->(dbSetOrder(6))
	#IFDEF TOP
		lQuery := .T.
		cAliasSD1 := "a906AMontSD1"
		cAliasSF4 := "a906AMontSD1"
		cAliasSB1 := "a906AMontSD1"	
		cAliasSF1 := "a906AMontSD1"	
	
		aStruSD1  := SD1->(dbStruct())
		aStruSB1  := SB1->(dbStruct())	
		aStruSF4  := SF4->(dbStruct())	
		aStruSF1  := SF1->(dbStruct())	
	
		cQuery 	:= "SELECT D1_CF, D1_COD, D1_TOTAL, D1_VALDESC, B1_POSIPI, D1_DOC, D1_SERIE, D1_DTDIGIT, D1_TIPO, "
		cQuery  += "D1_ICMSRET,D1_VALIPI,D1_VALFRE,D1_SEGURO,D1_DESPESA,D1_VALICM,D1_FORNECE,D1_LOJA, "
	
		If !Empty( nPsVlPisEn )
			cQuery += cCpVlPisEn + ","
		EndIf
	
		If !Empty( nPsBsPisEn )
			cQuery += cCpBsPisEn + ","
		EndIf
		
		If !Empty( nPsAlPisEn )
			cQuery += cCpAlPisEn + ","
		EndIf	
		
		If !Empty( nPsVlCofEn ) 
			cQuery += cCpVlCofEn + "," 
		EndIf 
		
		If !Empty( nPsBsCofEn ) 
			cQuery += cCpBsCofEn + "," 
		EndIf 
		
		If !Empty( nPsAlCofEn ) 
			cQuery += cCpAlCofEn + "," 
		EndIf 
		
		If SF4->( FieldPos( "F4_AGRPIS" ) )>0
			cQuery	+=	"F4_AGRPIS,"
		EndIF
	
		If SF4->( FieldPos( "F4_AGRCOF" ) )>0
			cQuery	+=	"F4_AGRCOF,"
		EndIF
	
		cQuery  += "F4_AGREG,F4_PISCOF,F4_IPI,F1_SEGURO, F1_FRETE, F1_DESPESA, F1_VALMERC, F1_DOC,F1_SERIE,F1_FORNECE,F1_LOJA "
	
		If SB1->(FieldPos("B1_PPIS")) >0
			cQuery += ",B1_PPIS "
		Endif	
	
		If SB1->(FieldPos("B1_REDPIS")) > 0
			cQuery += ",B1_REDPIS "
		Endif	
	
		If SB1->(FieldPos("B1_VLR_PIS")) > 0 //Valor Pauta PIS
			cQuery += ",B1_VLR_PIS "
		Endif	

		If SB1->(FieldPos("B1_REDCOF")) > 0
			cQuery += ",B1_REDCOF "
		Endif	
	
		If SB1->(FieldPos("B1_PCOFINS")) > 0	
			cQuery += ",B1_PCOFINS "
		Endif
		
		If SB1->(FieldPos("B1_VLR_COF")) > 0 //Valor Pauta COFINS
			cQuery += ",B1_VLR_COF "
		Endif	

		If SB1->(FieldPos("B1_GRTRIB")) > 0	
			cQuery += ",B1_GRTRIB "
		Endif

		If SF4->(FieldPos("F4_BASEPIS")) > 0
			cQuery += ",F4_BASEPIS "
		Endif	
	
		If SF4->(FieldPos("F4_PISCOF")) > 0
			cQuery += ",F4_PISCOF "	
		Endif		
		
		If SF4->(FieldPos("F4_BASECOF")) > 0
			cQuery += ",F4_BASECOF "	
		Endif
	
		If SF4->(FieldPos("F4_PISCRED")) > 0
			cQuery += ",F4_PISCRED "	
		Endif		
		
		If lApurac
			cQuery += ",F4_PISFISC "
		Endif
	
		cQuery 	+= "FROM "+RetSqlName("SD1")+" SD1, "
		cQuery 	+= RetSqlName("SF4")+" SF4, "
		cQuery 	+= RetSqlName("SB1")+" SB1, "	
		cQuery 	+= RetSqlName("SF1")+" SF1 "	
	
		cQuery 	+= "WHERE D1_FILIAL='"+xFilial("SD1")+"' AND "
		cQuery 	+= "D1_DTDIGIT>='"+Dtos(MV_PAR02)+"' AND "
		cQuery 	+= "D1_DTDIGIT<='"+Dtos(MV_PAR03)+"' AND "
		cQuery  += "SD1.D_E_L_E_T_ = ' ' AND "
	
		cQuery  += "F4_FILIAL ='"+xFilial("SF4")+"' AND "
		cQuery  += "F4_CODIGO = D1_TES AND "
		cQuery  += "SF4.D_E_L_E_T_ = ' ' AND "
	
		//Livro Selecionado
		If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
			cQuery += " F4_NRLIVRO='"+MV_PAR05+"' AND "
		EndIf
		//
		cQuery  += "B1_FILIAL = '"+xFilial("SB1")+"' AND "
		cQuery  += "B1_COD = D1_COD AND "
		cQuery  += "SB1.D_E_L_E_T_ = ' ' AND "
	
		cQuery  += "F1_FILIAL = '"+xFilial("SF1")+"' AND "
		cQuery  += "F1_DOC = D1_DOC AND "
		cQuery  += "F1_SERIE = D1_SERIE AND "
		cQuery  += "F1_FORNECE = D1_FORNECE AND "
		cQuery  += "F1_LOJA = D1_LOJA AND "
		cQuery  += "F1_DTDIGIT = D1_DTDIGIT AND "
		cQuery  += "SF1.D_E_L_E_T_ = ' ' AND "
		cQuery  += "SF1.F1_TIPO NOT IN('I','P') "	//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
		
		If ExistBlock("MT996QRY")
			cQuery := ExecBlock("MT996QRY",.F.,.F.,{cQuery,2})
		EndIf
	
	    If mv_par11 ==1
			cQuery += "ORDER BY D1_CF, D1_DOC"
		Else
			cQuery += "ORDER BY D1_CF, D1_COD"
		Endif
	
		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)
	
		For nX := 1 To len(aStruSD1)
			If aStruSD1[nX][2] <> "C" .And. FieldPos(aStruSD1[nX][1])<>0
				TcSetField(cAliasSD1,aStruSD1[nX][1],aStruSD1[nX][2],aStruSD1[nX][3],aStruSD1[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSB1)
			If aStruSB1[nX][2] <> "C" .And. FieldPos(aStruSB1[nX][1])<>0
				TcSetField(cAliasSB1,aStruSB1[nX][1],aStruSB1[nX][2],aStruSB1[nX][3],aStruSB1[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSF4)
			If aStruSF4[nX][2] <> "C" .And. FieldPos(aStruSF4[nX][1])<>0
				TcSetField(cAliasSF4,aStruSF4[nX][1],aStruSF4[nX][2],aStruSF4[nX][3],aStruSF4[nX][4])
			EndIf
		Next nX
	
		For nX := 1 To len(aStruSF1)
			If aStruSF1[nX][2] <> "C" .And. FieldPos(aStruSF1[nX][1])<>0
				TcSetField(cAliasSF1,aStruSF1[nX][1],aStruSF1[nX][2],aStruSF1[nX][3],aStruSF1[nX][4])
			EndIf
		Next nX                     	
		dbSelectArea(cAliasSD1)
		nPsVlPisEn := ( cAliasSD1 )->( FieldPos( cCpVlPisEn ) )
		nPsBsPisEn := ( cAliasSD1 )->( FieldPos( cCpBsPisEn ) )
		nPsAlPisEn := ( cAliasSD1 )->( FieldPos( cCpAlPisEn ) ) 	
		nPsVlCofEn := ( cAliasSD1 )->( FieldPos( cCpVlCofEn ) )
		nPsBsCofEn := ( cAliasSD1 )->( FieldPos( cCpBsCofEn ) ) 	
		nPsAlCofEn := ( cAliasSD1 )->( FieldPos( cCpAlCofEn ) )
	#ELSE
	    cAliasSD1 := "SD1"
	    cIndex1   := CriaTrab(NIL,.F.)
		cKey	  := 'D1_CF'
		cCondicao := 'D1_FILIAL=="'+xFilial("SD1")+'".And.'
		cCondicao += 'DTOS(D1_DTDIGIT)>="'+DTOS(MV_PAR02)+'".And.DTOS(D1_DTDIGIT)<="'+DTOS(MV_PAR03)+'".And.'
		cCondicao += '!D1_TIPO$"I#P"'		//Nao considera NF de Compelementos que utilizam a mesma TES que calcule PIS/COFINS
		IndRegua(cAliasSD1,cIndex1,cKey,,cCondicao)
		nIndex := RetIndex("SD1")
		dbSelectArea("SD1")
		dbSetIndex(cIndex1+OrdBagExt())
		 
		dbSetOrder(nIndex+1)
		dbGoTop()
		dbSelectArea(cAliasSD1)
	#ENDIF
	While (cAliasSD1)->(!Eof()) 
		nPautaPIS := 0
		nPautaCOF := 0
		
		If !lQuery
			SF4->(dbSetOrder(1))
			SF4->(MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES))
			SB1->(dbSetOrder(1))
			SB1->(MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
			SF1->(dbSetOrder(1))
			SF1->(MsSeek(xFilial("SF1")+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_TIPO))
			cB1_GRTRIB := SB1->B1_GRTRIB
		Else                            
			cB1_GRTRIB := (cAliasSB1)->B1_GRTRIB
		//Livro Selecionado
			If !((Empty (MV_PAR05)) .Or. ("*"$MV_PAR05))
				If !(SF4->F4_NRLIVRO==MV_PAR05)
					lValido := .F.
				EndIf
			EndIf
		EndIf        

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica Cliente/Fornecedor    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SA1->(dbSetOrder(1))
		SA2->(dbSetOrder(1))
		
		If (cAliasSD1)->D1_TIPO$"DB"
			SA1->(MsSeek(xFilial("SA1")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
			cCliFor 	:= SA1->A1_NOME
		Else
			SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
			cCliFor 	:= SA2->A2_NOME
		Endif                 
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a excecao fiscal³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cGrpTrib 	:= ""
		cUF		 	:= ""
		nExPis		:= 0
		nExCof 		:= 0
		If lA1_GRPTRIB .And. lA2_GRPTRIB .And. !Empty(cB1_GRTRIB)
			SA1->(dbSetOrder(1))
			SA2->(dbSetOrder(1))
			If (cAliasSD1)->D1_TIPO$"DB"
				SA1->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
				cGrpTrib	:= SA1->A1_GRPTRIB
				cUF			:= SA1->A1_EST 
			Else
				SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
				cGrpTrib 	:= SA2->A2_GRPTRIB
				cUF			:= SA2->A2_EST 
			Endif                 
		
			If !Empty(cGrpTrib)
				dbSelectArea("SF7")
				SF7->(dbSetOrder(1))
				If SF7->(dbSeek(xFilial("SF7")+cB1_GRTRIB+cGrpTrib))
					While !SF7->(Eof()) .And. SF7->F7_FILIAL+SF7->F7_GRTRIB+SF7->F7_GRPCLI == xFilial("SF7")+cB1_GRTRIB+cGrpTrib
						If (cUF == SF7->F7_EST .Or. SF7->F7_EST == "**")
							nExPis 		:= Iif(SF7->(FieldPos("F7_ALIQPIS")) > 0,SF7->F7_ALIQPIS,0)
							nExCof 		:= Iif(SF7->(FieldPos("F7_ALIQCOF")) > 0,SF7->F7_ALIQCOF,0)
							Exit
						Endif
						SF7->(dbSkip())
					End
				EndIf
			EndIf
		EndIf
	
		If (cAliasSF4)->F4_AGREG <> "N"
			If SB1->(FieldPos("B1_PPIS")) >0
				nTxPIS	:= 	Iif((cAliasSB1)->B1_PPIS <> 0,(cAliasSB1)->B1_PPIS , GetMv("MV_TXPIS"))    
			Endif
			If SB1->(FieldPos("B1_REDPIS")) > 0
				nRedPIS	:= 	Iif((cAliasSB1)->B1_REDPIS > 0,1-((cAliasSB1)->B1_REDPIS / 100 ), 1 )
			Endif
			If SB1->(FieldPos("B1_VLR_PIS")) > 0
				nPautaPIS	:= 	(cAliasSB1)->B1_VLR_PIS
			Endif
			If SF4->(FieldPos("F4_BASEPIS")) > 0
				nRedPIS	*= 	Iif((cAliasSF4)->F4_BASEPIS > 0,1-((cAliasSF4)->F4_BASEPIS / 100 ), 1 )
			Endif		
			If SB1->(FieldPos("B1_REDCOF")) > 0
				nRedCOF	:= 	Iif((cAliasSB1)->B1_REDCOF > 0,1-((cAliasSB1)->B1_REDCOF / 100 ), 1 )
			Endif
			If SF4->(FieldPos("F4_BASECOF")) > 0
				nRedCOF	*= 	Iif((cAliasSF4)->F4_BASECOF > 0,1-((cAliasSF4)->F4_BASECOF / 100 ), 1 )
			EndIf
			If SB1->(FieldPos("B1_PCOFINS")) > 0
				nTxCOF	:=	if((cAliasSB1)->B1_PCOFINS <> 0,(cAliasSB1)->B1_PCOFINS , GetMv("MV_TXCOFIN"))
			Endif
			If SB1->(FieldPos("B1_VLR_COF")) > 0
				nPautaCOF	:= 	(cAliasSB1)->B1_VLR_COF
			Endif
			If SF4->(FieldPos("F4_PISCOF")) >0
				If !lApurac .Or. ((cAliasSF4)->F4_PISFISC<>"2")
					If (cAliasSF4)->F4_PISCOF $ "13" //1-PIS,3=Ambos
						If SF4->(FieldPos("F4_PISCRED")) >0	
							nValPisPas := 0
							nBasPisPas := 0
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica se existem os campos para gravacao do valor/base do PIS  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (cAliasSD1)->D1_DTDIGIT >= dDtCorte .And. ;
								!Empty( nPsVlPisEn ) .And. !Empty( nPsBsPisEn ) .And. !Empty( nPsAlPisEn )
								nValPisPas := ( cAliasSD1 )->( FieldGet( nPsVlPisEn ) )
								nBasPisPas := ( cAliasSD1 )->( FieldGet( nPsBsPisEn ) )
								nTxPIS := ( cAliasSD1 )->( FieldGet( nPsAlPisEn ) )
							EndIf
							If mv_par01 <> 2 //PIS e Ambos
								RecLock("TRB",.T.)
								TRB->NUMNF     := (cAliasSD1)->D1_DOC
								TRB->SERIE     := (cAliasSD1)->D1_SERIE
								TRB->EMISSAO   := (cAliasSD1)->D1_DTDIGIT
								TRB->CFOP      := (cAliasSD1)->D1_CF
								TRB->PRODUTO   := (cAliasSD1)->D1_COD
								TRB->NCM       := (cAliasSB1)->B1_POSIPI
								TRB->VALORCONT := ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA+IIf((cAliasSF4)->F4_AGREG$"I/B",(cAliasSD1)->D1_VALICM,0))-(cAliasSD1)->D1_VALDESC
								TRB->ZFRANCA   := 0
								TRB->ALIQ      := Iif(nExPis == 0,Iif(nPautaPIS <> 0,nPautaPIS,nTxPIS),nExPis)
								TRB->TIPO      := "PIS"
								TRB->ES        := "E"
								TRB->CLIFOR	   := cCliFor
								TRB->PAUTA		:= Iif(nPautaPIS <> 0,"S","N")
								MsUnlock()
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If (cAliasSD1)->D1_DTDIGIT >= dDtCorte
									RecLock("TRB",.F.)
									If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
										TRB->PISCENT   := nValPisPas
										TRB->BASPICENT := nBasPisPas					
									ElseIf (cAliasSF4)->F4_PISCRED =="2"
										TRB->PISDENT   := nValPisPas
										TRB->BASPIDENT := nBasPisPas					
			                        Endif
									MsUnlock()
								Else			
									RecLock("TRB",.F.)
									If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
										TRB->PISCENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC) * nRedPis) * (TRB->ALIQ/100)
										TRB->BASPICENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedPis
									ElseIf (cAliasSF4)->F4_PISCRED =="2"
										TRB->PISDENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC) * nRedPis) * (TRB->ALIQ/100)
										TRB->BASPIDENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedPis
			                        Endif
									MsUnlock()
								EndIf				
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
								//³Acumula PIS no Valor Contabil                  ³
								//³Produtos importados devem agregar esses valores³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
								If SF4->(FieldPos("F4_AGRPIS")) > 0
									If (cAliasSF4)->F4_AGRPIS = "1"
									    RecLock("TRB",.F.)
										If (cAliasSF4)->F4_PISCRED == "1"
									    	TRB->VALORCONT += TRB->PISCENT 
									 	Else                               
									 		TRB->VALORCONT += TRB->PISDENT 
									 	Endif
								    	MsUnlock()
									Endif
								Endif	
							Endif
						EndIf
					Endif
					If (cAliasSF4)->F4_PISCOF $ "23" .And. mv_par01 <> 1 //2-COFINS;3-Ambos
						If SF4->(FieldPos("F4_PISCRED")) >0
							nValCofins := 0 
							nBasCofins := 0 					
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica se existem os campos para gravacao do valor/base da COFINS ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (cAliasSD1)->D1_DTDIGIT >= dDtCorte .And. ;
								!Empty( nPsVlCofEn ) .And. !Empty( nPsBsCofEn ) .And. !Empty( nPsAlCofEn )
								nValCofins := ( cAliasSD1 )->( FieldGet( nPsVlCofEn ) )
								nBasCofins := ( cAliasSD1 )->( FieldGet( nPsBsCofEn ) )
								nTxCOF := ( cAliasSD1 )->( FieldGet( nPsAlCofEn ) )
							EndIf	
						
							RecLock("TRB",.T.)
							TRB->NUMNF     := (cAliasSD1)->D1_DOC
							TRB->SERIE     := (cAliasSD1)->D1_SERIE   
							TRB->EMISSAO   := (cAliasSD1)->D1_DTDIGIT
							TRB->CFOP      := (cAliasSD1)->D1_CF
							TRB->PRODUTO   := (cAliasSD1)->D1_COD
							TRB->NCM       := (cAliasSB1)->B1_POSIPI
							TRB->VALORCONT := ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA+IIf((cAliasSF4)->F4_AGREG$"I/B",(cAliasSD1)->D1_VALICM,0))-(cAliasSD1)->D1_VALDESC
							TRB->ZFRANCA   := 0
							TRB->ALIQ      := Iif(nExCof == 0,Iif(nPautaCOF <> 0,nPautaCOF,nTxCOF),nExCof)
							TRB->TIPO      := "COF"
							TRB->ES        := "E"
							TRB->CLIFOR	   := cCliFor	
							TRB->PAUTA	   := Iif(nPautaCOF <> 0,"S","N")
							MsUnlock()
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Verifica a Data de Corte ( 01/02/2004 )                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If (cAliasSD1)->D1_DTDIGIT >= dDtCorte
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita;2-Debita
									TRB->COFCENT   := nValCofins
									TRB->BASCOCENT := nBasCofins
								ElseIf (cAliasSF4)->F4_PISCRED =="2"
									TRB->COFDENT   := nValCofins
									TRB->BASCODENT := nBasCofins 
			                    Endif
			                    MsUnlock()
							Else
								RecLock("TRB",.F.)
								If (cAliasSF4)->F4_PISCRED =="1"  //1-Credita ;2-Debita
									TRB->COFCENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedCOF) * (TRB->ALIQ/100)
									TRB->BASCOCENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedCOF
								ElseIf	(cAliasSF4)->F4_PISCRED =="2"
									TRB->COFDENT   := ( ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC )  * nRedCOF) * (TRB->ALIQ/100)
									TRB->BASCODENT := ( (cAliasSD1)->D1_TOTAL+((cAliasSD1)->D1_TOTAL*((cAliasSF1)->F1_SEGURO+(cAliasSF1)->F1_DESPESA+(cAliasSF1)->F1_FRETE)/(cAliasSF1)->F1_VALMERC)-(cAliasSD1)->D1_VALDESC  ) * nRedCOF
								Endif	
								MsUnlock()
							Endif
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
							//³Acumula COFINS no Valor Contabil               ³
							//³Produtos importados devem agregar esses valores³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
							If SF4->(FieldPos("F4_AGRCOF")) > 0
								If (cAliasSF4)->F4_AGRCOF = "1"
								    RecLock("TRB",.F.)
								    If (cAliasSF4)->F4_PISCRED == "1"
								    	TRB->VALORCONT += TRB->COFCENT
								    Else                              
								    	TRB->VALORCONT += TRB->COFDENT
								    Endif
							    	MsUnlock()
								Endif
							Endif	
						Endif	
					Endif
												
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Gera as informacoes para o Resumo -  Entrada ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							
					If (cAliasSF4)->F4_PISCOF $ "123" //1-PIS;2-COFINS;3-Ambos
					 
						If !(cAliasSD1)->D1_TIPO $ "BD"
						 	nCompTrib += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						EndIf                         
						
						If (cAliasSD1)->D1_TIPO == "D" 
							nDevVendT += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						EndIF
										
					ELSE		
						If !(cAliasSD1)->D1_TIPO $ "BD" 
							nValComp += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						EndIF						
						If (cAliasSD1)->D1_TIPO == "D" 
							nValDevVend += ((cAliasSD1)->D1_TOTAL+(cAliasSD1)->D1_ICMSRET+If((cAliasSF4)->F4_IPI=="R",0,If((cAliasSD1)->D1_TIPO=="P",0,(cAliasSD1)->D1_VALIPI))+(cAliasSD1)->D1_VALFRE+(cAliasSD1)->D1_SEGURO+(cAliasSD1)->D1_DESPESA)-(cAliasSD1)->D1_VALDESC
						EndIF		
					EndIf							
				EndIf
			EndIf
		EndIf
		
		(cAliasSD1)->( dbSkip())
		IncRegua()
	EndDo
	
	If lQuery
		dbSelectArea(cAliasSD1)
		dbCloseArea()
		dbSelectArea("SD1")
	Else
		dbSelectArea("SD1")
		RetIndex("SD1")
		Set Filter to
		Ferase(cIndex1+OrdBagExt())
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apura os valores referentes as retencoes                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	aDedRet := {}
	aDedRet := FsCalcRet(mv_par02,mv_par03,,,,,@aRet)

	dbSelectArea("TRB")
	SetRegua(RecCount())		// Total de Elementos da regua
	dbGoTop()

	If (aReturn[8]>=2)
		R906Imp (cArqTemp,@aTAlPISS,@aTAlCOFS,@aTAlPISE,@aTAlCOFE,@aTotApur, aReturn[8])
		lResumo	:=	.T.
	Else

		While !Eof() .And. lContinua
		
			IF lEnd
				@Prow()+1,001 PSAY STR0007  //"CANCELADO PELO OPERADOR"
				lContinua := .F.
				Exit
			Endif
		
			IncRegua()
	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Impressao do cabecalho geral³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cTitulo  := STR0002 //"Relatorio - (PIS/COFINS)"
			If mv_par04 == 1
				Cabec1 := STR0022  //" Produto          NCM         Valor Contabil            Zona Franca      Aliquota              Valor da Contribuicao                            Base da Contribuicao              Documento   Serie  Emissao                "
			Else	                                                                                                                                                                                                                                         
				Cabec1 := STR0005  //" Produto          NCM         Valor Contabil            Zona Franca      Aliquota              Valor da Contribuicao                            Base da Contribuicao"
			Endif	
			Cabec2 := STR0006  //"                                                          Desconto                             Debito                 Credito                  Debito                 Credito" 
			
			nLiAnt	:=	li
			If li > 58
				cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
			EndIf
			
			nValCont := 0
			nZFranca := 0
			nValDebi := 0
			nValCred := 0
			nBasDebi := 0
			nBasCred := 0
			
			nDValCont := 0
			nDZFranca := 0
			nDValDebi := 0
			nDValCred := 0
			nDBasDebi := 0
			nDBasCred := 0
			
			nAcVlrCtb 	:= 0
			nAcZfranca	:= 0
			nAcVlrCtbD	:= 0
			nAcVlrCtbC	:= 0
			nAcBsCtbD	:= 0
			nAcBsCtbC	:= 0
			IF MV_PAR09==1
				dDT_EMISS	:=	TRB->EMISSAO
			ENDIF
			cQuebra  := TRB->TIPO+TRB->CFOP
			lEntrada := IIf(Substr(TRB->CFOP,1,1) < "5",.T.,.F.)
			
			If !lFirst    
				@Li, 001 Psay OemToAnsi (STR0008) + SM0->M0_NOMECOM //"Empresa : "
				Li++ 
				@Li, 001 Psay OemToAnsi (STR0021) + Transform(SM0->M0_CGC,"@R 99.999.999/9999-99") //"CNPJ    : "
				Li++ 
				@Li, 001 Psay OemToAnsi (STR0009) + Dtoc(mv_par02) + " - " + Dtoc(mv_par03) //"Periodo : "
				Li := Li + 2
				lFirst := .T.
			Endif
			
			If TRB->TIPO <> cTipo .Or. lQuebra  
				If lQuebra .And. TRB->TIPO <> cTipo .And. !nLiAnt>58
					cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
				Endif
				@Li, 001 PSAY IIf(TRB->TIPO == "PIS",PADC(STR0010+IIf(Substr(TRB->CFOP,1,1) < "5",STR0011,STR0012),Limite),;
			                 PADC(STR0013+IIf(Substr(TRB->CFOP,1,1) < "5",STR0011,STR0012),Limite))
				Li := Li + 2
				cTipo := TRB->TIPO
				lQuebra  := .F.
			Endif	
			
			@Li, 001 PSAY TRB->CFOP+IIF(SX5->(MsSeek(xFilial("SX5")+"13"+TRB->CFOP))," - "+AllTrim(SX5->X5_DESCRI),"")
			Li++
			
			While !Eof() .And. TRB->TIPO+TRB->CFOP == cQuebra
				
				If li > 58
					cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
				EndIf
				
				If mv_par04 == 1 .and. mv_par11 <> 1
					@Li , 001 PSAY TRB->PRODUTO
					@Li , 018 PSAY TRB->NCM
					@Li , 030 PSAY TRB->VALORCONT Picture PesqPict("SF3","F3_VALCONT",14)
					@Li , 050 PSAY TRB->ZFRANCA   Picture PesqPict("SD2","D2_DESCZFR",14)
					@Li , 073 PSAY Transform(TRB->ALIQ,Iif(TRB->PAUTA=="S","@E 99.99","@E 99.99%"))
				
					If Substr(TRB->CFOP,1,1) >= "5"
						@Li , 083 PSAY IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)     Picture PesqPict("SF3","F3_VALCONT",14)
						@Li , 107 PSAY IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)     Picture PesqPict("SF3","F3_VALCONT",14)
						@Li , 131 PSAY IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI) Picture PesqPict("SF3","F3_VALCONT",14)
						@Li , 155 PSAY IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI) Picture PesqPict("SF3","F3_VALCONT",14)
					Else	
						@Li , 083 PSAY IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)     Picture PesqPict("SF3","F3_VALCONT",14)
						@Li , 107 PSAY IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT)     Picture PesqPict("SF3","F3_VALCONT",14)
						@Li , 131 PSAY IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) Picture PesqPict("SF3","F3_VALCONT",14) 
						@Li , 155 PSAY IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) Picture PesqPict("SF3","F3_VALCONT",14)
					Endif
					
					@Li , 178 PSAY TRB->NUMNF
					@Li , 189 PSAY TRB->SERIE
					@Li , 194 PSAY TRB->EMISSAO
					@Li , 203 PSAY TRB->CLIFOR
					
		        Endif
	            If mv_par11 == 1 
					If mv_par04 == 1  
						nAcVlrCtb += TRB->VALORCONT
						nAcZfranca += TRB->ZFRANCA
						If Substr(TRB->CFOP,1,1) >= "5"
							nAcVlrCtbD += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
							nAcVlrCtbC += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI) 
							nAcBsCtbD += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
							nAcBsCtbC += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
						Else	
							nAcVlrCtbD += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)   
							nAcVlrCtbC += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT)    
							nAcBsCtbD += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
							nAcBsCtbC += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) 
						Endif  
						cNumNota :=  TRB->NUMNF
						cSerie   :=  TRB->SERIE
						cEmissao :=  TRB->EMISSAO
						cNcm     :=  TRB->NCM
						cProd    :=  TRB->PRODUTO
						cCliFor  :=  TRB->CLIFOR
			        Endif 
		        EndIf        
				nValCont += TRB->VALORCONT
				nZFranca += TRB->ZFRANCA
				
				nDValCont += TRB->VALORCONT
				nDZFranca += TRB->ZFRANCA
				
				nGValCont += TRB->VALORCONT
				nGZFranca += TRB->ZFRANCA
		
		
				If Substr(TRB->CFOP,1,1) >= "5"
					nValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
					nValCred += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
					nBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
					nBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
					
					nDValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
					nDValCred += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
					nDBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
					nDBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
	
					nGValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
					nGValCred += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
					nGBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
					nGBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
					
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqs,{|x| x[1]==nAliqP})
					If nPosAliq > 0
						aAliqs[nPosAliq][2]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
						aAliqs[nPosAliq][3]  += TRB->VALORCONT
						aAliqs[nPosAliq][4]  += TRB->ZFRANCA
						aAliqs[nPosAliq][5]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
						aAliqs[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
						aAliqs[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
						aAliqs[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
						If TRB->TIPO == "PIS"
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq := Ascan(aTAlPISS,{|x| x[1]==nAliqP .AND. X[3]==SM0->M0_CODFIL})
							aTAlPISS[nPosAliq][2] += TRB->PISDSAI-TRB->PISCSAI
						Else
							nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq := Ascan(aTAlCOFS,{|x| x[1]==nAliqP .AND. X[3]==SM0->M0_CODFIL})
							aTAlCOFS[nPosAliq][2] += TRB->COFDSAI-TRB->COFCSAI
						Endif
					Else
						AADD(aAliqs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
						              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
						              TRB->VALORCONT,;
						              TRB->ZFRANCA,;
						              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI),;
						              TRB->PAUTA})
						If TRB->TIPO == "PIS"					              
							AADD(aTAlPISS,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDSAI-TRB->PISCSAI,SM0->M0_CODFIL})
						Else                                                       
							AADD(aTAlCOFS,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDSAI-TRB->COFCSAI,SM0->M0_CODFIL})
						Endif
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula a contribuicao por aliquota para impressao do resumo³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq > 0
						aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
						aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
						aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI) //contribuicao debito
						aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI) //contribuicao credito										
						aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI) //base debito
						aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI) //base credito																													
					Else 
						AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI),IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI),IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)})
					Endif
	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Totalizador do Relatorio por Aliquota + CFOP³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := aScan(aResAliCF,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq == 0
						AADD(aResAliCF,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
						              TRB->CFOP,;
						              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
						              TRB->VALORCONT,;
						              TRB->ZFRANCA,;
						              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI),;
						              IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI),;
						              TRB->PAUTA})
					Else
						aResAliCF[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
						aResAliCF[nPosAliq][4]  += TRB->VALORCONT
						aResAliCF[nPosAliq][5]  += TRB->ZFRANCA
						aResAliCF[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
						aResAliCF[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
						aResAliCF[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
						aResAliCF[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
					Endif
				Else
					nValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
					nValCred += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
					nBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
					nBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) 
					
					nDValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
					nDValCred += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
					nDBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
					nDBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)                                                                    
	
					nGValDebi += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
					nGValCred += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
					nGBasDebi += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
					nGBasCred += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) 
		            
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqs,{|x| x[1]==nAliqP})
					If nPosAliq > 0
						aAliqs[nPosAliq][2]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
						aAliqs[nPosAliq][3]  += TRB->VALORCONT
						aAliqs[nPosAliq][4]  += TRB->ZFRANCA
						aAliqs[nPosAliq][5]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
						aAliqs[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
						aAliqs[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
						aAliqs[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)                                                
						If TRB->TIPO == "PIS"
	  					    nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
	  					    nPosAliq := Ascan(aTAlPISE,{|x| x[1]==nAliqP .AND. X[3]==SM0->M0_CODFIL})
							aTAlPISE[nPosAliq][2] += TRB->PISDENT-TRB->PISCENT
						Else
							nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
							nPosAliq := Ascan(aTAlCOFE,{|x| x[1]==nAliqP .AND. X[3]==SM0->M0_CODFIL})
							aTAlCOFE[nPosAliq][2] += TRB->COFDENT-TRB->COFCENT
						Endif
					Else
						AADD(aAliqs,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
						             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
						             TRB->VALORCONT,;
						             TRB->ZFRANCA,;
						             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT),;
						             IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
						             IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT),;
						             IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT),;
						             TRB->PAUTA})
						If TRB->TIPO == "PIS"
							AADD(aTAlPISE,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDENT-TRB->PISCENT,SM0->M0_CODFIL})
						Else
							AADD(aTAlCOFE,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDENT-TRB->COFCENT,SM0->M0_CODFIL})
						Endif
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Acumula a contribuicao por aliquota para impressao do resumo³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq > 0
						aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
						aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
						aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
						aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) //contribuicao debito
		 				aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) //contribuicao credito										
	   					aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) //base debito
	   					aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) //base credito						
					Else  
						AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT),IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT),IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)})
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Totalizador do Relatorio por Aliquota + CFOP³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq := aScan(aResAliCF,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
					If nPosAliq == 0
						AADD(aResAliCF,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
						             TRB->CFOP,; 
						             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
						             TRB->VALORCONT,;
						             TRB->ZFRANCA,;
						             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT),;
						             IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
						             IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT),;
						             IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT),;
						             TRB->PAUTA})
					Else
						aResAliCF[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
						aResAliCF[nPosAliq][4]  += TRB->VALORCONT
						aResAliCF[nPosAliq][5]  += TRB->ZFRANCA
						aResAliCF[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
						aResAliCF[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
						aResAliCF[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
						aResAliCF[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)                                                
					Endif
				Endif	
		
				cNumNota	:= TRB->NUMNF
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ordena o array por aliquota + CFOP  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				Asort(aResAliCF,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})					
				
				If mv_par04 == 1 .And. mv_par11 <> 1
					Li++
				Endif	
					TRB->(dbSkip())
					If cNumNota <> TRB->NUMNF .OR. TRB->TIPO+TRB->CFOP <> cQuebra
						If mv_par11 == 1 .And. mv_par04 == 1
							@Li , 030 PSAY nAcVlrCtb Picture PesqPict("SF3","F3_VALCONT",14)
							@Li , 050 PSAY nAcZfranca  Picture PesqPict("SD2","D2_DESCZFR",14)
				
							@Li , 083 PSAY nAcVlrCtbD Picture PesqPict("SF3","F3_VALCONT",14)
							@Li , 107 PSAY nAcVlrCtbC Picture PesqPict("SF3","F3_VALCONT",14)
							@Li , 131 PSAY nAcBsCtbD Picture PesqPict("SF3","F3_VALCONT",14)
							@Li , 155 PSAY nAcBsCtbC Picture PesqPict("SF3","F3_VALCONT",14)
								
							@Li , 178 PSAY cNumNota
							@Li , 191 PSAY cSerie
							@Li , 196 PSAY cEmissao
							@Li , 205 PSAY cCliFor
			   				Li++   
			   				
			   				nAcVlrCtb 	:= 0
							nAcZfranca	:= 0
							nAcVlrCtbD	:= 0
							nAcVlrCtbC	:= 0
							nAcBsCtbD	:= 0
							nAcBsCtbC	:= 0
						End If         				
					End If
					//
					IF MV_PAR09 ==1
						If  TRB->EMISSAO <> dDT_EMISS .OR. TRB->TIPO+TRB->CFOP <> cQuebra
							@Li, 001 Psay __PrtThinLine()
							Li++
							@Li, 001 PSAY STR0052//"Total do dia - " 
							TRB->(dbSkip(-1))
							@Li, 016 PSAY TRB->EMISSAO
							@Li, 030 PSAY nDValCont Picture PesqPict("SF3","F3_VALCONT",14)
							@Li, 050 PSAY nDZFranca Picture PesqPict("SF3","F3_VALCONT",14)
							@Li, 083 PSAY nDValDebi Picture PesqPict("SF3","F3_VALCONT",14)
							@Li, 107 PSAY nDValCred Picture PesqPict("SF3","F3_VALCONT",14)
							@Li, 131 PSAY nDBasDebi Picture PesqPict("SF3","F3_VALCONT",14)
							@Li, 155 PSAY nDBasCred Picture PesqPict("SF3","F3_VALCONT",14)
							Li := Li + 2 
						
							nDValCont := 0
							nDZFranca := 0
							nDValDebi := 0
							nDValCred := 0
							nDBasDebi := 0
							nDBasCred := 0
							TRB->(dbSkip())
							dDT_EMISS := TRB->EMISSAO
						EndIf
					ENDIF
				
				If  TRB->TIPO+TRB->CFOP <> cQuebra
					@Li, 001 Psay __PrtThinLine()
					Li++
					@Li, 001 PSAY STR0014+Substr(cQuebra,4,4)  //"Total do CFOP - "
					@Li, 030 PSAY nValCont Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 050 PSAY nZFranca Picture PesqPict("SD2","D2_DESCZFR",14)
					@Li, 083 PSAY nValDebi Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 107 PSAY nValCred Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 131 PSAY nBasDebi Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 155 PSAY nBasCred Picture PesqPict("SF3","F3_VALCONT",14)
					Li := Li + 2 
					TRB->(dbSkip(-1))
					SX5->(DBSETORDER(1))				
					IF SX5->(dbseek(xFILIAL("SX5")+"13"+TRB->CFOP))
						cDesc_CFOP	:=	SX5->X5_DESCRI
					ENDIF
					IF TRB->TIPO=="COF"
						IF TRB->ES=="E"
							AADD(aCFOPCOFE,{TRB->CFOP,nValDebi-nValCred,SM0->M0_CODFIL,nBasDebi-nBasCred,cDesc_CFOP})
						ELSE
					    	AADD(aCFOPCOFS,{TRB->CFOP,nValDebi-nValCred,SM0->M0_CODFIL,nBasDebi-nBasCred,cDesc_CFOP})
						ENDIF
					ELSE
						IF TRB->ES="E"
							AADD(aCFOPPISE,{TRB->CFOP,nValDebi-nValCred,SM0->M0_CODFIL,nBasDebi-nBasCred,cDesc_CFOP})
						ELSE
							AADD(aCFOPPISS,{TRB->CFOP,nValDebi-nValCred,SM0->M0_CODFIL,nBasDebi-nBasCred,cDesc_CFOP})
						ENDIF
					ENDIF	
					TRB->(dbSkip())
				Endif 
				
				If ( (Substr(TRB->CFOP,1,1) >= "5" .And. lEntrada) .Or. TRB->(Eof()) ) .Or. (!lEntrada .And. TRB->(Eof())) .Or. TRB->TIPO <> cTipo
					@Li, 001 Psay __PrtThinLine()
					Li++
					
					aSort(aALiqs,,,{|x,y| x[1]>y[1]})
					For nX := 1 To Len(aAliqs)
						aContrAliq	:=	{aALiqs[nX][3], aALiqs[nX][4], aALiqs[nX][5], aALiqs[nX][6], aALiqs[nX][7], aALiqs[nX][8]}
						If Li > 58
							Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
						EndIf
	
						// Imprime, alem do total por aliquota, os CFOPs de cada uma das aliquotas impressas
						If mv_par10 == 1                                   
							nPosAliq := aScan(aResAliCF,{|x| x[1]==aAliqs[nX][1]})
							If nPosAliq > 0
								For nPos := nPosAliq to Len(aResAliCF)
									If aResAliCF[nPos][01] <> aAliqs[nX][1]
										Exit
									Endif
									// Imprime o cabecalho do total por CFOP        
									If nPos == nPosAliq           
										@Li, 001 PSAY STR0053 // "Total por CFOP:"
									Endif
									If Li > 58
										Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
									EndIf
									@Li, 021 PSAY aResAliCF[nPos][2] 
									@Li, 030 PSAY aResAliCF[nPos][4] Picture PesqPict("SF3","F3_VALCONT",14)
									@Li, 050 PSAY aResAliCF[nPos][5] Picture PesqPict("SF3","F3_VALCONT",14)
									@Li, 083 PSAY aResAliCF[nPos][6] Picture PesqPict("SF3","F3_VALCONT",14)
									@Li, 107 PSAY aResAliCF[nPos][7] Picture PesqPict("SF3","F3_VALCONT",14)
									@Li, 131 PSAY aResAliCF[nPos][8] Picture PesqPict("SF3","F3_VALCONT",14)
									@Li, 155 PSAY aResAliCF[nPos][9] Picture PesqPict("SF3","F3_VALCONT",14)
									Li++                                                              
								Next
							Endif
						Endif           
						
						If aAliqs[nX][9]=="S"
							aContrAliq	:=	{0,0,0,0,0,0}
							For nXX := nX To Len(aALiqs)
								If aAliqs[nXX][9]=="S" .And. aAliqs[nX][1]==0
									nX := nXX
									aContrAliq[1]+= aALiqs[nXX][3]
									aContrAliq[2]+= aALiqs[nXX][4]
									aContrAliq[3]+= aALiqs[nXX][5]
									aContrAliq[4]+= aALiqs[nXX][6]
									aContrAliq[5]+= aALiqs[nXX][7]
									aContrAliq[6]+= aALiqs[nXX][8]
								Else
									Exit
								EndIf
							Next nXX
						EndIf
						
						@Li, 001 PSAY STR0031+Transform(aAliqs[nX][1],"@E 99.99%") //"Total da Aliquota "
						@Li, 030 PSAY aContrAliq[1] Picture PesqPict("SF3","F3_VALCONT",14)
						@Li, 050 PSAY aContrAliq[2] Picture PesqPict("SD2","D2_DESCZFR",14)
						@Li, 083 PSAY aContrAliq[3] Picture PesqPict("SF3","F3_VALCONT",14)
						@Li, 107 PSAY aContrAliq[4] Picture PesqPict("SF3","F3_VALCONT",14)
						@Li, 131 PSAY aContrAliq[5] Picture PesqPict("SF3","F3_VALCONT",14)
						@Li, 155 PSAY aContrAliq[6] Picture PesqPict("SF3","F3_VALCONT",14)
						Li += 2    
					Next
					Li++
					@Li, 001 PSAY STR0015+IIF(lEntrada,STR0016,STR0017) //"Total de " + "Entradas","Saidas"
					@Li, 030 PSAY nGValCont Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 050 PSAY nGZFranca Picture PesqPict("SD2","D2_DESCZFR",14)
					@Li, 083 PSAY nGValDebi Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 107 PSAY nGValCred Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 131 PSAY nGBasDebi Picture PesqPict("SF3","F3_VALCONT",14)
					@Li, 155 PSAY nGBasCred Picture PesqPict("SF3","F3_VALCONT",14)
					Li := Li + 3 
					
					nValContri += nGValDebi-nGValCred

					nAliq 			:= 0   
					nContrAli		:= 0
					For nCt := 1 To len(aContrAliq)
	   					aContrAliq[nCt] := 0
					Next nCt   
					
					If TRB->TIPO <> cTipo 
					
						@Li, 001 Psay Repli("-",Limite)
						Li++
						@Li, 001 Psay STR0032 //"Contribuicao : "
						Li++
						Li++ 
	
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Ordena o array por aliquota + CFOP  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						Asort(aAliqCFGer,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})					
	
						// Imprime o valor apurado por aliquota ou por aliquota + cfop
						For nX := 1 To Len(aAliqCFGer)
						                
							If Li > 58
								Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
							EndIf
							
							If nAliq <> aAliqCFGer[nX][1] 						
								If nX <> 1
									@Li, 001 PSAY STR0047 + Space(04) 
									@Li, 011 PSAY Transform(Abs(nContrAli),PesqPict("SD2","SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aContrAliq[3]),PesqPict("SD2","D2_TOTAL",14));
								+ Space(10) +  Transform(Abs(aContrAliq[4]),PesqPict("SD2","SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))									
									Li += 2
									nContrAli 	:= 0    
									For nCt := 1 To len(aContrAliq)
					   					aContrAliq[nCt] := 0
									Next nCt        
								Endif
								@Li, 001 PSAY STR0029 + Transform(aAliqCFGer[nX][1],"@E 99.99%")
								Li++  
								If mv_par10 == 1
									@Li, 001 PSAY STR0054
									Li++
								Endif
								nAliq 	:= aAliqCFGer[nX][1]
							Endif
							 
							If mv_par10 == 1
								@Li, 001 PSAY aAliqCFGer[nX][2] + Space(06) + Transform(Abs(aAliqCFGer[nX][3]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aAliqCFGer[nX][3] < 0,"  (C)","  (D)")+ Transform(Abs(aAliqCFGer[nX][4]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aAliqCFGer[nX][5]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aAliqCFGer[nX][6]),PesqPict("SF3","F3_VALCONT",14));
								+ Space(10) +  Transform(Abs(aAliqCFGer[nX][7]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aAliqCFGer[nX][8]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aAliqCFGer[nX][9]),PesqPict("SF3","F3_VALCONT",14))
									
							Li++                                                                                                                                                                                                                                   
                                                    
							Endif             
							nContrAli	 += aAliqCFGer[nX][3]              
							aContrAliq[1]+= aAliqCFGer[nX][4] 
							aContrAliq[2]+= aAliqCFGer[nX][5] 
							aContrAliq[3]+= aAliqCFGer[nX][6]
							aContrAliq[4]+= aAliqCFGer[nX][7] 
							aContrAliq[5]+= aAliqCFGer[nX][8] 
							aContrAliq[6]+= aAliqCFGer[nX][9] 																					
						Next
						@Li, 001 PSAY STR0047 + Space(04) + Transform(Abs(nContrAli),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aContrAliq[3]),PesqPict("SF3","F3_VALCONT",14));
						+ Space(10) +  Transform(Abs(aContrAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))
						Li += 2						//"Total Contribuicao ............: "
						@Li, 001 PSAY STR0039
						Li++
						@Li, 011 PSAY Transform(Abs(nValContri),PesqPict("SF3","F3_VALCONT",14)) +  IIf(nValContri < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
						+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14)) //"Total Apurado............: " 						
						Li++                         
						Li++                         
						@Li, 001 PSAY STR0143 //"Total de Retenção(Modalidade da Dedução: Vencimento)........: " --> Empresas que nao sao de Direito Publico
						Li++
						@Li, 011 PSAY Transform(IIF(cTipo=="PIS",aRet[1],aRet[2]),PesqPict("SF3","F3_VALCONT",14))
						Li++
						Li++ 
						@Li, 001 PSAY STR0144 //"Total de Retenção - Orgãos Públicos(Modalidade da Dedução: Pagamento)........: "
						Li++
						@Li, 011 PSAY Transform(IIF(cTipo=="PIS",(aDedRet[1]-aRet[1]),(aDedRet[2]-aRet[2])),PesqPict("SF3","F3_VALCONT",14))
						Li++          
						Li++  
						nContrAli := IIF(cTipo=="PIS",nValContri-aDedRet[1],nValContri-aDedRet[2])
						@Li, 001 PSAY STR0018
						Li++
						@Li, 011 PSAY Transform(IIF(cTipo=="PIS",Abs(nValContri-aDedRet[1]),Abs(nValContri-aDedRet[2])),PesqPict("SF3","F3_VALCONT",14)) + IIf(nValContri < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
						+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14))//"Total da Contribuicao : "
						Li += 2
						@Li, 001 PSAY STR0055
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Totalizadores da impressao por filial³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If cTipo == "PIS"
							aTotApur[01][01]  += nValContri
							aTotApur[01][02]  += aDedRet[1]
							aTotApur[01][03]  += nValContri-aDedRet[1]
						Else
							aTotApur[02][01]  += nValContri
							aTotApur[02][02]  += aDedRet[2]
							aTotApur[02][03]  += nValContri-aDedRet[2]
						Endif
						nValContri := 0
						aAliqs 		:= {} 
						aResAliCF 	:= {}    
						aAliqCFGer	:= {}
						For nCt := 1 To len(aValContri)
							aValContri[nCt] := 0
						Next nCt 						 
												
						Li++
					Else
						aAliqs 		:= {} 
						aResAliCF 	:= {}    
					Endif
			        
					lEntrada := .F.
				    lQuebra  := .T.
					
					nGValCont := 0  
					nGZFranca := 0
					nGValDebi := 0
					nGValCred := 0
					nGBasDebi := 0
					nGBasCred := 0
				Endif
			EndDo
			lResumo:= .T.	
		EndDo	
	EndIf
	
	cArqCp :=strzero(month(mv_par02),2)+substr(strzero(year(mv_par02),4),3,2)+SM0->M0_CODIGO+SM0->M0_CODFIL+".CP"
	If File(cArqCp)
		cTitulo := STR0019  //"Informacoes Complementares da Apuracao"
		cabec1  := STR0020  //" Descricao                                                                            Valores"
		cabec2  := ""
		cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		
		cContArq	:=	MemoRead(cArqCp)
		For nContCp :=1 to MlCount(cContArq,100)
			cLinArq :=MemoLine(cContArq,100,nContCp)
	        @Li, 001 PSAY Substr(cLinArq,01,70)
			@Li, 071 PSAY Val(Substr(cLinArq,71,14)) Picture PesqPict("SF3","F3_VALCONT",14)
	        Li++
		Next
		lResumo:= .T.	
	Endif            
	
	If lResumo .And. TRB->(LastRec()) > 0
		cTitulo := STR0023 // "Resumo"
		cabec1  := STR0024 // "Valores para Calculo              Tributado           Outros            Total"
		cabec2  := "" 
		cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		@Li,   001 PSAY STR0025+Transform(nVendTrib,PesqPict("SD2","D2_TOTAL",17))+Transform(nValVend,PesqPict("SD2","D2_TOTAL",17))+Transform(nVendTrib+nValVend,PesqPict("SD2","D2_TOTAL",17))  // "Saídas                   "
		@Li+1, 001 PSAY STR0026+Transform(nDevCompT,PesqPict("SD2","D2_TOTAL",17))+Transform(nValDevComp,PesqPict("SD2","D2_TOTAL",17))+Transform(nDevCompT+nValDevComp,PesqPict("SD2","D2_TOTAL",17)) // "Devoluções de Saídas     "
		@Li+2, 001 PSAY STR0027+Transform(nCompTrib,PesqPict("SD2","D2_TOTAL",17))+Transform(nValComp,PesqPict("SD2","D2_TOTAL",17))+Transform(nCompTrib+nValComp,PesqPict("SD2","D2_TOTAL",17))// "Entradas                 "
		@Li+3, 001 PSAY STR0028+Transform(nDevVendT,PesqPict("SD2","D2_TOTAL",17))+Transform(nValDevVend,PesqPict("SD2","D2_TOTAL",17))+Transform(nDevVendT+nValDevVend,PesqPict("SD2","D2_TOTAL",17)) // "Devoluções de Entradas   "
		aTotSai[01]		+= nVendTrib 
		aTotSai[02]		+= nValVend
		aTotSai[03]		+= nVendTrib + nValVend
		aTotDevS[01]	+= nDevCompT
		aTotDevS[02]	+= nValDevComp
		aTotDevS[03]	+= nDevCompT + nValDevComp
		aTotEnt[01] 	+= nCompTrib
		aTotEnt[03] 	+= nValComp
		aTotEnt[03] 	+= nCompTrib + nValComp
		aTotDevE[01] 	+= nDevVendT
		aTotDevE[02] 	+= nValDevVend
		aTotDevE[03] 	+= nDevVendT + nValDevVend
	EndIf
	
	SM0->(dbSkip())

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Zera todas as variaveis de acumulacao (caso haja a necessidade de imprimir mais de uma filial)³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cQuebra    	:= ""
	cTipo      	:= ""
	aPIS		:= {}
	aCOFINS	  	:= {}
	aTotaisPIS 	:= Array(8)
	aTotaisCOF 	:= Array(8) 
	nPos		:= 0
	nX		    := 0
	nRedPis	  	:= 1
	nRedCOF	  	:= 1
	nValPisPas 	:= 0
	nBasPisPas 	:= 0
	nPosCofins 	:= 0 
	nValCofins 	:= 0 
	nBasCofins 	:= 0 
	nScanPis   	:= 0
	nScanCof   	:= 0  
	nTxPis     	:= 0
	nTxCof     	:= 0
	nCredPis   	:= 0
	nCredCof   	:= 0
	nValCont   	:= 0
	nZFranca   	:= 0
	nValDebi   	:= 0
	nValCred   	:= 0
	nBasDebi   	:= 0
	nBasCred   	:= 0
	nGValCont  	:= 0
	nGZFranca  	:= 0
	nGValDebi  	:= 0
	nGValCred  	:= 0
	nGBasDebi  	:= 0
	nGBasCred  	:= 0
	nValContri 	:= 0
	nContCp    	:= 0
	nExPis      := 0
	nExCof      := 0
	lRet       	:= .F.
	lContinua  	:= .T.
	lEntrada   	:= .F.
	lQuebra    	:= .F.
	lFirst     	:= .F.
	nValDevVend := 0
	nValComp    := 0
	nValVend    := 0 
	nValDevComp := 0
	nVendTrib	:= 0
	nDevCompT   := 0
	nCompTrib   := 0
	nDevVendT   := 0 
	aAliqs 	  	:= {}
	nPosAliq    := 0
	aDedRet     := {0,0}
	cbtxt      	:= Space(10)
	cbcont     	:= 00
	li         	:= 80
	aResAliCF 	:= {}    
	aAliqCFGer	:= {}      
	For nCt := 1 To len(aValContri)
		aValContri[nCt] := 0
	Next nCt   	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Deleta o temporario a cada filial processada³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("TRB")
	dbCloseArea()
	Ferase(cArqTemp+GetDBExtension())
	Ferase(cArqTemp+OrdBagExt())
Enddo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Volta a empresa anteriormente selecionada.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SM0")
SM0->(dbSeek(cEmpAnt+cFilOri,.T.))
cFilAnt := SM0->M0_CODFIL

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Imprime o total processado de todas as filiais.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If mv_par06 == 1

	cTitulo := STR0041 // "Resumo Geral - Totalizacao das Filiais"
	cabec1  := ""
	cabec2  := "" 
	cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo totalizador de filiais - COFINS³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay PADC(STR0013,Limite)
	Li++ 	
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por CFOP - COFINS - ENTRADAS    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay STR0048//"RESUMO POR CFOP PROCESSADO - ENTRADAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0049//"CFOP             Descrição"
	Li++
	@Li,001 Psay STR0051//"        Filial               Base da Contribuição     Valor da Contribuição"
	Li++
	@Li,001 Psay Repli("-",Limite)                        	
	Li++
	
	nTotal 	 := 0
	nTot_emp := 0
		
	aCFOPCOFE := aSORT(aCFOPCOFE,,,{|X,Y|X[1]+X[3]<Y[1]+Y[3]}) 
    For nX := 1 To Len(aCFOPCOFE)
		@Li,001 Psay aCFOPCOFE[nX][1]
	    @Li,018 Psay aCFOPCOFE[nX][5]
	    Li++
	    cCFOP  :=aCFOPCOFE[nX][1]
	    WHILE aCFOPCOFE[nX][1]==cCFOP
			If Li > 58
				Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
			EndIf          
			@LI,013 PSAY aCFOPCOFE[nX][3]
			@Li,033 Psay Transform(Abs(aCFOPCOFE[nX][4]),PesqPict("SD2","D2_TOTAL",17))
			@Li,059 Psay Transform(Abs(aCFOPCOFE[nX][2]),PesqPict("SD2","D2_TOTAL",17))
			nTotal 	 += Abs(aCFOPCOFE[nX][2])
			nTot_emp += Abs(aCFOPCOFE[nX][4])
			Li++
			nX++
			IF nX>Len(aCFOPCOFE)
				EXIT
			ENDIF
		END
	    nX--
		@Li,033 Psay Transform(nTot_emp,PesqPict("SD2","D2_TOTAL",17))
		@Li,059 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
		Li+=2
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf
		nTotal 	 := 0
		nTot_emp := 0     
	Next  
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por CFOP - COFINS - SAIDAS      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0050//"RESUMO POR CFOP PROCESSADO - SAIDAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0049//"CFOP             Descrição"
	Li++
	@Li,001 Psay STR0051//"        Filial               Base da Contribuição     Valor da Contribuição"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	nTotal 		:= 0
	nTot_emp    := 0
	
	aCFOPCOFS := aSORT(aCFOPCOFS,,,{|X,Y|X[1]+X[3]<Y[1]+Y[3]})
	For nX := 1 To Len(aCFOPCOFS)
 	    @Li,001 Psay aCFOPCOFS[nX][1]
	    @Li,018 Psay aCFOPCOFS[nX][5]
	    Li++
	  	cCFOP  := aCFOPCOFS[nX][1]
	    WHILE aCFOPCOFS[nX][1]==cCFOP 
			If Li > 58
				Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
			EndIf          
			@LI,013 PSAY aCFOPCOFS[nX][3]
			@Li,033 Psay Transform(Abs(aCFOPCOFS[nX][4]),PesqPict("SD2","D2_TOTAL",17))
			@Li,059 Psay Transform(Abs(aCFOPCOFS[nX][2]),PesqPict("SD2","D2_TOTAL",17))
			nTotal 	 += Abs(aCFOPCOFS[nX][2])
			nTot_emp += Abs(aCFOPCOFS[nX][4])
			Li++
			nX++
			IF nX>Len(aCFOPCOFS)
				EXIT
			ENDIF
		END
	    nX--
		@Li,003 Psay STR0047 // "Total:"
		@Li,033 Psay Transform(nTot_emp,PesqPict("SD2","D2_TOTAL",17))
		@Li,059 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
		Li+=2
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf
		nTotal 	 := 0      
		nTot_emp := 0 
	Next
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por aliquota - COFINS - ENTRADAS³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay STR0043 // "RESUMO POR ALIQUOTA PROCESSADA - ENTRADAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0044 //Filial  Aliquota                    Valor
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	For nX := 1 To Len(aTAlCOFE)
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf          
		@li,005 Psay aTAlCOFE[nX][3]
		@Li,011 Psay Transform(aTAlCOFE[nX][1],"@E 99.99%")
		@Li,026 Psay Transform(Abs(aTAlCOFE[nX][2]),PesqPict("SD2","D2_TOTAL",17))
		nTotal += Abs(aTAlCOFE[nX][2])
		Li++
	Next  
	@Li,003 Psay STR0047 // "Total:"
	@Li,026 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
	Li++
	
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por aliquota - COFINS - SAIDAS  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0046 // "RESUMO POR ALIQUOTA PROCESSADA - SAIDAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0044 //Filial  Aliquota                    Valor
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	nTotal := 0
	For nX := 1 To Len(aTAlCOFS)
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf          
		@Li,005 Psay aTAlCOFS[nX][3]
		@Li,011 Psay Transform(aTAlCOFS[nX][1],"@E 99.99%")
		@Li,026 Psay Transform(Abs(aTAlCOFS[nX][2]),PesqPict("SD2","D2_TOTAL",17))
		nTotal += Abs(aTAlCOFS[nX][2])
		Li++
	Next  
	@Li,003 Psay STR0047 // "Total:"
	@Li,026 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
	Li++

	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf          

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo apurado - COFINS³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ        
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0045 // "RESUMO APURADO"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 PSAY STR0039
	Li++
	@Li,011 PSAY Transform(Abs(aTotApur[02][01]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aTotApur[02][01] < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
			+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14)) //"Total Apurado............: "
	Li++ 
	@Li,001 PSAY STR0040
	Li++
	@Li,011 PSAY Transform(aTotApur[02][02],PesqPict("SF3","F3_VALCONT",14)) //"Total de Retencao........: "
	Li++          
	@Li,001 PSAY STR0018
	Li++
	@Li,011 PSAY Transform(Abs(aTotApur[02][03]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aTotApur[02][03] < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
			+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14)) //"Total da Contribuicao : "
	Li++

	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo totalizador de filiais - PIS   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay PADC(STR0010,Limite)
	Li++ 	
	@Li,001 Psay Repli("-",Limite)
	Li++ 

 	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por CFOP - PIS - ENTRADAS       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay STR0048//"RESUMO POR CFOP PROCESSADO - ENTRADAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0049//"CFOP             Descrição"
	Li++
	@Li,001 Psay STR0051//"        Filial               Base da Contribuição     Valor da Contribuição"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 
   	nTotal := 0
   	nTot_emp    := 0
   	      
   	aCFOPPISE := aSORT(aCFOPPISE,,,{|X,Y|X[1]+X[3]<Y[1]+Y[3]})
    For nX := 1 To Len(aCFOPPISE)
	    @Li,001 Psay aCFOPPISE[nX][1]
	    @Li,018 Psay aCFOPPISE[nX][5]
	    Li++
	    cCFOP  := aCFOPPISE[nX][1]
	    WHILE aCFOPPISE[nX][1]==cCFOP 
			If Li > 58
				Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
			EndIf
	   		@LI,013 PSAY aCFOPPISE[nX][3]
			@Li,033 Psay Transform(Abs(aCFOPPISE[nX][4]),PesqPict("SD2","D2_TOTAL",17))
			@Li,059 Psay Transform(Abs(aCFOPPISE[nX][2]),PesqPict("SD2","D2_TOTAL",17))
			nTotal 	 += Abs(aCFOPPISE[nX][2])
			nTot_emp += Abs(aCFOPPISE[nX][4])			
			Li++
			nX++
			IF nX>Len(aCFOPPISE)
				EXIT
			ENDIF
		END
	    nX--
		@Li,003 Psay STR0047 // "Total:"
		@Li,033 Psay Transform(nTot_emp,PesqPict("SD2","D2_TOTAL",17))
		@Li,059 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
		Li+=2
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf
		nTotal 	 := 0      
		nTot_emp := 0 
	Next
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por CFOP - PIS - SAIDAS         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0050//"RESUMO POR CFOP PROCESSADO - SAIDAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0049//"CFOP             Descrição"
	Li++
	@Li,001 Psay STR0051//"        Filial               Base da Contribuição     Valor da Contribuição"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	nTotal 		:= 0
	nTot_emp    := 0

	aCFOPPISS := aSORT(aCFOPPISS,,,{|X,Y|X[1]+X[3]<Y[1]+Y[3]})
	For nX := 1 To Len(aCFOPPISS)
	    @Li,001 Psay aCFOPPISS[nX][1]
	    @Li,018 Psay aCFOPPISS[nX][5]
	    Li++
	    cCFOP  := aCFOPPISS[nX][1]
	    WHILE aCFOPPISS[nX][1]==cCFOP
			If Li > 58
				Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
			EndIf          
			@LI,013 PSAY aCFOPPISS[nX][3]
			@Li,033 Psay Transform(Abs(aCFOPPISS[nX][4]),PesqPict("SD2","D2_TOTAL",17))
			@Li,059 Psay Transform(Abs(aCFOPPISS[nX][2]),PesqPict("SD2","D2_TOTAL",17))
			nTotal 	 += Abs(aCFOPPISS[nX][2])
			nTot_emp += Abs(aCFOPPISS[nX][4])
			Li++
			nX++
			IF nX>Len(aCFOPPISS)
				EXIT
			ENDIF
		END
	    nX--
		@Li,003 Psay STR0047 // "Total:"
		@Li,033 Psay Transform(nTot_emp,PesqPict("SD2","D2_TOTAL",17))
		@Li,059 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
		Li+=2
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf
 		nTotal := 0
		nTot_emp := 0       
	Next
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf                     
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por aliquota - PIS - ENTRADAS   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay STR0043 // "RESUMO POR ALIQUOTA PROCESSADA - ENTRADAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0044 //Filial Aliquota                    Valor
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	nTotal := 0
	For nX := 1 To Len(aTAlPISE)
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf          
		@Li,005 Psay aTAlPISE[nX][3]
		@Li,011 Psay Transform(aTAlPISE[nX][1],"@E 99.99%")
		@Li,026 Psay Transform(Abs(aTAlPISE[nX][2]),PesqPict("SD2","D2_TOTAL",17))
		nTotal += Abs(aTAlPISE[nX][2])
		Li++
	Next  
	@Li,003 Psay STR0047 // "Total:"
	@Li,026 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
	Li++
	
	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo por aliquota - PIS - SAIDAS     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0046 // "RESUMO POR ALIQUOTA PROCESSADA - SAIDAS"
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 Psay STR0044 //Filial  Aliquota                    Valor
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        	
	Li++ 

	nTotal := 0
	For nX := 1 To Len(aTAlPISS)
		If Li > 58
			Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
		EndIf   
		@Li,005 Psay aTAlPISS[nX][3]       
		@Li,011 Psay Transform(aTAlPISS[nX][1],"@E 99.99%")
		@Li,026 Psay Transform(Abs(aTAlPISS[nX][2]),PesqPict("SD2","D2_TOTAL",17))
		nTotal += Abs(aTAlPISS[nX][2])
		Li++
	Next       
	@Li,003 Psay STR0047 // "Total:"
	@Li,026 Psay Transform(nTotal,PesqPict("SD2","D2_TOTAL",17))
	Li++

	If Li > 58
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf          

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Resumo apurado - PIS³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ        
	@Li,001 Psay Repli("-",Limite)
	Li++ 
	@Li,001 Psay STR0045 // RESUMO APURADO        
	Li++ 
	@Li,001 Psay Repli("-",Limite)                        
	Li++ 
	@Li,001 PSAY STR0039+Transform(Abs(aTotApur[01][01]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aTotApur[01][01] < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
			+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14)) //"Total Apurado............: "
	Li++ 
	@Li,001 PSAY STR0040+Transform(aTotApur[01][02],PesqPict("SF3","F3_VALCONT",14)) //"Total de Retencao........: "
	Li++          
	@Li,001 PSAY STR0018+Transform(Abs(aTotApur[01][03]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aTotApur[01][03] < 0,"  (C)","  (D)") + Transform(Abs(aValContri[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aValContri[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(19)+ Transform(Abs(aValContri[3]),PesqPict("SF3","F3_VALCONT",14));
			+ Space(10) +  Transform(Abs(aValContri[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(10)+  Transform(Abs(aValContri[6]),PesqPict("SF3","F3_VALCONT",14))  //"Total da Contribuicao : "
	Li++

	//para aparecer o resumo inteiro do Montante dos movimentos processados no periodo
	If Li > 50
		Cabec(ctitulo,cabec1,cabec2,nomeprog,ctamanho,15)
	EndIf      

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montante dos movimentos processados no periodo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lResumo
		@Li,001 Psay Repli("-",Limite) 
		Li++ 
		@Li,001 Psay PadC(STR0042,Limite) // RESUMO POR MOVIMENTO PROCESSADO
		Li++ 
		@Li,001 Psay Repli("-",Limite)
		Li++ 
		@Li,001 Psay STR0024 //"Valores para Calculo              Tributado           Outros            Total"
		Li++ 
		@Li,001 Psay Repli("-",Limite)
		Li++ 
		@Li,001 Psay STR0025+Transform(aTotSai[01],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotSai[02],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotSai[03],PesqPict("SD2","D2_TOTAL",17))  // "Saídas                   "
		Li++ 
		@Li,001 Psay STR0026+Transform(aTotDevS[01],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotDevS[02],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotDevS[03],PesqPict("SD2","D2_TOTAL",17)) // "Devoluções de Saídas     "
		Li++ 
		@Li,001 Psay STR0027+Transform(aTotEnt[01],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotEnt[02],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotEnt[03],PesqPict("SD2","D2_TOTAL",17))// "Entradas                 "
		Li++ 
		@Li,001 Psay STR0028+Transform(aTotDevE[01],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotDevE[02],PesqPict("SD2","D2_TOTAL",17))+Transform(aTotDevE[03],PesqPict("SD2","D2_TOTAL",17)) // "Devoluções de Entradas   "
		Li++ 
	Endif
Endif

Roda(cbcont,cbtxt,ctamanho)

If aReturn[5] == 1
	Set Printer TO
   dbcommitAll()
   OurSpool(wnrel)
Endif

MS_FLUSH()

Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³R906Imp   ³ Autor ³Gustavo G. Rueda       ³ Data ³05/01/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de impressao por nota fiscal.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function R906Imp(cArqTemp,aTAlPISS,aTAlCOFS,aTAlPISE,aTAlCOFE,aTotApur, nOrd)

	Local	aLay[2]
	Local	aImp		:=	{}
	Local 	aAliqs 	  	:= 	{}
	Local   aDedRet     := {0,0}
	Local 	aAliqCFGer	:= {} 
	Local	aResAliCF	:= {}
	Local   aContrAliq  := Array(6)
	Local   aSomaAliq	:= Array(6)

	Local	cCabec1		:=	""
	Local	cCabec2		:=	""
	Local	cQuebra  	:= 	""
	Local	cTipo		:=	""
	Local	cCfop		:=	""
	Local 	cCabec		:=	""
	
	Local	lFirst		:=	.F.
	Local 	lContinua  	:= 	.T.

	Local	Lin			:=	1
	Local	nContribC	:=	0
	Local	nContribD	:=	0
	Local	nContribBC	:=	0
	Local	nContribBD	:=	0
	Local	nValCont	:= 	0
	Local	nZFranca	:= 	0
	Local	nValDebi	:= 	0
	Local	nValCred	:= 	0
	Local	nBasDebi	:= 	0
	Local	nBasCred	:= 	0
	Local	nGValDebi 	:= 	0
	Local	nGValCred 	:= 	0
	Local	nPosAliq	:=	0
	Local	nX			:=	1
	Local 	nContrAli	:= 	0
	Local 	nAliq		:= 	0 
	Local 	nPos		:= 	0                    
	Local   nCt			:= 	0  
	Local	aTotDia		:= 	Array(7)
	Local   aRet		:= 	{0,0}	
	Local	cTotDia		:= 	STR0134	//"  Total do dia - ########                                   ##################  ##################            ##################  ##################    ##################  ##################                     "
	Local	nXX 		:= 	0
	Local 	nAliqP 		:= 	0
	
	For nCt := 1 To len(aContrAliq)
		aContrAliq[nCt] := 0
	Next nCt 
	For nCt := 1 To len(aSomaAliq)
		aSomaAliq[nCt] := 0
	Next nCt  	  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apura os valores referentes as retencoes                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	aDedRet := FsCalcRet(mv_par02,mv_par03,,,,,@aRet)
	//
	aLay[2]	:= 	STR0038 //"  ########################################################  ##################  ##################  #####    ##################  ##################    ##################  ################## "
	Li		:=	99
	//
	If (nOrd==2)
		If (MV_PAR04==1) // Analitica
			cCabec1	:=	STR0130	//" Documento    Serie  Emissao   Produto          NCM         Valor Contabil      Zona Franca         Aliquota                 Valor da Contribuicao                      Base da Contribuicao      Cliente/Forn.     "
			aLay[1]	:=	STR0131	//"  ######      ###    ########  ###############  ##########  ##################  ##################  #####    ##################  ##################    ##################  ##################    ##################"
		Else
			cCabec1	:=	STR0033	//" Documento    Serie  Emissao   Produto          NCM         Valor Contabil      Zona Franca         Aliquota           Valor da Contribuicao                     Base da Contribuicao          "
			aLay[1]	:=	STR0035	//"  ######      ###    ########  ###############  ##########  ##################  ##################  #####    ##################  ##################    ##################  ################## "
		Endif	
		cCabec2	:=	STR0034	//"                                                                                                                          Debito             Credito                Debito             Credito "
		IndRegua ("TRB", cArqTemp, "TIPO+ES+NUMNF+SERIE+DToS (EMISSAO)")
	ElseIf (nOrd==3)
		If (MV_PAR04==1) // Analitica
			cCabec1	:=	STR0132	//" Emissao   Documento    Serie  Produto          NCM         Valor Contabil      Zona Franca         Aliquota                 Valor da Contribuicao                      Base da Contribuicao      Cliente/Forn.     "
			aLay[1]	:=	STR0133	//" ########   ######      ###    ###############  ##########  ##################  ##################  #####    ##################  ##################    ##################  ##################    ##################"
   		Else
			cCabec1	:=	STR0057	//" Emissao   Documento    Serie  Produto          NCM         Valor Contabil      Zona Franca         Aliquota                 Valor da Contribuicao                      Base da Contribuicao   "
			aLay[1]	:=	STR0058	//" ########   ######      ###    ###############  ##########  ##################  ##################  #####    ##################  ##################    ##################  ################## "
   		Endif
		cCabec2	:=	STR0034	//"                                                                                                                          Debito             Credito                Debito             Credito "
		IndRegua ("TRB", cArqTemp, "TIPO+ES+DToS (EMISSAO)+NUMNF+SERIE")
	EndIF
	//                                                                
	aTotDia[1]	:=	TRB->EMISSAO
	aTotDia[2]	:=	0
	aTotDia[3]	:=	0
	aTotDia[4]	:=	0
	aTotDia[5]	:=	0
	aTotDia[6]	:=	0
	aTotDia[7]	:=	0               		
	Do While !TRB->(Eof ()) .And. (lContinua)
	
		If (lEnd)
			@ Prow()+1,001 PSay STR0007  //"CANCELADO PELO OPERADOR"
			lContinua := .F.
			Exit
		Endif
		//
		IncRegua()
		//
		If (Li>58)
			cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
		EndIf                                                                                                                                       
		//
		If !(lFirst)
			@ Li, 001 Psay OemToAnsi (STR0008) + SM0->M0_NOMECOM //"Empresa : "
			Li++ 
			@ Li, 001 Psay OemToAnsi (STR0021) + Transform(SM0->M0_CGC,"@R 99.999.999/9999-99")  //"CNPJ    : "
			Li++ 
			@ Li, 001 Psay OemToAnsi (STR0009) + Dtoc(mv_par02) + " - " + Dtoc(mv_par03) //"Periodo : "
			Li++
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Quebra do totalizador por dia durante o processamento³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (MV_PAR09==1) .And. (nOrd==3) .And. lFirst .And.;
			(TRB->EMISSAO<>aTotDia[1] .Or. TRB->ES<>cCfop .Or. TRB->TIPO<>cTipo)
			
			@ Li, 001 PSAY __PrtThinLine()
			Li++

			FmtLin (aTotDia,cTotDia,,"@X",@Li)
			Li++

			aTotDia[1]	:=	TRB->EMISSAO
			aTotDia[2]	:=	0
			aTotDia[3]	:=	0
			aTotDia[4]	:=	0
			aTotDia[5]	:=	0
			aTotDia[6]	:=	0
			aTotDia[7]	:=	0
		EndIf
		//
		If (TRB->TIPO<>cTipo) .Or. (TRB->ES<>cCfop)
			//
			If (lFirst)
				@ Li, 001 PSAY __PrtThinLine()
				Li++
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Array jah totalizado por aliquota, pronto para impressao³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aSort(aALiqs,,,{|x,y| x[1]>y[1]})
				For nX := 1 To Len (aALiqs)					
					aContrAliq	:=	{aALiqs[nX][3], aALiqs[nX][4], aALiqs[nX][5], aALiqs[nX][6], aALiqs[nX][7], aALiqs[nX][8]}
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Quebra do totalizador por CFOP durante o processamento³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If mv_par10 == 1                                   
						nPosAliq := aScan(aResAliCF,{|x| x[1]==aAliqs[nX][1]})
						If nPosAliq > 0							
							For nPos := nPosAliq to Len(aResAliCF)
								If aResAliCF[nPos][01] <> aAliqs[nX][1]
									Exit
									Endif
								If (Li>58)
									cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
								EndIf    
								                                                                                                                                   
								// Imprime o cabecalho do total por CFOP        
								If nPos == nPosAliq
									cCabec := STR0053 + Space(05) + aResAliCF[nPos][2]
								Else
									cCabec := STR0053
									cCabec := Space(Len(cCabec)) + Space(05) + aResAliCF[nPos][2]
								Endif
								
								FmtLin ({cCabec, Transform (aResAliCF[nPos][4], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][5], "@E 999,999,999,999.99"),;
									Transform (aResAliCF[nPos][6], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][7], "@E 999,999,999,999.99"),;
									Transform (aResAliCF[nPos][8], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][9], "@E 999,999,999,999.99")},aLay[2],,"@X",@Li)
							Next
						Endif
					Endif

					If aAliqs[nX][9]=="S"
						aContrAliq	:=	{0,0,0,0,0,0}
						For nXX := nX To Len(aALiqs)
							If aAliqs[nXX][9]=="S" .And. aAliqs[nX][1]==0
								nX := nXX
								aContrAliq[1]+= aALiqs[nXX][3]
								aContrAliq[2]+= aALiqs[nXX][4]
								aContrAliq[3]+= aALiqs[nXX][5]
								aContrAliq[4]+= aALiqs[nXX][6]
								aContrAliq[5]+= aALiqs[nXX][7]
								aContrAliq[6]+= aALiqs[nXX][8]
							Else
								Exit
							EndIf
						Next nXX
					EndIf

					FmtLin ({STR0031+Transform(aAliqs[nX][1],"@E 99.99%"), Transform (aContrAliq[1], "@E 999,999,999,999.99"), Transform (aContrAliq[2], "@E 999,999,999,999.99"),;
						Transform (aContrAliq[3], "@E 999,999,999,999.99"), Transform (aContrAliq[4], "@E 999,999,999,999.99"),;
						Transform (aContrAliq[5], "@E 999,999,999,999.99"), Transform (aContrAliq[6], "@E 999,999,999,999.99")},aLay[2],,"@X",@Li)
					Li ++
				Next (nX)
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Impressao do total das entradas/saidas durante o processamento³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				FmtLin ({Iif (TRB->ES=="S", STR0015+STR0017, STR0015+STR0016), Transform (nValCont, "@E 999,999,999,999.99"), Transform (nZFranca, "@E 999,999,999,999.99"),;
					Transform (nValDebi, "@E 999,999,999,999.99"), Transform (nValCred, "@E 999,999,999,999.99"),;
					Transform (nBasDebi, "@E 999,999,999,999.99"), Transform (nBasCred, "@E 999,999,999,999.99")}, aLay[2],,"@X",@Li)
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Impressao da parte da contribuicao ao final das informacoes do PIS ou COFINS, durante o processamento³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (TRB->TIPO<>cTipo)
					//
					Li+=2
					@ Li, 001 Psay __PrtThinLine()
					Li++
					@ Li, 001 Psay STR0032 //"Contribuicao : "
					Li	+=	2
					//
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Ordena o array por aliquota + CFOP  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					Asort(aAliqCFGer,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})					
					aContrAliq	:=	{0,0,0,0,0,0}
					// Imprime o valor apurado por aliquota ou por aliquota + cfop
					For nX := 1 To Len(aAliqCFGer)
					                
						If (Li>58)
							cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
						EndIf                                                                                                                                       
						
						If nAliq <> aAliqCFGer[nX][1] 						
							If nX <> 1                        
					   			@Li, 001 PSAY STR0047 + Space(04) + Transform(Abs(nContrAli),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Space(34)+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aContrAliq[3]),PesqPict("SF3","F3_VALCONT",14));
								+ Space(6) +  Transform(Abs(aContrAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))								
								Li += 2
								nContrAli 	:= 0 
								For nCt := 1 To len(aContrAliq)
				   					aContrAliq[nCt] := 0
								Next nCt   								           
							Endif
							@Li, 001 PSAY STR0029 + Transform(aAliqCFGer[nX][1],"@E 99.99%")
							Li++  
							If mv_par10 == 1
								@Li, 001 PSAY STR0054
								Li++
							Endif
							nAliq 	:= aAliqCFGer[nX][1]
						Endif
						 
						If mv_par10 == 1
							@Li, 001 PSAY aAliqCFGer[nX][2] + Space(06) + Transform(Abs(aAliqCFGer[nX][3]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aAliqCFGer[nX][3] < 0,"  (C)","  (D)") + Space(34)+ Transform(Abs(aAliqCFGer[nX][4]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aAliqCFGer[nX][5]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aAliqCFGer[nX][6]),PesqPict("SF3","F3_VALCONT",14));
								+ Space(6) +  Transform(Abs(aAliqCFGer[nX][7]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aAliqCFGer[nX][8]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aAliqCFGer[nX][9]),PesqPict("SF3","F3_VALCONT",14))	
							Li++                                                              
						Endif             
						nContrAli	 += aAliqCFGer[nX][3]  
						aContrAliq[1]+= aAliqCFGer[nX][4] 
						aContrAliq[2]+= aAliqCFGer[nX][5] 
						aContrAliq[3]+= aAliqCFGer[nX][6]
						aContrAliq[4]+= aAliqCFGer[nX][7] 
						aContrAliq[5]+= aAliqCFGer[nX][8] 
						aContrAliq[6]+= aAliqCFGer[nX][9]
						aSomaAliq[1]+= aAliqCFGer[nX][4]            
						aSomaAliq[2]+= aAliqCFGer[nX][5]
						aSomaAliq[3]+= aAliqCFGer[nX][6]
						aSomaAliq[4]+= aAliqCFGer[nX][7]
						aSomaAliq[5]+= aAliqCFGer[nX][8]
						aSomaAliq[6]+= aAliqCFGer[nX][9]   																														
					Next

					If (Li>58)
						cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
					EndIf                                                                                                                                       
					
					//Total
					@Li, 001 PSAY STR0047 + Space(04) + Transform(Abs(nContrAli),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Space(34)+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aContrAliq[3]),PesqPict("SF3","F3_VALCONT",14));
					+ Space(6) +  Transform(Abs(aContrAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))
					Li += 2
					
					//"Total Apurado............: "
					@Li, 001 PSAY STR0039
					Li++
					@Li, 011 PSAY Transform(Abs(nGValDebi-nGValCred),PesqPict("SF3","F3_VALCONT",14)) + IIf(nGValDebi-nGValCred < 0,"  (C)","  (D)")+ Space(34)+Transform(Abs(aSomaAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aSomaAliq[3]),PesqPict("SF3","F3_VALCONT",14));
				   	+ Space(6) +  Transform(Abs(aSomaAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aSomaAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[6]),PesqPict("SF3","F3_VALCONT",14)) 
				   	Li++
					Li++                         

					//"Total das Retencoes........: "
					@Li, 001 PSAY STR0143 //"Total de Retenção(Modalidade da Dedução: Vencimento)........: "  --> Empresas que nao sao de Direito Publico
					Li++
					@Li, 011 PSAY Transform(IIF(cTipo=="PIS",aRet[1],aRet[2]),PesqPict("SF3","F3_VALCONT",14))
					Li++
					Li++ 
					@Li, 001 PSAY STR0144 //"Total de Retenção - Orgãos Públicos(Modalidade da Dedução: Pagamento)........: "
					Li++
					@Li, 011 PSAY Transform(IIF(cTipo=="PIS",(aDedRet[1]-aRet[1]),(aDedRet[2]-aRet[2])),PesqPict("SF3","F3_VALCONT",14))
					Li++          
					Li++  
					nContrAli := IIF(cTipo=="PIS",(nGValDebi-nGValCred)-aDedRet[1],(nGValDebi-nGValCred)-aDedRet[2])
					
					//"Total da Contribuicao....: "
					@Li, 001 PSAY STR0018
					Li++
					@Li, 011 PSAY Transform(IIF(cTipo=="PIS",Abs((nGValDebi-nGValCred)-aDedRet[1]),Abs((nGValDebi-nGValCred)-aDedRet[2])),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)") + Space(34) + Transform(Abs(aSomaAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aSomaAliq[3]),PesqPict("SF3","F3_VALCONT",14));
						+ Space(6) +  Transform(Abs(aSomaAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aSomaAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[6]),PesqPict("SF3","F3_VALCONT",14))//"Total da Contribuicao : "					
					//
					If cTipo == "PIS"
						aTotApur[01][01]  += nGValDebi-nGValCred
						aTotApur[01][02]  += aDedRet[1]
						aTotApur[01][03]  += (nGValDebi-nGValCred)-aDedRet[1]
					Else
						aTotApur[02][01]  += nGValDebi-nGValCred
						aTotApur[02][02]  += aDedRet[2]
						aTotApur[02][03]  += (nGValDebi-nGValCred)-aDedRet[2]
					Endif
					nGValDebi 	:= 0
					nGValCred 	:= 0
					aAliqCFGer	:= 	{}
				EndIf
				aAliqs		:=	{}            
				aResAliCF 	:= 	{}         
				//
				nValCont	:= 	0
				nZFranca 	:= 	0
				nValDebi	:= 	0
				nValCred 	:= 	0
				nBasDebi 	:= 	0
				nBasCred 	:=	0
				For nCt := 1 To len(aSomaAliq)
					aSomaAliq[nCt] := 0
				Next nCt  	  
			EndIf //lfirst
			//
			If (TRB->TIPO<>cTipo) .And. lFirst
				Cabec (cTitulo, cCabec1, cCabec2, nomeprog, cTamanho, 15)
			EndIf
			//
			Li++
			@ Li, 001 PSay IIf (TRB->TIPO=="PIS", PadC (STR0010+ Iif (SubStr (TRB->CFOP, 1, 1)<"5", STR0011, STR0012), Limite),;
		                 PadC (STR0013+Iif (SubStr (TRB->CFOP, 1, 1)<"5", STR0011, STR0012), Limite))
			Li	+=	2
			cTipo 	:=	TRB->TIPO
			cCfop	:=	TRB->ES
			lFirst	:=	.T.
		Endif
		//
		If (SubStr (TRB->CFOP, 1, 1)>="5")
			nContribC	:=	Iif (TRB->TIPO=="PIS", TRB->PISDSAI, TRB->COFDSAI)
			nContribD	:=	Iif (TRB->TIPO=="PIS", TRB->PISCSAI, TRB->COFCSAI)
			nContribBC	:=	Iif (TRB->TIPO=="PIS", TRB->BASPIDSAI, TRB->BASCODSAI)
			nContribBD	:=	Iif (TRB->TIPO=="PIS", TRB->BASPICSAI, TRB->BASCOCSAI)
		Else	
			nContribC	:=	Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT)
			nContribD	:=	Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT)
			nContribBC	:=	Iif (TRB->TIPO=="PIS", TRB->BASPIDENT, TRB->BASCODENT)
			nContribBD	:=	Iif (TRB->TIPO=="PIS", TRB->BASPICENT, TRB->BASCOCENT)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Impressao das movimentacoes (NOTAS FISCAIS)³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        If(MV_PAR11==1) .And. (MV_PAR04==1)
	        If (nOrd==2)
		        aImp	:=	{TRB->NUMNF, TRB->SERIE, TRB->EMISSAO,	TRB->PRODUTO, TRB->NCM, Transform (TRB->VALORCONT, "@E 999,999,999,999.99"),;
			       	Transform (TRB->ZFRANCA, "@E 999,999,999,999.99"), 	Transform(TRB->ALIQ,Iif(TRB->PAUTA=="S","@E 99.99","@E 99.99%")), Transform (nContribC, "@E 999,999,999,999.99"),;
			   	   	Transform (nContribD, "@E 999,999,999,999.99"), Transform (nContribBC, "@E 999,999,999,999.99"), Transform (nContribBD, "@E 999,999,999,999.99"),;
			   	   	TRB->CLIFOR}
	  		ElseIf (nOrd==3)
		        aImp	:=	{TRB->EMISSAO, TRB->NUMNF, TRB->SERIE,	TRB->PRODUTO, TRB->NCM, Transform (TRB->VALORCONT, "@E 999,999,999,999.99"),;
			       	Transform (TRB->ZFRANCA, "@E 999,999,999,999.99"), 	Transform(TRB->ALIQ,Iif(TRB->PAUTA=="S","@E 99.99","@E 99.99%")), Transform (nContribC, "@E 999,999,999,999.99"),;
			   	   	Transform (nContribD, "@E 999,999,999,999.99"), Transform (nContribBC, "@E 999,999,999,999.99"), Transform (nContribBD, "@E 999,999,999,999.99"),;
			   	   	TRB->CLIFOR}
		    EndIf
  			FmtLin (aImp, aLay[1],,, @Li)
		EndIf

	    aTotDia[2]	+=	TRB->VALORCONT
	    aTotDia[3]	+=	TRB->ZFRANCA
	    aTotDia[4]	+=	nContribC
	    aTotDia[5]	+=	nContribD
	    aTotDia[6]	+=	nContribBC
		aTotDia[7]	+=	nContribBD
		//	        
		nValCont	+= 	TRB->VALORCONT
		nZFranca 	+= 	TRB->ZFRANCA
		//
		If (SubStr (TRB->CFOP, 1, 1)>="5")
			nValDebi	+= 	Iif (TRB->TIPO=="PIS", TRB->PISDSAI, TRB->COFDSAI)
			nValCred 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISCSAI, TRB->COFCSAI)
			nBasDebi 	+= 	Iif (TRB->TIPO=="PIS", TRB->BASPIDSAI, TRB->BASCODSAI)
			nBasCred 	+=	Iif (TRB->TIPO=="PIS", TRB->BASPICSAI, TRB->BASCOCSAI)
			nGValDebi 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISDSAI, TRB->COFDSAI)
			nGValCred 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISCSAI, TRB->COFCSAI)
			//
			nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq	:=	Ascan(aAliqs,{|x| x[1]==nAliqP})
			If (nPosAliq>0)
				aAliqs[nPosAliq][2] += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
				aAliqs[nPosAliq][3] += TRB->VALORCONT
				aAliqs[nPosAliq][4] += TRB->ZFRANCA
				aAliqs[nPosAliq][5] += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
				aAliqs[nPosAliq][6] += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
				aAliqs[nPosAliq][7] += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
				aAliqs[nPosAliq][8] += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
				If TRB->TIPO == "PIS"
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq	:=	Ascan(atalpiss,{|x| x[1]==nAliqP .and. x[3]==sm0->m0_codfil})
					aTAlPISS[nPosAliq][2] += TRB->PISDSAI-TRB->PISCSAI
				Else
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq	:=	Ascan(atalcofs,{|x| x[1]==nAliqP .and. x[3]==sm0->m0_codfil})
					aTAlCOFS[nPosAliq][2] += TRB->COFDSAI-TRB->COFCSAI
				Endif
			Else
				aAdd (aAliqs, {Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
				              Iif (TRB->TIPO=="PIS", TRB->PISDSAI, TRB->COFDSAI)-Iif (TRB->TIPO=="PIS", TRB->PISCSAI, TRB->COFCSAI),;
				              TRB->VALORCONT, TRB->ZFRANCA,;
				              Iif (TRB->TIPO=="PIS", TRB->PISDSAI, TRB->COFDSAI),;
				              Iif (TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
				              Iif (TRB->TIPO=="PIS", TRB->BASPIDSAI, TRB->BASCODSAI),;
				              Iif (TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI),;
				              TRB->PAUTA})
				If TRB->TIPO == "PIS"					              
					AADD(aTAlPISS,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDSAI-TRB->PISCSAI,sm0->m0_codfil})
				Else                                                       
					AADD(aTAlCOFS,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDSAI-TRB->COFCSAI,sm0->m0_codfil})
				Endif
			Endif      
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Acumula a contribuicao por aliquota para impressao do resumo³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
			If nPosAliq > 0
				aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
				aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
				aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
				aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI) //contribuicao debito
				aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI) //contribuicao credito										
				aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI) //base debito
				aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI) //base credito					
			Else
				AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI),IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI),IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)})				
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Totalizador do Relatorio por Aliquota + CFOP³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq := aScan(aResAliCF,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
			If nPosAliq == 0
				AADD(aResAliCF,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
				              TRB->CFOP,;
				              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
				              TRB->VALORCONT,;
				              TRB->ZFRANCA,;
				              IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI),;
				              IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI),;
				              IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI),;
				              IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI),;
				              TRB->PAUTA})
			Else
				aResAliCF[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)-IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
				aResAliCF[nPosAliq][4]  += TRB->VALORCONT
				aResAliCF[nPosAliq][5]  += TRB->ZFRANCA
				aResAliCF[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDSAI,TRB->COFDSAI)
				aResAliCF[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCSAI,TRB->COFCSAI)
				aResAliCF[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDSAI,TRB->BASCODSAI)
				aResAliCF[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICSAI,TRB->BASCOCSAI)
			Endif
		Else
			nValDebi 	+=	Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT) 
			nValCred 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT) 
			nBasDebi 	+= 	Iif (TRB->TIPO=="PIS", TRB->BASPIDENT, TRB->BASCODENT) 
			nBasCred 	+= 	Iif (TRB->TIPO=="PIS", TRB->BASPICENT, TRB->BASCOCENT) 
			nGValDebi	+= 	Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT) 
			nGValCred	+= 	Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT) 
			//
			nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq	:=	Ascan(aAliqs,{|x| x[1]==nAliqP})
			If (nPosAliq>0)
				aAliqs[nPosAliq][2]		+= 	Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT)-Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT)
				aAliqs[nPosAliq][3] 	+= 	TRB->VALORCONT
				aAliqs[nPosAliq][4] 	+= 	TRB->ZFRANCA
				aAliqs[nPosAliq][5] 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT) 
				aAliqs[nPosAliq][6] 	+= 	Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT) 
				aAliqs[nPosAliq][7] 	+= 	Iif (TRB->TIPO=="PIS", TRB->BASPIDENT, TRB->BASCODENT) 
				aAliqs[nPosAliq][8] 	+=	Iif (TRB->TIPO=="PIS", TRB->BASPICENT, TRB->BASCOCENT) 
				If TRB->TIPO == "PIS"
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq	:=	Ascan(atalpise,{|x| x[1]==nAliqP .and. x[3]==sm0->m0_codfil})
					aTAlPISE[nPosAliq][2] += TRB->PISDENT-TRB->PISCENT
				Else
					nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
					nPosAliq	:=	Ascan(atalcofe,{|x| x[1]==nAliqP .and. x[3]==sm0->m0_codfil})
					aTAlCOFE[nPosAliq][2] += TRB->COFDENT-TRB->COFCENT
				Endif
			Else
				aAdd (aAliqs, {Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
				             Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT)-Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT),;
				             TRB->VALORCONT,;
				             TRB->ZFRANCA,;
				             Iif (TRB->TIPO=="PIS", TRB->PISDENT, TRB->COFDENT),;
				             Iif (TRB->TIPO=="PIS", TRB->PISCENT, TRB->COFCENT),;
				             Iif (TRB->TIPO=="PIS", TRB->BASPIDENT, TRB->BASCODENT),;
				             Iif (TRB->TIPO=="PIS", TRB->BASPICENT, TRB->BASCOCENT),;
				             TRB->PAUTA})
				If TRB->TIPO == "PIS"
					AADD(aTAlPISE,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->PISDENT-TRB->PISCENT,sm0->m0_codfil})
				Else
					AADD(aTAlCOFE,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->COFDENT-TRB->COFCENT,sm0->m0_codfil})
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Acumula a contribuicao por aliquota para impressao do resumo³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nAliqP := Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq := Ascan(aAliqCFGer,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
			If nPosAliq > 0
				aAliqCFGer[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
				aAliqCFGer[nPosAliq][4]  += TRB->VALORCONT //valor contabil
				aAliqCFGer[nPosAliq][5]  += TRB->ZFRANCA //Desconto Zona Franca
				aAliqCFGer[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) //contribuicao debito
				aAliqCFGer[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) //contribuicao credito										
				aAliqCFGer[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) //base debito
				aAliqCFGer[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT) //base credito					
			Else
				AADD(aAliqCFGer,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),TRB->CFOP,IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),TRB->VALORCONT,TRB->ZFRANCA,IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT),IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT),IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)}) 
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Totalizador do Relatorio por Aliquota + CFOP³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nAliqP 	:= Iif(TRB->PAUTA=="S",0,TRB->ALIQ)
			nPosAliq := aScan(aResAliCF,{|x| x[1]==nAliqP .And. x[2]==TRB->CFOP})
			If nPosAliq == 0
				AADD(aResAliCF,{Iif(TRB->PAUTA=="S",0,TRB->ALIQ),;
				             TRB->CFOP,; 
				             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
				             TRB->VALORCONT,;
				             TRB->ZFRANCA,;
				             IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT),;
				             IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT),;
				             IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT),;
				             IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT),;
				             TRB->PAUTA})
			Else
				aResAliCF[nPosAliq][3]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT)-IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
				aResAliCF[nPosAliq][4]  += TRB->VALORCONT
				aResAliCF[nPosAliq][5]  += TRB->ZFRANCA
				aResAliCF[nPosAliq][6]  += IIF(TRB->TIPO == "PIS",TRB->PISDENT,TRB->COFDENT) 
				aResAliCF[nPosAliq][7]  += IIF(TRB->TIPO == "PIS",TRB->PISCENT,TRB->COFCENT) 
				aResAliCF[nPosAliq][8]  += IIF(TRB->TIPO == "PIS",TRB->BASPIDENT,TRB->BASCODENT) 
				aResAliCF[nPosAliq][9]  += IIF(TRB->TIPO == "PIS",TRB->BASPICENT,TRB->BASCOCENT)                                                
			Endif
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ordena o array por aliquota + CFOP  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Asort(aResAliCF,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})					

		TRB->(DbSkip ())
	EndDo

	If TRB->(LastRec()) > 0

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Quebra do totalizador por dia no termino do processamento³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (MV_PAR09==1) .And. (nOrd==3) .And. lFirst .And.;
			(TRB->EMISSAO<>aTotDia[1] .Or. TRB->ES<>cCfop .Or. TRB->TIPO<>cTipo)
			
			@ Li, 001 PSAY __PrtThinLine()
			Li++

			FmtLin (aTotDia,cTotDia,,"@X",@Li)
			Li++

			aTotDia[1]	:=	TRB->EMISSAO
			aTotDia[2]	:=	0
			aTotDia[3]	:=	0
			aTotDia[4]	:=	0
			aTotDia[5]	:=	0
			aTotDia[6]	:=	0
			aTotDia[7]	:=	0
		EndIf
		
		@ Li, 001 PSAY __PrtThinLine()
		Li++
		//
		aSort(aALiqs,,,{|x,y| x[1]>y[1]})
		For nX := 1 To Len (aALiqs)
			aContrAliq	:=	{aALiqs[nX][3], aALiqs[nX][4], aALiqs[nX][5], aALiqs[nX][6], aALiqs[nX][7], aALiqs[nX][8]}
			// Imprime, alem do total por aliquota, os CFOPs de cada uma das aliquotas impressas
			If mv_par10 == 1
				nPosAliq := aScan(aResAliCF,{|x| x[1]==aAliqs[nX][1]})
				If nPosAliq > 0
					For nPos := nPosAliq to Len(aResAliCF)
						If aResAliCF[nPos][01] <> aAliqs[nX][1] 
							Exit
						Endif
						If (Li>58)
							cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
						EndIf    
					                                                                                                                                   
						// Imprime o cabecalho do total por CFOP        
						If nPos == nPosAliq
							cCabec := STR0053 + Space(05) + aResAliCF[nPos][2]
						Else
							cCabec := STR0053
							cCabec := Space(Len(cCabec)) + Space(05) + aResAliCF[nPos][2]
						Endif
						
						FmtLin ({cCabec, Transform (aResAliCF[nPos][4], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][5], "@E 999,999,999,999.99"),;
							Transform (aResAliCF[nPos][6], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][7], "@E 999,999,999,999.99"),;
							Transform (aResAliCF[nPos][8], "@E 999,999,999,999.99"), Transform (aResAliCF[nPos][9], "@E 999,999,999,999.99")},aLay[2],,"@X",@Li)
					Next
				Endif
			Endif           

			If aAliqs[nX][9]=="S"
				aContrAliq	:=	{0,0,0,0,0,0}
				For nXX := nX To Len(aALiqs)
					If aAliqs[nXX][9]=="S" .And. aAliqs[nX][1]==0
						nX := nXX
						aContrAliq[1]+= aALiqs[nXX][3]
						aContrAliq[2]+= aALiqs[nXX][4]
						aContrAliq[3]+= aALiqs[nXX][5]
						aContrAliq[4]+= aALiqs[nXX][6]
						aContrAliq[5]+= aALiqs[nXX][7]
						aContrAliq[6]+= aALiqs[nXX][8]
					Else
						Exit
					EndIf
				Next nXX
			EndIf

			FmtLin ({STR0031+Transform (aAliqs[nX][1],"@E 99.99%"), Transform (aContrAliq[1], "@E 999,999,999,999.99"), Transform (aContrAliq[2], "@E 999,999,999,999.99"),;
				Transform (aContrAliq[3], "@E 999,999,999,999.99"), Transform (aContrAliq[4], "@E 999,999,999,999.99"),;
				Transform (aContrAliq[5], "@E 999,999,999,999.99"), Transform (aContrAliq[6], "@E 999,999,999,999.99")},aLay[2],,"@X",@Li)
			Li++
		Next (nX)
		//
		FmtLin ({Iif (TRB->ES=="S",STR0015+STR0017, STR0015+STR0016), Transform (nValCont, "@E 999,999,999,999.99"), Transform (nZFranca, "@E 999,999,999,999.99"),;
			Transform (nValDebi, "@E 999,999,999,999.99"), Transform (nValCred, "@E 999,999,999,999.99"),;
			Transform (nBasDebi, "@E 999,999,999,999.99"), Transform (nBasCred, "@E 999,999,999,999.99")}, aLay[2],,"@X",@Li)
		//
		Li+=2
		@ Li, 001 Psay __PrtThinLine()
		Li++
		@ Li, 001 Psay STR0032 //"Contribuicao : "
		Li	+=	2

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ordena o array por aliquota + CFOP  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Asort(aAliqCFGer,,,{|x,y|Str(x[1])+x[2] < Str(y[1])+y[2]})					
		nContrAli	:= 0
		nAliq		:= 0 
		For nCt := 1 To len(aContrAliq)
  			aContrAliq[nCt] := 0
		Next nCt   		

		// Imprime o valor apurado por aliquota ou por aliquota + cfop
		For nX := 1 To Len(aAliqCFGer)
		                
			If (Li>58)
				cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
			EndIf                                                                                                                                       
						
			If nAliq <> aAliqCFGer[nX][1] 						
				If nX <> 1 
					@Li, 001 PSAY STR0047 + Space(04) + Transform(Abs(nContrAli),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Space(34)+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aContrAliq[3]),PesqPict("SF3","F3_VALCONT",14));
					+ Space(6) +  Transform(Abs(aContrAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))					
					Li += 2
					nContrAli 	:= 0            
					For nCt := 1 To len(aContrAliq)
						aContrAliq[nCt] := 0
					Next nCt   					
				Endif
				@Li, 001 PSAY STR0029 + Transform(aAliqCFGer[nX][1],"@E 99.99%")
				Li++  
				If mv_par10 == 1
					@Li, 001 PSAY STR0054
					Li++
				Endif
				nAliq 	:= aAliqCFGer[nX][1]
			Endif
			 
			If mv_par10 == 1
				@Li, 001 PSAY aAliqCFGer[nX][2] + Space(06) + Transform(Abs(aAliqCFGer[nX][3]),PesqPict("SF3","F3_VALCONT",14)) + IIf(aAliqCFGer[nX][3] < 0,"  (C)","  (D)")+ Space(34)+ Transform(Abs(aAliqCFGer[nX][4]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aAliqCFGer[nX][5]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aAliqCFGer[nX][6]),PesqPict("SF3","F3_VALCONT",14));
					+ Space(6) +  Transform(Abs(aAliqCFGer[nX][7]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aAliqCFGer[nX][8]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aAliqCFGer[nX][9]),PesqPict("SF3","F3_VALCONT",14))
				Li++                                                              
			Endif             
			nContrAli	+= aAliqCFGer[nX][3]              
			aContrAliq[1]+= aAliqCFGer[nX][4] 
			aContrAliq[2]+= aAliqCFGer[nX][5] 
			aContrAliq[3]+= aAliqCFGer[nX][6]
			aContrAliq[4]+= aAliqCFGer[nX][7] 
			aContrAliq[5]+= aAliqCFGer[nX][8] 
			aContrAliq[6]+= aAliqCFGer[nX][9]	 		
			aSomaAliq[1]+= aAliqCFGer[nX][4]            
			aSomaAliq[2]+= aAliqCFGer[nX][5]
			aSomaAliq[3]+= aAliqCFGer[nX][6]
			aSomaAliq[4]+= aAliqCFGer[nX][7]
			aSomaAliq[5]+= aAliqCFGer[nX][8]
			aSomaAliq[6]+= aAliqCFGer[nX][9] 			
		Next

		If (Li>58)
			cabec (ctitulo, cCabec1, cCabec2, nomeprog, ctamanho, 15)
		EndIf                                                                                                                                       

		@Li, 001 PSAY STR0047 + Space(04) + Transform(Abs(nContrAli),PesqPict("SF3","F3_VALCONT",14)) + IIf(nContrAli < 0,"  (C)","  (D)")+ Space(34)+ Transform(Abs(aContrAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aContrAliq[3]),PesqPict("SF3","F3_VALCONT",14));
					+ Space(6) +  Transform(Abs(aContrAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aContrAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aContrAliq[6]),PesqPict("SF3","F3_VALCONT",14))
		Li += 2

		//"Total Apurado............: "
		@Li, 001 PSAY STR0039
		Li++
		@Li, 011 PSAY Transform(Abs(nGValDebi-nGValCred),PesqPict("SF3","F3_VALCONT",14)) + IIf(nGValDebi-nGValCred < 0,"  (C)","  (D)")+ Space(34)+Transform(Abs(aSomaAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+ Space(16)+ Transform(Abs(aSomaAliq[3]),PesqPict("SF3","F3_VALCONT",14));
	   	+ Space(6) +  Transform(Abs(aSomaAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aSomaAliq[5]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[6]),PesqPict("SF3","F3_VALCONT",14)) 
	   	Li++
		Li++                         
		
		//"Total das Retencoes........: "
		@Li, 001 PSAY STR0143 // "Total de Retenção(Modalidade da Dedução: Vencimento)........: "  --> Empresas que nao sao de Direito Publico
		Li++
		@Li, 011 PSAY Transform(IIF(cTipo=="PIS",aRet[1],aRet[2]),PesqPict("SF3","F3_VALCONT",14))
		Li++
		Li++ 
		@Li, 001 PSAY STR0144 //"Total de Retenção - Orgãos Públicos(Modalidade da Dedução: Pagamento)........: "
		Li++
		@Li, 011 PSAY Transform(IIF(cTipo=="PIS",(aDedRet[1]-aRet[1]),(aDedRet[2]-aRet[2])),PesqPict("SF3","F3_VALCONT",14))
		Li++          
		Li++  
		nContrAli := IIF(cTipo=="PIS",(nGValDebi-nGValCred)-aDedRet[1],(nGValDebi-nGValCred)-aDedRet[2])  
		@Li, 001 PSAY STR0018
		Li++ 
		@Li, 011 PSAY Transform(IIF(cTipo=="PIS",Abs((nGValDebi-nGValCred)-aDedRet[1]),Abs((nGValDebi-nGValCred)-aDedRet[2])),PesqPict("SF3","F3_VALCONT",14))+;
			IIf(nContrAli < 0,"  (C)","  (D)") + Space(34) + Transform(Abs(aSomaAliq[1]),PesqPict("SF3","F3_VALCONT",14)) + Space(6)+  Transform(Abs(aSomaAliq[2]),PesqPict("SD2","D2_DESCZFR",14))+;
			Space(16)+ Transform(Abs(aSomaAliq[3]),PesqPict("SF3","F3_VALCONT",14))+ Space(6) +  Transform(Abs(aSomaAliq[4]),PesqPict("SF3","F3_VALCONT",14)) + Space(8)+  Transform(Abs(aSomaAliq[5]),PesqPict("SF3","F3_VALCONT",14))+;
			Space(6)+  Transform(Abs(aSomaAliq[6]),PesqPict("SF3","F3_VALCONT",14))//"Total da Contribuicao : "
		If cTipo == "PIS"
			aTotApur[01][01]  += nGValDebi-nGValCred
			aTotApur[01][02]  += aDedRet[1]
			aTotApur[01][03]  += (nGValDebi-nGValCred)-aDedRet[1]
		Else
			aTotApur[02][01]  += nGValDebi-nGValCred
			aTotApur[02][02]  += aDedRet[2]
			aTotApur[02][03]  += (nGValDebi-nGValCred)-aDedRet[2]
		Endif
	Endif
Return (.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³AjustaSX1 ³ Autor ³ Nereu Humberto Jr     ³ Data ³03.07.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Cria as perguntas necesarias para o programa                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSX1()

Local cPerg    := "MTR906"
Local aHelpPor :={}
Local aHelpEng :={}
Local aHelpSpa :={}

aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
//
/*-----------------------MV_PAR05--------------------------*/
Aadd( aHelpPor, "Informe numero do livro a ser processado" )
Aadd( aHelpEng, "Ledger Book number                      " )
Aadd( aHelpSpa, "Numero del Libro Fiscal                 " ) 

PutSx1(cPerg, "05","Livro Selecionado","Livro Seleccionado"	,"Selected Book","mv_ch5","C",3,0,0,"G",  			, "   ","","","mv_par05"," "," "," ","","","","","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR06--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe se deseja imprimir os valores   " )
Aadd( aHelpPor, "por filial, apresentando um resumo ao   " )
Aadd( aHelpPor, "final com o total das movimentacoes     " ) 
Aadd( aHelpEng, "Informe se deseja imprimir os valores   " )
Aadd( aHelpEng, "por filial, apresentando um resumo ao   " )
Aadd( aHelpEng, "final com o total das movimentacoes     " ) 
Aadd( aHelpSpa, "Informe se deseja imprimir os valores   " )
Aadd( aHelpSpa, "por filial, apresentando um resumo ao   " )
Aadd( aHelpSpa, "final com o total das movimentacoes     " ) 
PutSx1(cPerg, "06","Processa Filiais ?","Processa Filiais ?","Processa Filiais ?","mv_ch6","N",1,0,0,"C",,"","","","mv_par06","Sim","Sim","Sim","","Nao","Nao","Nao","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR07--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe a filial inicial a ser          " )
Aadd( aHelpPor, "processada, caso deseje imprimir o      " )
Aadd( aHelpPor, "relatorio por filial.                   " ) 
Aadd( aHelpEng, "Informe a filial inicial a ser          " )
Aadd( aHelpEng, "processada, caso deseje imprimir o      " )
Aadd( aHelpEng, "relatorio por filial.                   " ) 
Aadd( aHelpSpa, "Informe a filial inicial a ser          " )
Aadd( aHelpSpa, "processada, caso deseje imprimir o      " )
Aadd( aHelpSpa, "relatorio por filial.                   " ) 
PutSx1(cPerg, "07","Da Filial ?","Da Filial ?","Da Filial ?","mv_ch7","C",2,0,0,"G",,"","","","mv_par07","","","","","","","","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR08--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe a filial final a ser            " )
Aadd( aHelpPor, "processada, caso deseje imprimir o      " )
Aadd( aHelpPor, "relatorio por filial.                   " ) 
Aadd( aHelpEng, "Informe a filial final a ser            " )
Aadd( aHelpEng, "processada, caso deseje imprimir o      " )
Aadd( aHelpEng, "relatorio por filial.                   " ) 
Aadd( aHelpSpa, "Informe a filial final a ser            " )
Aadd( aHelpSpa, "processada, caso deseje imprimir o      " )
Aadd( aHelpSpa, "relatorio por filial.                   " ) 
PutSx1(cPerg, "08","Ate Filial ?","Ate Filial ?","Ate Filial ?","mv_ch8","C",2,0,0,"G",,"","","","mv_par08","","","","","","","","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR09--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe se deseja imprimir os totais   " )
Aadd( aHelpPor, "por dia. " )
Aadd( aHelpEng, "Informe se deseja imprimir os totais   " )
Aadd( aHelpEng, "por dia. " )
Aadd( aHelpSpa, "Informe se deseja imprimir os totais   " )
Aadd( aHelpSpa, "por dia. " ) 
PutSx1(cPerg, "09","Total por Dia ?","Total por Dia ?","Total por Dia ?","mv_ch9","N",1,0,0,"C",,"","","","mv_par09","Sim","Sim","Sim","","Nao","Nao","Nao","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR10--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe se deseja detalhar os CFOPs    " )
Aadd( aHelpPor, "processados em cada aliquota           " )
Aadd( aHelpPor, "apresentada no relatório.              " )
Aadd( aHelpEng, "Informe se deseja detalhar os CFOPs    " )
Aadd( aHelpEng, "processados em cada aliquota           " )
Aadd( aHelpEng, "apresentada no relatório.              " )
Aadd( aHelpSpa, "Informe se deseja detalhar os CFOPs    " )
Aadd( aHelpSpa, "processados em cada aliquota           " )
Aadd( aHelpSpa, "apresentada no relatório.              " )
PutSx1(cPerg, "10","Detalha CFOP ?","Detalha CFOP","Detalha CFOP","mv_cha","N",1,0,2,"C",,"","","","mv_par10","Sim","Sim","Sim","","Nao","Nao","Nao","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)

/*-----------------------MV_PAR11--------------------------*/
aHelpPor	:=	{}
aHelpEng	:=	{}
aHelpSpa	:=	{}
Aadd( aHelpPor, "Informe se deseja agrupar os itens     " )
Aadd( aHelpPor, "das notas fiscais ao emitir relatório  " )
Aadd( aHelpPor, "de forma analítica                     " )
Aadd( aHelpEng, "Informe se deseja agrupar os itens     " )
Aadd( aHelpEng, "das notas fiscais ao emitir relatório  " )
Aadd( aHelpEng, "de forma analítica                     " )
Aadd( aHelpSpa, "Informe se deseja agrupar os itens     " )
Aadd( aHelpSpa, "das notas fiscais ao emitir relatório  " )
Aadd( aHelpSpa, "de forma analítica                     " )
PutSx1(cPerg, "11","Resume as Notas Fiscais?","Resume as Notas Fiscais?","Resume as Notas Fiscais?","mv_chb","N",1,0,2,"C",,"","","","mv_par11","Sim","Sim","Sim","","Nao","Nao","Nao","","","","","","","",""," ",aHelpPor,aHelpEng,aHelpSpa)
Return 

